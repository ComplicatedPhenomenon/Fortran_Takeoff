part_qq=(2*((4*(-(gm**2*m**2) + (-2*m**2 + s12 + s14 + s24)**2/4.)*&
         (gm**4*(-8*m**4 + 4*m**2*(-10*s12 + s13 + s14 + s23 + s24) - &
              4*(s14*s23 + s13*s24)) + &
           16*(-2*m**2 + s12 + s14 + s24)**2*&
            (m**2*s12 + (2*m**4 + s14*s23 + s13*s24 - &
                 m**2*(s13 + s14 + s23 + s24))/2.) + &
           gm**2*(96*m**6 - 8*m**4*&
               (24*s12 - s13 + 15*s14 - s23 + 15*s24) - &
              4*(s12 + s14 + s24)*&
               (-(s14*s23) - s13*s24 + 6*s14*s24 + 3*s12*(s14 + s24)) + &
              4*m**2*(6*s12**2 + 5*s14**2 - 3*s14*s23 - &
                 s12*(s13 - 25*s14 + s23 - 25*s24) + 38*s14*s24 - &
                 s23*s24 + 5*s24**2 - s13*(s14 + 3*s24)))))/&
       (s12**2*(-gm**2 - 2*m**2 + s12 + s14 + s24)**2) + &
      (2*(-2*m**2 + s12 + s13 + s14)**2*&
         (gm**2*(gm**2 - m**2)*&
            (-4*m**4 + 2*m**2*(-2*s12 + s13 + s14 + s23 + s24) - &
              2*(s14*s23 + s13*s24)) + &
           8*(-2*m**2 + s12 + s13 + s14)**2*&
            (m**2*s12 + (2*m**4 + s14*s23 + s13*s24 - &
                 m**2*(s13 + s14 + s23 + s24))/2.) + &
           (-2*m**2 + s12 + s13 + s14)*&
            (-4*m**2*(8*m**4 + s13*s23 + s23**2 + s14*s24 + s24**2 + &
                 s12*(s23 + s24) - &
                 m**2*(4*s12 + s13 + s14 + 5*s23 + 5*s24)) - &
              2*gm**2*(32*m**4 + 3*s13*s23 + 4*s14*s23 + 3*s23**2 + &
                 4*s13*s24 + 3*s14*s24 + 3*s24**2 + 3*s12*(s23 + s24) - &
                 m**2*(4*s12 + 7*s13 + 7*s14 + 19*s23 + 19*s24)))))/&
       ((-gm**2 - m**2 + s12 + s13 + s14)**2*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) + &
      (16*(gm**2*m**2 - (-2*m**2 + s12 + s13 + s23)**2/4.)*&
         (-2*(-2*m**2 + s12 + s13 + s23)**2*&
            (2*m**4 + s14*s23 + s13*s24 - &
              m**2*(2*s12 + s13 + s14 + s23 + s24)) - &
           (gm**4*(-8*m**4 + 4*m**2*(-10*s12 + s13 + s14 + s23 + s24) - &
                4*(s14*s23 + s13*s24)))/4. - &
           (gm**2*(448*m**6 - &
                8*m**4*(60*s12 + 47*s13 + 19*s14 + 47*s23 + 19*s24) - &
                4*(s12 + s13 + s23)*&
                 (6*s13*s23 + 7*s14*s23 + 3*s12*(s13 + s23) + 7*s13*s24) &
+ 4*m**2*(26*s12**2 + 13*s13**2 + s23*(45*s14 + 13*s23 + 7*s24) + &
                   s12*(57*s13 + 7*s14 + 57*s23 + 7*s24) + &
                   s13*(7*s14 + 62*s23 + 45*s24))))/4.))/&
       (s12**2*(-gm**2 - 2*m**2 + s12 + s13 + s23)**2) + &
      (2*(4*(-2*m**2 + s12 + s23 + s24)**2*&
            (16*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
              s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
              3*s14*s23*s24 + s13*s24**2 + &
              s12**2*(s13 + s14 + s23 + s24) + &
              s12*(s13 + s14 + s23 + s24)**2 - &
              4*m**4*(4*s12 + s13 + s14 + s23 + s24) + &
              m**2*(4*s12**2 - s13**2 - s14**2 - 2*s14*s23 - s23**2 + &
                 2*s14*s24 - 6*s23*s24 - s24**2 - &
                 2*s13*(3*s14 - s23 + s24))) - &
           2*gm**4*(-3*s12*(m**2 - s23)*(-2*m**2 + s12 + s13 + s23) + &
              6*(-2*m**2 + s12 + s13 + s14)*(m**2 - s23)*(m**2 - s24) - &
              3*s12*(m**2 - s24)*(-2*m**2 + s12 + s14 + s24) - &
              5*(-2*m**2 + s12 + s23 + s24)*&
               (2*m**4 + 2*s12**2 + s14*s23 + s13*s24 + &
                 2*s12*(s13 + s14 + s23 + s24) - &
                 m**2*(4*s12 + s13 + s14 + s23 + s24))) + &
           4*gm**2*(-2*m**2 + s12 + s23 + s24)*&
            (3*s12*(m**2 - s23)*(-2*m**2 + s12 + s13 + s23) - &
              s12*(-2*m**2 + s12 + s14 + s24)*&
               (-11*m**2 + 4*s12 + 4*s13 + 4*s23 + 3*s24) + &
              (-2*m**2 + s12 + s23 + s24)*&
               (2*m**4 - 2*s12**2 + s13**2 + 2*m**2*(s12 - s13 - s14) + &
                 s14**2 + s13*s23 - s14*s23 - s13*s24 + s14*s24 - &
                 s12*(s13 + s14 + 2*(s23 + s24))) - &
              2*(-2*m**2 + s12 + s13 + s14)*&
               (13*m**4 + s12**2 + 2*s13*s23 + s14*s23 + 2*s23**2 + &
                 s13*s24 + 2*s14*s24 + 5*s23*s24 + 2*s24**2 - &
                 m**2*(7*s12 + 3*s13 + 3*s14 + 11*s23 + 11*s24) + &
                 s12*(s13 + s14 + 3*(s23 + s24))))))/&
       (s12*(-gm**2 - m**2 + s12 + s23 + s24)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) - &
      (4*(-2*(-2*m**2 + s12 + s13 + s14)**2*&
            (16*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
              s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
              3*s14*s23*s24 + s13*s24**2 + &
              s12**2*(s13 + s14 + s23 + s24) + &
              s12*(s13 + s14 + s23 + s24)**2 - &
              4*m**4*(4*s12 + s13 + s14 + s23 + s24) + &
              m**2*(4*s12**2 - s13**2 - s14**2 - 2*s14*s23 - s23**2 + &
                 2*s14*s24 - 6*s23*s24 - s24**2 - &
                 2*s13*(3*s14 - s23 + s24))) + &
           gm**4*(-3*s12*(m**2 - s13)*(-2*m**2 + s12 + s13 + s23) - &
              3*s12*(m**2 - s14)*(-2*m**2 + s12 + s14 + s24) + &
              6*(m**2 - s13)*(m**2 - s14)*(-2*m**2 + s12 + s23 + s24) - &
              5*(-2*m**2 + s12 + s13 + s14)*&
               (2*m**4 + 2*s12**2 + s14*s23 + s13*s24 + &
                 2*s12*(s13 + s14 + s23 + s24) - &
                 m**2*(4*s12 + s13 + s14 + s23 + s24))) + &
           2*gm**2*(-2*m**2 + s12 + s13 + s14)*&
            (-3*s12*(m**2 - s13)*(-2*m**2 + s12 + s13 + s23) + &
              s12*(-11*m**2 + 4*s12 + 4*s13 + 3*s14 + 4*s23)*&
               (-2*m**2 + s12 + s14 + s24) + &
              2*(-2*m**2 + s12 + s23 + s24)*&
               (7*m**4 + s13**2 + 3*s13*s14 + s14**2 + s12*(s13 + s14) + &
                 s13*s23 + s14*s24 - &
                 m**2*(2*s12 + 6*s13 + 6*s14 + s23 + s24)) - &
              (2*m**2 - s12 - s13 - s14)*&
               (10*m**4 + 4*s12**2 + s13*s23 + 3*s14*s23 + s23**2 + &
                 3*s13*s24 + s14*s24 + 4*s23*s24 + s24**2 - &
                 4*m**2*(3*s12 + s13 + s14 + 2*s23 + 2*s24) + &
                 s12*(4*s13 + 4*s14 + 5*(s23 + s24))))))/&
       (s12*(-gm**2 - m**2 + s12 + s13 + s14)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
      (4*(4*(-2*m**2 + s12 + s13 + s14)*(-2*m**2 + s12 + s13 + s23)*&
            (-2*m**2 + s12 + s14 + s24)*(-2*m**2 + s12 + s23 + s24) + &
           2*gm**4*(2*m**4 - s12**2 + s14*s23 + &
              m**2*(8*s12 - s13 - s14 - s23 - s24) + s13*s24 - &
              s12*(s13 + s14 + s23 + s24)) + &
           gm**2*(-((m**2 - s13)*(-2*m**2 + s12 + s13 + s23)*&
                 (-2*m**2 + s12 + s23 + s24)) + &
              (-2*m**2 + s12 + s14 + s24)*&
               (4*s12*(-2*m**2 + s12 + s13 + s23) - &
                 (m**2 - s14)*(-2*m**2 + s12 + s23 + s24)) + &
              (-2*m**2 + s12 + s13 + s14)*&
               (-((m**2 - s23)*(-2*m**2 + s12 + s13 + s23)) - &
                 (m**2 - s24)*(-2*m**2 + s12 + s14 + s24) + &
                 2*(-2*m**2 + s12 + s23 + s24)*&
                  (6*m**2 - 2*(s12 + s13 + s14 + s23 + s24))))))/s12**2 + &
      (2*(-4*(-2*m**2 + s12 + s14 + s24)**2*&
            (16*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
              s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
              3*s14*s23*s24 + s13*s24**2 + &
              s12**2*(s13 + s14 + s23 + s24) + &
              s12*(s13 + s14 + s23 + s24)**2 - &
              4*m**4*(4*s12 + s13 + s14 + s23 + s24) + &
              m**2*(4*s12**2 - s13**2 - s14**2 - 2*s14*s23 - s23**2 + &
                 2*s14*s24 - 6*s23*s24 - s24**2 - &
                 2*s13*(3*s14 - s23 + s24))) - &
           2*gm**4*(24*m**6 - 10*s12**3 - 9*s13*s14*s23 - 8*s14**2*s23 - &
              3*s14*s23**2 - 3*s13**2*s24 - 8*s13*s14*s24 - &
              9*s13*s23*s24 - 8*s14*s23*s24 - 8*s13*s24**2 - &
              s12**2*(13*s13 + 20*s14 + 13*s23 + 20*s24) - &
              s12*(3*s13**2 + 13*s13*s14 + 10*s14**2 + 6*s13*s23 + &
                 21*s14*s23 + 3*s23**2 + 21*s13*s24 + 20*s14*s24 + &
                 13*s23*s24 + 10*s24**2) + &
              m**2*(18*s12**2 + 3*s13**2 + 17*s13*s14 + 8*s14**2 - &
                 26*s13*s23 + 47*s14*s23 + 3*s23**2 + 47*s13*s24 + &
                 12*s14*s24 + 17*s23*s24 + 8*s24**2 + &
                 4*s12*(15*s13 + 7*s14 + 15*s23 + 7*s24)) + &
              m**4*(72*s12 - 4*(s13 + 12*s14 + s23 + 12*s24))) + &
           gm**2*(-8*m**2*(m**2 - s13)*(-2*m**2 + s12 + s13 + s23)*&
               (-2*m**2 + s12 + s23 + s24) + &
              4*(-2*m**2 + s12 + s14 + s24)**2*&
               (4*m**4 + 4*s12**2 + 2*s14*s23 + &
                 m**2*(3*s12 - s13 - 3*s14 - 2*s23 - 2*s24) + s13*s24 + &
                 s14*s24 + s12*(4*s13 + 3*s14 + 4*s23 + 2*s24)) + &
              4*(-2*m**2 + s12 + s14 + s24)*&
               (((-2*m**2 + s12 + s13 + s23)*&
                    (-16*m**2*s12 + &
                      4*(m**2 - s13)*(m**2 + s12 - 2*s23 + s24)))/2. + &
                 (2*m**2 - s12 - s23 - s24)*&
                  (2*m**4 + m**2*(-3*s12 - 9*s13 + s14 - 3*s23 - 3*s24) + &
                    3*s13*(s12 + s13 + s14 + s23 + s24))) + &
              (-2*m**2 + s12 + s13 + s14)*&
               (16*m**6 + 8*m**4*&
                  (9*s12 + 6*s13 + 10*s14 - 4*s23 + 18*s24) + &
                 4*(s12 + s14 + s24)*&
                  (4*s12**2 - s13*s23 + s14*s23 - s23**2 + 4*s13*s24 + &
                    5*s14*s24 + 5*s23*s24 + 5*s24**2 + &
                    s12*(4*s13 + 4*s14 + 3*s23 + 9*s24)) - &
                 4*m**2*(18*s12**2 + 6*s14**2 + s14*s23 + 34*s14*s24 + &
                    13*s23*s24 + 28*s24**2 + 3*s13*(s14 + 5*s24) + &
                    s12*(15*s13 + 24*s14 + 7*s23 + 46*s24))))))/&
       (s12**2*(-gm**2 - 2*m**2 + s12 + s14 + s24)) - &
      (2*(-4*(-2*m**2 + s12 + s14 + s24)**2*&
            (16*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
              s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
              3*s14*s23*s24 + s13*s24**2 + &
              s12**2*(s13 + s14 + s23 + s24) + &
              s12*(s13 + s14 + s23 + s24)**2 - &
              4*m**4*(4*s12 + s13 + s14 + s23 + s24) + &
              m**2*(4*s12**2 - s13**2 - s14**2 - 2*s14*s23 - s23**2 + &
                 2*s14*s24 - 6*s23*s24 - s24**2 - &
                 2*s13*(3*s14 - s23 + s24))) - &
           2*gm**4*(24*m**6 - 10*s12**3 - 9*s13*s14*s23 - 8*s14**2*s23 - &
              3*s14*s23**2 - 3*s13**2*s24 - 8*s13*s14*s24 - &
              9*s13*s23*s24 - 8*s14*s23*s24 - 8*s13*s24**2 - &
              s12**2*(13*s13 + 20*s14 + 13*s23 + 20*s24) - &
              s12*(3*s13**2 + 13*s13*s14 + 10*s14**2 + 6*s13*s23 + &
                 21*s14*s23 + 3*s23**2 + 21*s13*s24 + 20*s14*s24 + &
                 13*s23*s24 + 10*s24**2) + &
              m**2*(18*s12**2 + 3*s13**2 + 17*s13*s14 + 8*s14**2 - &
                 26*s13*s23 + 47*s14*s23 + 3*s23**2 + 47*s13*s24 + &
                 12*s14*s24 + 17*s23*s24 + 8*s24**2 + &
                 4*s12*(15*s13 + 7*s14 + 15*s23 + 7*s24)) + &
              m**4*(72*s12 - 4*(s13 + 12*s14 + s23 + 12*s24))) + &
           gm**2*(-8*m**2*(m**2 - s13)*(-2*m**2 + s12 + s13 + s23)*&
               (-2*m**2 + s12 + s23 + s24) + &
              4*(-2*m**2 + s12 + s14 + s24)**2*&
               (4*m**4 + 4*s12**2 + 2*s14*s23 + &
                 m**2*(3*s12 - s13 - 3*s14 - 2*s23 - 2*s24) + s13*s24 + &
                 s14*s24 + s12*(4*s13 + 3*s14 + 4*s23 + 2*s24)) + &
              4*(-2*m**2 + s12 + s14 + s24)*&
               (((-2*m**2 + s12 + s13 + s23)*&
                    (-16*m**2*s12 + &
                      4*(m**2 - s13)*(m**2 + s12 - 2*s23 + s24)))/2. + &
                 (2*m**2 - s12 - s23 - s24)*&
                  (2*m**4 + m**2*(-3*s12 - 9*s13 + s14 - 3*s23 - 3*s24) + &
                    3*s13*(s12 + s13 + s14 + s23 + s24))) + &
              (-2*m**2 + s12 + s13 + s14)*&
               (16*m**6 + 8*m**4*&
                  (9*s12 + 6*s13 + 10*s14 - 4*s23 + 18*s24) + &
                 4*(s12 + s14 + s24)*&
                  (4*s12**2 - s13*s23 + s14*s23 - s23**2 + 4*s13*s24 + &
                    5*s14*s24 + 5*s23*s24 + 5*s24**2 + &
                    s12*(4*s13 + 4*s14 + 3*s23 + 9*s24)) - &
                 4*m**2*(18*s12**2 + 6*s14**2 + s14*s23 + 34*s14*s24 + &
                    13*s23*s24 + 28*s24**2 + 3*s13*(s14 + 5*s24) + &
                    s12*(15*s13 + 24*s14 + 7*s23 + 46*s24))))))/&
       (s12*(-gm**2 - 2*m**2 + s12 + s14 + s24)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
      (4*(-6*gm**6*s12*(4*m**4 + 3*s12**2 + &
              3*s12*(s13 + s14 + s23 + s24) - &
              2*m**2*(2*s12 + s13 + s14 + s23 + s24) + &
              2*(s14*s23 + s13*s24)) + &
           2*(-2*m**2 + s12 + s13 + s14)**2*&
            (128*m**6*s12 - s13**2*s14*s23 + s14**3*s23 + &
              2*s14**2*s23**2 + s14*s23**3 + s13**3*s24 - &
              s13*s14**2*s24 - 4*s13*s14*s23*s24 - s13*s23**2*s24 + &
              2*s13**2*s24**2 - s14*s23*s24**2 + s13*s24**3 - &
              s12*(s13 + s14 + s23 + s24)*&
               (s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                 2*s14*(-3*s23 + s24) + (s23 + s24)**2) - &
              4*m**4*(32*s12**2 - (s13 - s14 - s23 + s24)**2 + &
                 16*s12*(s13 + s14 + s23 + s24)) - &
              s12**2*(s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                 (s23 + s24)**2 + s14*(-6*s23 + 2*s24)) + &
              m**2*(32*s12**3 - s13**3 - s14**3 - 7*s14**2*s23 - &
                 7*s14*s23**2 - s23**3 + s13**2*(s14 + s23 - 7*s24) + &
                 s14**2*s24 + 6*s14*s23*s24 + s23**2*s24 + s14*s24**2 + &
                 s23*s24**2 - s24**3 + &
                 32*s12**2*(s13 + s14 + s23 + s24) + &
                 s13*(s14**2 + s23**2 + 6*s23*s24 - 7*s24**2 + &
                    6*s14*(s23 + s24)) + &
                 8*s12*(s13**2 + s14**2 + 2*s13*(s14 + 2*s23) + &
                    4*s14*s24 + (s23 + s24)**2))) + &
           gm**4*(-128*m**6*s12 + 26*s12**4 + &
              2*(s13 + s14)*(2*s13 - 2*s14 + s23 - s24)*&
               (s14*s23 - s13*s24) + &
              8*s12**3*(7*s13 + 7*s14 + 6*(s23 + s24)) + &
              2*s12**2*(14*s13**2 + 14*s14**2 + 39*s14*s23 + 11*s23**2 + &
                 31*s14*s24 + 10*s23*s24 + 11*s24**2 + &
                 s13*(28*s14 + 31*s23 + 39*s24)) + &
              2*m**4*(196*s12**2 - &
                 2*(2*s13 - 2*s14 + s23 - s24)*(s13 - s14 - s23 + s24) + &
                 8*s12*(9*s13 + 9*s14 + 5*(s23 + s24))) + &
              s12*(-2*s13**3 + s13**2*(-6*s14 + 8*s23 + 14*s24) + &
                 2*s14*(-s14**2 + 7*s14*s23 + 6*s23**2 + 4*s14*s24 + &
                    9*s23*s24 + 5*s24**2) + &
                 2*s13*(-3*s14**2 + 5*s23**2 + 9*s23*s24 + 6*s24**2 + &
                    21*s14*(s23 + s24))) - &
              2*m**2*(72*s12**3 - 2*s13**3 + &
                 s13**2*(2*s14 + s23 - 5*s24) + &
                 s14*(-2*s14**2 + 3*s23**2 - 4*s23*s24 + s24**2 + &
                    s14*(-5*s23 + s24)) + &
                 s12**2*(114*s13 + 114*s14 + 98*(s23 + s24)) + &
                 s13*(2*s14**2 + s23**2 - 4*s23*s24 + 3*s24**2 + &
                    4*s14*(s23 + s24)) + &
                 s12*(13*s13**2 + 13*s14**2 + 11*s23**2 + 18*s23*s24 + &
                    11*s24**2 + 8*s14*(5*s23 + 4*s24) + &
                    s13*(46*s14 + 32*s23 + 40*s24)))) - &
           2*gm**2*(2*m**2 - s12 - s13 - s14)*&
            (128*m**6*s12 - 4*s12**4 - s13**2*s14*s23 + s14**3*s23 - &
              4*s13*s14*s23**2 - s14*s23**3 + s13**3*s24 - &
              s13*s14**2*s24 + 4*s13**2*s23*s24 + 4*s14**2*s23*s24 + &
              s13*s23**2*s24 - 4*s13*s14*s24**2 + s14*s23*s24**2 - &
              s13*s24**3 + 2*s12**2*&
               (s13**2 + s14**2 - 12*s14*s23 - 5*s23**2 + &
                 s13*(2*s14 - 7*s23 - 12*s24) - 7*s14*s24 - 4*s23*s24 - &
                 5*s24**2) - s12**3*(7*s13 + 7*s14 + 9*(s23 + s24)) - &
              2*m**4*(16*s12**2 - &
                 3*(s13**2 - 2*s13*s14 + s14**2 - (s23 - s24)**2) + &
                 8*s12*(2*s13 + 2*s14 + 9*(s23 + s24))) + &
              s12*(5*s13**3 + 5*s14**3 - 5*s23**3 + &
                 s13**2*(15*s14 - s23 - 6*s24) - 3*s23**2*s24 - &
                 3*s23*s24**2 - 5*s24**3 - s14**2*(6*s23 + s24) - &
                 s14*(14*s23**2 + 11*s23*s24 + 11*s24**2) + &
                 s13*(15*s14**2 - 11*s23**2 - 11*s23*s24 - 14*s24**2 - &
                    17*s14*(s23 + s24))) + &
              m**2*(-8*s12**3 - s13**3 - s14**3 - 7*s14**2*s23 + &
                 7*s14*s23**2 + s23**3 + s13**2*(s14 - 3*s23 - 7*s24) - &
                 3*s14**2*s24 - 10*s14*s23*s24 - s23**2*s24 + &
                 3*s14*s24**2 - s23*s24**2 + s24**3 + &
                 2*s12**2*(5*s13 + 5*s14 + 27*(s23 + s24)) + &
                 s13*(s14**2 + 3*s23**2 - 10*s23*s24 + 7*s24**2 + &
                    10*s14*(s23 + s24)) + &
                 s12*(-19*s13**2 - 19*s14**2 + 64*s14*s23 + 51*s23**2 + &
                    48*s14*s24 + 50*s23*s24 + 51*s24**2 + &
                    s13*(-18*s14 + 48*s23 + 64*s24))))))/&
       (s12*(-gm**2 - m**2 + s12 + s13 + s14)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) + &
      (4*(-6*gm**6*s12*(4*m**4 + 3*s12**2 + &
              3*s12*(s13 + s14 + s23 + s24) - &
              2*m**2*(2*s12 + s13 + s14 + s23 + s24) + &
              2*(s14*s23 + s13*s24)) + &
           2*(-2*m**2 + s12 + s23 + s24)**2*&
            (128*m**6*s12 - s13**2*s14*s23 + s14**3*s23 + &
              2*s14**2*s23**2 + s14*s23**3 + s13**3*s24 - &
              s13*s14**2*s24 - 4*s13*s14*s23*s24 - s13*s23**2*s24 + &
              2*s13**2*s24**2 - s14*s23*s24**2 + s13*s24**3 - &
              s12*(s13 + s14 + s23 + s24)*&
               (s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                 2*s14*(-3*s23 + s24) + (s23 + s24)**2) - &
              4*m**4*(32*s12**2 - (s13 - s14 - s23 + s24)**2 + &
                 16*s12*(s13 + s14 + s23 + s24)) - &
              s12**2*(s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                 (s23 + s24)**2 + s14*(-6*s23 + 2*s24)) + &
              m**2*(32*s12**3 - s13**3 - s14**3 - 7*s14**2*s23 - &
                 7*s14*s23**2 - s23**3 + s13**2*(s14 + s23 - 7*s24) + &
                 s14**2*s24 + 6*s14*s23*s24 + s23**2*s24 + s14*s24**2 + &
                 s23*s24**2 - s24**3 + &
                 32*s12**2*(s13 + s14 + s23 + s24) + &
                 s13*(s14**2 + s23**2 + 6*s23*s24 - 7*s24**2 + &
                    6*s14*(s23 + s24)) + &
                 8*s12*(s13**2 + s14**2 + 2*s13*(s14 + 2*s23) + &
                    4*s14*s24 + (s23 + s24)**2))) + &
           gm**4*(-128*m**6*s12 + 26*s12**4 + &
              2*(s13 - s14 + 2*s23 - 2*s24)*(s23 + s24)*&
               (-(s14*s23) + s13*s24) + &
              8*s12**3*(6*s13 + 6*s14 + 7*(s23 + s24)) + &
              s12**2*(22*s13**2 + 22*s14**2 + 28*(s23 + s24)**2 + &
                 s14*(78*s23 + 62*s24) + s13*(20*s14 + 62*s23 + 78*s24)) &
+ 2*m**4*(196*s12**2 + 2*(s13 - s14 + 2*s23 - 2*s24)*&
                  (s13 - s14 - s23 + s24) + &
                 8*s12*(5*s13 + 5*s14 + 9*(s23 + s24))) + &
              2*s12*(-(s23 + s24)**3 + s14**2*(6*s23 + 5*s24) + &
                 s13**2*(5*s23 + 6*s24) + &
                 s14*(7*s23**2 + 21*s23*s24 + 4*s24**2) + &
                 s13*(4*s23**2 + 21*s23*s24 + 7*s24**2 + &
                    9*s14*(s23 + s24))) - &
              2*m**2*(72*s12**3 + 3*s14**2*s23 - 5*s14*s23**2 - &
                 2*s23**3 + s14**2*s24 + 4*s14*s23*s24 + 2*s23**2*s24 + &
                 s14*s24**2 + 2*s23*s24**2 - 2*s24**3 + &
                 s13**2*(s23 + 3*s24) + &
                 s12**2*(98*s13 + 98*s14 + 114*(s23 + s24)) + &
                 s13*(-4*s14*(s23 + s24) + (s23 - s24)*(s23 + 5*s24)) + &
                 s12*(11*s13**2 + 11*s14**2 + 13*s23**2 + 46*s23*s24 + &
                    13*s24**2 + 8*s14*(5*s23 + 4*s24) + &
                    2*s13*(9*s14 + 16*s23 + 20*s24)))) - &
           2*gm**2*(2*m**2 - s12 - s23 - s24)*&
            (128*m**6*s12 - 4*s12**4 + s13**2*s14*s23 - s14**3*s23 + &
              4*s13*s14*s23**2 + s14*s23**3 - s13**3*s24 + &
              s13*s14**2*s24 - 4*s13**2*s23*s24 - 4*s14**2*s23*s24 - &
              s13*s23**2*s24 + 4*s13*s14*s24**2 - s14*s23*s24**2 + &
              s13*s24**3 - s12**3*(9*s13 + 9*s14 + 7*(s23 + s24)) - &
              2*s12**2*(5*s13**2 + 5*s14**2 - (s23 + s24)**2 + &
                 s14*(12*s23 + 7*s24) + s13*(4*s14 + 7*s23 + 12*s24)) - &
              2*m**4*(16*s12**2 + &
                 3*(s13**2 - 2*s13*s14 + s14**2 - (s23 - s24)**2) + &
                 8*s12*(9*s13 + 9*s14 + 2*(s23 + s24))) - &
              s12*(5*s13**3 + 5*s14**3 - 5*(s23 + s24)**3 + &
                 s14**2*(14*s23 + 11*s24) + &
                 s13**2*(3*s14 + 11*s23 + 14*s24) + &
                 s14*(6*s23**2 + 17*s23*s24 + s24**2) + &
                 s13*(3*s14**2 + s23**2 + 17*s23*s24 + 6*s24**2 + &
                    11*s14*(s23 + s24))) + &
              m**2*(-8*s12**3 + s13**3 + s14**3 + 7*s14**2*s23 - &
                 7*s14*s23**2 - s23**3 + 3*s14**2*s24 + 10*s14*s23*s24 + &
                 s23**2*s24 - 3*s14*s24**2 + s23*s24**2 - s24**3 + &
                 s13**2*(-s14 + 3*s23 + 7*s24) + &
                 2*s12**2*(27*s13 + 27*s14 + 5*(s23 + s24)) - &
                 s13*(s14**2 + 3*s23**2 - 10*s23*s24 + 7*s24**2 + &
                    10*s14*(s23 + s24)) + &
                 s12*(51*s13**2 + 51*s14**2 + 64*s14*s23 - 19*s23**2 + &
                    48*s14*s24 - 18*s23*s24 - 19*s24**2 + &
                    s13*(50*s14 + 48*s23 + 64*s24))))))/&
       (s12*(-gm**2 - m**2 + s12 + s23 + s24)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) - &
      (8*(-2*m**2 + s12 + s13 + s14)**2*(-2*m**2 + s12 + s14 + s24)**2*&
          (4*m**4 + 2*(s14*s23 + s13*s24) + &
            m**2*(4*s12 - 2*(s13 + s14 + s23 + s24))) + &
         24*gm**6*(m**4*(s13 - s14 - s23 + s24) - &
            m**2*(2*s12**2 + s13**2 - s14*s23 - &
               s13*(s14 + s23 - 2*s24) + 2*s12*(2*s13 + s23 + s24)) + &
            s13*(2*s12**2 - s14*s23 + s13*s24 + &
               2*s12*(s13 + s14 + s23 + s24))) - &
         8*gm**2*(2*m**2 - s12 - s13 - s14)*&
          (4*m**6*(26*s12 - 10*s13 + 11*s14 - 5*s23 + 10*s24) - &
            2*m**4*(40*s12**2 - 7*s13**2 + 17*s14**2 + 3*s23**2 + &
               47*s14*s24 - s23*s24 + 13*s24**2 - &
               s13*(7*s14 + 13*s23 + 16*s24) + &
               2*s12*(7*s13 + 32*s14 + 2*s23 + 36*s24)) - &
            (s12 + s14 + s24)*&
             (-8*s13**2*s24 + 3*s12**2*(s14 + s23 + s24) - &
               s13*(2*s14*(s23 - 3*s24) + s24*(-3*s23 + s24)) + &
               s14*(3*s23**2 + 2*s23*s24 + 3*s24**2 + &
                  3*s14*(s23 + s24)) + &
               3*s12*(s14**2 + 2*s14*s23 + s23**2 + 3*s14*s24 + &
                  s23*s24 + s24**2 + s13*(s14 + s23 + s24))) + &
            m**2*(14*s12**3 + 6*s14**3 + 11*s14**2*s23 + 9*s14*s23**2 + &
               37*s14**2*s24 + 12*s14*s23*s24 + 3*s23**2*s24 + &
               37*s14*s24**2 + 5*s23*s24**2 + 2*s24**3 - &
               2*s13**2*(4*s14 + 11*s24) + &
               s12**2*(30*s13 + 47*s14 + 15*s23 + 50*s24) + &
               4*s13*(s14**2 - 2*s24*(s23 + s24) + &
                  s14*(-4*s23 + 2*s24)) + &
               s12*(-8*s13**2 + 39*s14**2 + 26*s14*s23 + 9*s23**2 + &
                  102*s14*s24 + 20*s23*s24 + 40*s24**2 + &
                  s13*(38*s14 - 8*s23 + 30*s24)))) - &
         2*gm**4*(112*m**8 - 18*s12**4 + 12*s13**2*s14*s23 + &
            14*s13*s14**2*s23 - 4*s14**3*s23 + 18*s13*s14*s23**2 - &
            6*s14**2*s23**2 - 24*s13**3*s24 + 38*s13**2*s14*s24 + &
            20*s13*s14**2*s24 + 18*s13**2*s23*s24 + 20*s13*s14*s23*s24 - &
            4*s14**2*s23*s24 - 10*s13**2*s24**2 + 20*s13*s14*s24**2 - &
            12*s12**3*(3*s13 + 4*s14 + 2*s23 + 3*s24) - &
            8*m**6*(68*s12 + 9*s13 + 26*s14 - 4*s23 + 25*s24) - &
            2*s12**2*(9*s13**2 + 21*s14**2 + 26*s14*s23 + 3*s23**2 + &
               30*s14*s24 + 12*s23*s24 + 9*s24**2 + &
               s13*(21*s14 + 3*s23 + 20*s24)) + &
            2*m**4*(62*s12**2 - 35*s13**2 + 10*s14**2 + 14*s14*s23 + &
               6*s23**2 + 109*s14*s24 + 17*s23*s24 + 5*s24**2 + &
               2*s12*(139*s13 + 55*s14 + 3*s23 + 39*s24) + &
               s13*(137*s14 - 35*s23 + 108*s24)) + &
            s12*(2*s13**2*(3*s14 + 9*s23 - 2*s24) - &
               2*s13*(3*s14**2 - 4*s14*s23 - 9*s23**2 - 5*s14*s24 + &
                  3*s23*s24 + 2*s24**2) - &
               4*s14*(3*s14**2 + 8*s14*s23 + 3*s23**2 + 6*s14*s24 + &
                  7*s23*s24 + 3*s24**2)) + &
            2*m**2*(30*s12**3 + 12*s13**3 + &
               s13**2*(-25*s14 + 27*s23 + 4*s24) + &
               s12**2*(-4*s13 + 43*s14 + 29*s23 + 40*s24) - &
               s13*(17*s14**2 + 38*s14*s23 + 9*s23**2 + 128*s14*s24 + &
                  28*s23*s24) + &
               s14*(2*s14**2 - 3*s23**2 + 5*s14*(s23 - 2*s24) - &
                  6*s23*s24 - 10*s24**2) + &
               s12*(-58*s13**2 + 15*s14**2 + 34*s14*s23 - 3*s23**2 + &
                  3*s14*s24 + 17*s23*s24 + 8*s24**2 - &
                  s13*(67*s14 + 37*s23 + 72*s24)))))/&
       (s12*(-gm**2 - m**2 + s12 + s13 + s14)*&
         (-gm**2 - 2*m**2 + s12 + s14 + s24)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
      (32*(-2*m**2 + s12 + s13 + s14)**2*(-2*m**2 + s12 + s13 + s23)*&
          (-2*m**6 + m**4*(s12 + s13 + s23) - &
            ((s12 + s13 + s23)*(s14*s23 + s13*s24))/2. + &
            (m**2*(s13**2 + s13*(s14 - 2*s23 + s24) + &
                 s12*(-s13 + s14 - s23 + s24) + s23*(s14 + s23 + s24)))/2.&
) + 24*gm**6*(m**4*(-s13 + s14 + s23 - s24) + &
            s14*(2*s12**2 + s14*s23 - s13*s24 + &
               2*s12*(s13 + s14 + s23 + s24)) - &
            m**2*(2*s12**2 + s14*(s14 + 2*s23 - s24) - s13*(s14 + s24) + &
               2*s12*(2*s14 + s23 + s24))) + &
         8*gm**2*(2*m**2 - s12 - s13 - s14)*&
          (128*m**8 - 2*m**6*(118*s12 + 85*s13 + 61*s14 + 105*s23 + &
               33*s24) + m**4*&
             (128*s12**2 + 60*s13**2 + 18*s14**2 + 197*s14*s23 + &
               101*s23**2 + 51*s14*s24 + 52*s23*s24 - 3*s24**2 + &
               s12*(207*s13 + 125*s14 + 239*s23 + 73*s24) + &
               s13*(128*s14 + 157*s23 + 79*s24)) + &
            (s12 + s13 + s23)*&
             (s14*s23*(16*s14 + 7*s23 - 3*s24) + &
               3*s12**2*(s13 + s23 - s24) + s13**2*(3*s23 - s24) + &
               s12*(3*s13**2 + 11*s14*s23 + 3*s23**2 + &
                  s13*(3*s14 + 9*s23 - 4*s24) - 3*s14*s24 - 3*s23*s24 - &
                  3*s24**2) + &
               s13*(14*s14*s23 + 3*s23**2 + 10*s14*s24 - 2*s23*s24 - &
                  3*s24**2)) - &
            m**2*(21*s12**3 + 2*s13**3 + &
               3*s13**2*(8*s14 + 13*s23 + 7*s24) + &
               s12**2*(64*s13 + 29*s14 + 70*s23 + 11*s24) + &
               s23*(34*s14**2 + 93*s14*s23 + 10*s23**2 + 37*s14*s24 - &
                  5*s23*s24 - 3*s24**2) + &
               s13*(16*s14**2 + 51*s23**2 + 19*s23*s24 - 6*s24**2 + &
                  52*s14*(2*s23 + s24)) + &
               s12*(45*s13**2 + 16*s14**2 + 114*s14*s23 + 61*s23**2 + &
                  37*s14*s24 + 6*s23*s24 - 6*s24**2 + &
                  s13*(48*s14 + 131*s23 + 32*s24)))) - &
         2*gm**4*(944*m**8 - 18*s12**4 + 20*s13**2*s14*s23 + &
            86*s13*s14**2*s23 + 72*s14**3*s23 + 20*s13*s14*s23**2 + &
            38*s14**2*s23**2 - 4*s13**3*s24 - 34*s13**2*s14*s24 + &
            12*s13*s14**2*s24 - 4*s13**2*s23*s24 - 28*s13*s14*s23*s24 - &
            30*s14**2*s23*s24 - 6*s13**2*s24**2 - 30*s13*s14*s24**2 - &
            12*s12**3*(4*s13 + 3*s14 + 3*s23 + 2*s24) - &
            8*m**6*(130*s12 + 49*s13 + 206*s14 + 68*s23 + 45*s24) + &
            2*m**4*(82*s12**2 - 6*s13**2 + 393*s14**2 + 504*s14*s23 + &
               29*s23**2 + 2*s12*(69*s13 + 261*s14 + 55*s23 - 5*s24) + &
               309*s14*s24 - 31*s23*s24 - 18*s24**2 + &
               s13*(237*s14 + 129*s23 + 38*s24)) - &
            s12**2*(42*s13**2 + 18*s14**2 + 6*(s23 + s24)*(3*s23 + s24) + &
               s13*(42*s14 + 60*s23 + 52*s24) + s14*(40*s23 + 54*s24)) - &
            s12*(12*s13**3 + s13**2*(6*s14 + 24*s23 + 32*s24) + &
               2*s13*(-3*s14**2 - 5*s14*s23 + 6*s23**2 + 44*s14*s24 + &
                  14*s23*s24 + 6*s24**2) + &
               2*s14*(-22*s14*s23 + 2*s23**2 + 15*s14*s24 + 27*s23*s24 + &
                  15*s24**2)) + &
            2*m**2*(42*s12**3 + 2*s13**3 + &
               s13**2*(7*s14 - 10*s23 + 21*s24) + &
               s12**2*(67*s13 - 16*s14 + 52*s23 + 65*s24) - &
               s13*(49*s14**2 + 172*s14*s23 + 10*s23**2 + 46*s14*s24 - &
                  18*s23*s24 - 21*s24**2) - &
               s14*(36*s14**2 + 268*s14*s23 + 48*s23**2 + 129*s14*s24 - &
                  44*s23*s24 - 15*s24**2) + &
               s12*(27*s13**2 - 82*s14**2 + 8*s23**2 + 41*s23*s24 + &
                  21*s24**2 - s14*(140*s23 + s24) + &
                  s13*(-79*s14 + 15*s23 + 86*s24)))))/&
       (s12*(-gm**2 - m**2 + s12 + s13 + s14)*&
         (-gm**2 - 2*m**2 + s12 + s13 + s23)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) - &
      (4*(-2*(s13**2 - s14**2 + 2*s14*s23 - s23**2 - 2*s13*s24 + s24**2)*&
            (-(s13*s14*s23) - s14**2*s23 - s14*s23**2 + s13**2*s24 + &
              s13*s14*s24 + s13*s23*s24 - s14*s23*s24 + s13*s24**2 + &
              4*m**4*(s13 - s14 - s23 + s24) + &
              s12**2*(s13 - s14 - s23 + s24) + &
              s12*(s13**2 - s14**2 - 2*s14*s23 - s23**2 + 2*s13*s24 + &
                 s24**2) + m**2*&
               (-s13**2 + s14**2 + 6*s14*s23 + s23**2 - 6*s13*s24 - &
                 s24**2 - 4*s12*(s13 - s14 - s23 + s24))) - &
           2*gm**4*(128*m**4*s12 + 10*s12**3 - &
              s14*s23*(s14 + s23 - s24) - s13**2*s24 + &
              16*s12**2*(s13 + s14 + s23 + s24) + &
              s13*((s23 - s24)*s24 + s14*(s23 + s24)) + &
              m**2*(-64*s12**2 + (s13 - s14 - s23 + s24)**2 - &
                 60*s12*(s13 + s14 + s23 + s24)) + &
              2*s12*(3*s13**2 + 3*s14**2 + 3*s23**2 + 10*s23*s24 + &
                 3*s24**2 + 6*s14*(s23 + s24) + &
                 2*s13*(5*s14 + 3*(s23 + s24)))) + &
           8*gm**2*(-80*m**6*s12 + 5*s12**4 + &
              10*s12**3*(s13 + s14 + s23 + s24) - (s14*s23 - s13*s24)**2 + &
              m**4*(100*s12**2 - (s13 - s14 - s23 + s24)**2 + &
                 60*s12*(s13 + s14 + s23 + s24)) + &
              2*s12**2*(3*s13**2 + 3*s14**2 + 3*s23**2 + 7*s23*s24 + &
                 3*s24**2 + 6*s14*(s23 + s24) + &
                 s13*(7*s14 + 6*(s23 + s24))) + &
              s12*(s13**3 + s14**3 + s23**3 + 4*s23**2*s24 + &
                 4*s23*s24**2 + s24**3 + 3*s14**2*(s23 + s24) + &
                 3*s14*(s23**2 + 3*s23*s24 + s24**2) + &
                 s13**2*(4*s14 + 3*(s23 + s24)) + &
                 s13*(4*s14**2 + 9*s14*(s23 + s24) + &
                    3*(s23**2 + 3*s23*s24 + s24**2))) - &
              m**2*(40*s12**3 + 50*s12**2*(s13 + s14 + s23 + s24) - &
                 2*(s13 - s14 - s23 + s24)*(-(s14*s23) + s13*s24) + &
                 s12*(11*s13**2 + 11*s14**2 + 11*s23**2 + 30*s23*s24 + &
                    11*s24**2 + 34*s14*(s23 + s24) + &
                    s13*(30*s14 + 34*(s23 + s24)))))))/&
       (s12**2*(-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) - &
      (2*(4*(-2*m**2 + s12 + s13 + s23)**2*&
            (48*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
              s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
              3*s14*s23*s24 + s13*s24**2 + &
              s12**2*(s13 + s14 + s23 + s24) + &
              s12*(s13 + s14 + s23 + s24)**2 - &
              4*m**4*(12*s12 + 5*(s13 + s14 + s23 + s24)) + &
              m**2*(12*s12**2 - s13**2 - 6*s13*s14 - s14**2 + &
                 10*s13*s23 + 6*s14*s23 - s23**2 + 6*s13*s24 + &
                 10*s14*s24 - 6*s23*s24 - s24**2 + &
                 8*s12*(s13 + s14 + s23 + s24))) - &
           2*gm**4*(152*m**6 - 10*s12**3 - 8*s13*s14*s23 - 3*s14**2*s23 - &
              8*s14*s23**2 + 4*m**4*&
               (2*s12 - 13*s13 - 32*s14 - 13*s23 - 32*s24) - &
              8*s13**2*s24 - 9*s13*s14*s24 - 8*s13*s23*s24 - &
              9*s14*s23*s24 - 3*s13*s24**2 - &
              s12**2*(20*s13 + 13*s14 + 20*s23 + 13*s24) - &
              s12*(10*s13**2 + 13*s13*s14 + 3*s14**2 + 20*s13*s23 + &
                 21*s14*s23 + 10*s23**2 + 21*s13*s24 + 6*s14*s24 + &
                 13*s23*s24 + 3*s24**2) + &
              m**2*(26*s12**2 + 8*s13**2 + 17*s13*s14 + 3*s14**2 + &
                 12*s13*s23 + 51*s14*s23 + 8*s23**2 + 51*s13*s24 + &
                 94*s14*s24 + 17*s23*s24 + 3*s24**2 + &
                 4*s12*(9*s13 + 17*s14 + 9*s23 + 17*s24))) - &
           gm**2*(2*(-2*m**2 + s12 + s14 + s24)*&
               (-4*s12*(-2*m**2 + s12 + s13 + s23)**2 + &
                 6*m**2*(m**2 - s14)*(-2*m**2 + s12 + s23 + s24) + &
                 4*(-2*m**2 + s12 + s13 + s23)*&
                  (5*m**4 + s14*(s12 + s23 + 4*s24) - &
                    m**2*(5*s14 + s23 + 4*s24))) + &
              4*(-2*m**2 + s12 + s13 + s14)*&
               ((m**2 - s23)*(-2*m**2 + s12 + s13 + s23)**2 + &
                 3*m**2*(m**2 - s24)*(-2*m**2 + s12 + s14 + s24) + &
                 (-2*m**2 + s12 + s13 + s23)*&
                  (m**4 + m**2*(s12 + 3*s13 + s14 + 4*s23 - s24) - &
                    s24*(s12 + 3*s13 + s14 + 3*s23 + s24)) + &
                 2*(-2*m**2 + s12 + s23 + s24)*&
                  (10*m**4 - 2*(s12 + s13 + s23)*&
                     (s12 + s13 + s14 + s23 + s24) + &
                    m**2*(8*s12 + 8*s13 + 7*s14 + 8*s23 + 7*s24))) + &
              4*(-2*m**2 + s12 + s13 + s23)*&
               ((-2*m**2 + s12 + s23 + s24)*&
                  (-3*m**4 - 3*s14*(s12 + s13 + s14 + s23 + s24) + &
                    m**2*(3*s12 + 4*s13 + 5*s14 + 3*s23 + 3*s24)) - &
                 (2*m**2 - s12 - s13 - s23)*&
                  (2*s12**2 + m**2*(11*s12 + s13 - s14) + &
                    (-s13 + s14)*s23 + s12*(s13 + 2*(s14 + s23 + s24)))))))/&
       (s12**2*(-gm**2 - 2*m**2 + s12 + s13 + s23)) - &
      (2*(-4*(-2*m**2 + s12 + s13 + s23)**2*&
            (48*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
              s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
              3*s14*s23*s24 + s13*s24**2 + &
              s12**2*(s13 + s14 + s23 + s24) + &
              s12*(s13 + s14 + s23 + s24)**2 - &
              4*m**4*(12*s12 + 5*(s13 + s14 + s23 + s24)) + &
              m**2*(12*s12**2 - s13**2 - 6*s13*s14 - s14**2 + &
                 10*s13*s23 + 6*s14*s23 - s23**2 + 6*s13*s24 + &
                 10*s14*s24 - 6*s23*s24 - s24**2 + &
                 8*s12*(s13 + s14 + s23 + s24))) + &
           2*gm**4*(152*m**6 - 10*s12**3 - 8*s13*s14*s23 - 3*s14**2*s23 - &
              8*s14*s23**2 + 4*m**4*&
               (2*s12 - 13*s13 - 32*s14 - 13*s23 - 32*s24) - &
              8*s13**2*s24 - 9*s13*s14*s24 - 8*s13*s23*s24 - &
              9*s14*s23*s24 - 3*s13*s24**2 - &
              s12**2*(20*s13 + 13*s14 + 20*s23 + 13*s24) - &
              s12*(10*s13**2 + 13*s13*s14 + 3*s14**2 + 20*s13*s23 + &
                 21*s14*s23 + 10*s23**2 + 21*s13*s24 + 6*s14*s24 + &
                 13*s23*s24 + 3*s24**2) + &
              m**2*(26*s12**2 + 8*s13**2 + 17*s13*s14 + 3*s14**2 + &
                 12*s13*s23 + 51*s14*s23 + 8*s23**2 + 51*s13*s24 + &
                 94*s14*s24 + 17*s23*s24 + 3*s24**2 + &
                 4*s12*(9*s13 + 17*s14 + 9*s23 + 17*s24))) + &
           gm**2*(2*(-2*m**2 + s12 + s14 + s24)*&
               (-4*s12*(-2*m**2 + s12 + s13 + s23)**2 + &
                 6*m**2*(m**2 - s14)*(-2*m**2 + s12 + s23 + s24) + &
                 4*(-2*m**2 + s12 + s13 + s23)*&
                  (5*m**4 + s14*(s12 + s23 + 4*s24) - &
                    m**2*(5*s14 + s23 + 4*s24))) + &
              4*(-2*m**2 + s12 + s13 + s14)*&
               ((m**2 - s23)*(-2*m**2 + s12 + s13 + s23)**2 + &
                 3*m**2*(m**2 - s24)*(-2*m**2 + s12 + s14 + s24) + &
                 (-2*m**2 + s12 + s13 + s23)*&
                  (m**4 + m**2*(s12 + 3*s13 + s14 + 4*s23 - s24) - &
                    s24*(s12 + 3*s13 + s14 + 3*s23 + s24)) + &
                 2*(-2*m**2 + s12 + s23 + s24)*&
                  (10*m**4 - 2*(s12 + s13 + s23)*&
                     (s12 + s13 + s14 + s23 + s24) + &
                    m**2*(8*s12 + 8*s13 + 7*s14 + 8*s23 + 7*s24))) + &
              4*(-2*m**2 + s12 + s13 + s23)*&
               ((-2*m**2 + s12 + s23 + s24)*&
                  (-3*m**4 - 3*s14*(s12 + s13 + s14 + s23 + s24) + &
                    m**2*(3*s12 + 4*s13 + 5*s14 + 3*s23 + 3*s24)) - &
                 (2*m**2 - s12 - s13 - s23)*&
                  (2*s12**2 + m**2*(11*s12 + s13 - s14) + &
                    (-s13 + s14)*s23 + s12*(s13 + 2*(s14 + s23 + s24)))))))/&
       (s12*(-gm**2 - 2*m**2 + s12 + s13 + s23)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
      (4*(-2*m**2 + s12 + s23 + s24)**2*&
         (m**2*(6*gm**2 + 4*m**2)*(2*m**2 - s12 - s13 - s14)*&
            (2*m**2 - s12 - s23 - s24) + &
           (gm**4*(-4*m**4 + 2*m**2*(-2*s12 + s13 + s14 + s23 + s24) - &
                2*(s14*s23 + s13*s24)))/2. + &
           8*(-2*m**2 + s12 + s23 + s24)*&
            ((m**2*((m**2 - s13)*(-2*m**2 + s12 + s13 + s23) + &
                   (m**2 - s14)*(-2*m**2 + s12 + s14 + s24)))/4. - &
              ((2*m**2 - s12 - s23 - s24)*&
                 (4*m**4 + 2*(s14*s23 + s13*s24) + &
                   m**2*(4*s12 - 2*(s13 + s14 + s23 + s24))))/8.) + &
           gm**2*(-(m**2*s12*(-18*m**2 + 8*(s12 + s23 + s24))) + &
              2*((m**2*(2*m**4 + s14*s23 + s13*s24 - &
                      m**2*(s13 + s14 + s23 + s24)))/2. + &
                 (-2*m**2 + s12 + s23 + s24)*&
                  ((3*(m**2 - s13)*(-2*m**2 + s12 + s13 + s23))/2. + &
                    (3*(m**2 - s14)*(-2*m**2 + s12 + s14 + s24))/2. + &
                    2*(-2*m**4 - s14*s23 - s13*s24 + &
                       m**2*(s13 + s14 + s23 + s24)))))))/&
       ((-gm**2 - m**2 + s12 + s23 + s24)**2*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) - &
      (4*(-2*gm**6*s12*(24*m**4 + &
              3*(s14 + s24)*(s12 + s13 + s14 + s23 + s24) - &
              2*m**2*(3*s12 + 2*(s13 + 5*s14 + s23 + 5*s24))) + &
           gm**4*(-1472*m**6*s12 - 22*s12**4 - &
              s12**3*(61*s13 + 63*s14 + 61*s23 + 63*s24) + &
              (s14*s23 - s13*s24)*&
               (13*s13**2 + 17*s13*s14 + 18*s14**2 - 7*s14*s23 - &
                 13*s23**2 + 7*s13*s24 - 17*s23*s24 - 18*s24**2) - &
              2*m**4*(-100*s12**2 + &
                 (39*s13 + 49*s14 - 39*s23 - 49*s24)*&
                  (s13 - s14 - s23 + s24) - &
                 28*s12*(3*s13 + 7*s14 + 3*s23 + 7*s24)) - &
              s12**2*(56*s13**2 + 59*s14**2 + 117*s14*s23 + 56*s23**2 + &
                 118*s14*s24 + 97*s23*s24 + 59*s24**2 + &
                 s13*(97*s14 + 112*s23 + 117*s24)) - &
              s12*(17*s13**3 + 18*s14**3 + 17*s23**3 + 34*s23**2*s24 + &
                 47*s23*s24**2 + 18*s24**3 + 54*s14**2*(s23 + s24) + &
                 s13**2*(34*s14 + 51*s23 + 67*s24) + &
                 s13*(47*s14**2 + 75*s14*s23 + 51*s23**2 + &
                    111*s14*s24 + 75*s23*s24 + 54*s24**2) + &
                 s14*(67*s23**2 + 111*s23*s24 + 54*s24**2)) + &
              m**2*(192*s12**3 + 13*s13**3 - 18*s14**3 - 109*s14**2*s23 + &
                 98*s14*s23**2 + 13*s23**3 + 18*s14**2*s24 + &
                 108*s14*s23*s24 + 4*s23**2*s24 + 18*s14*s24**2 + &
                 s23*s24**2 - 18*s24**3 + &
                 2*s12**2*(157*s13 + 87*s14 + 157*s23 + 87*s24) + &
                 s13**2*(4*s14 - 13*s23 + 98*s24) + &
                 s13*(s14**2 - 102*s14*s23 - 13*s23**2 + 108*s14*s24 - &
                    102*s23*s24 - 109*s24**2) + &
                 s12*(143*s13**2 + 73*s14**2 + 184*s14*s23 + 143*s23**2 + &
                    166*s14*s24 + 120*s23*s24 + 73*s24**2 + &
                    2*s13*(60*s14 + 101*s23 + 92*s24)))) - &
           2*(2*m**2 - s12 - s13 - s23)*&
            (-128*m**8*s12 + 8*m**6*&
               (24*s12**2 - 3*s13**2 + s14**2 - 2*s14*s23 - 3*s23**2 + &
                 2*s13*(s14 + 3*s23 - s24) - 2*s14*s24 + 2*s23*s24 + &
                 s24**2 + 4*s12*(5*s13 + s14 + 5*s23 + s24)) - &
              (s12 + s13 + s23)*&
               (s13**2*s14*s23 - s14**3*s23 - 2*s14**2*s23**2 - &
                 s14*s23**3 - s13**3*s24 + s13*s14**2*s24 + &
                 4*s13*s14*s23*s24 + s13*s23**2*s24 - 2*s13**2*s24**2 + &
                 s14*s23*s24**2 - s13*s24**3 + &
                 s12**2*(s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                    2*s14*(-3*s23 + s24) + (s23 + s24)**2) + &
                 s12*(s13 + s14 + s23 + s24)*&
                  (s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                    2*s14*(-3*s23 + s24) + (s23 + s24)**2)) + &
              2*m**4*(-48*s12**3 + 5*s13**3 - s14**3 - s14**2*s23 + &
                 21*s14*s23**2 + 5*s23**3 + s14**2*s24 + 2*s14*s23*s24 - &
                 3*s23**2*s24 + s14*s24**2 - s23*s24**2 - s24**3 - &
                 16*s12**2*(5*s13 + s14 + 5*s23 + s24) + &
                 s13**2*(-3*s14 - 5*s23 + 21*s24) - &
                 s13*(s14**2 + 18*s14*s23 + 5*s23**2 - 2*s14*s24 + &
                    18*s23*s24 + s24**2) - &
                 2*s12*(7*s13**2 - s14**2 + 6*s14*s23 + 7*s23**2 + &
                    2*s14*s24 + 10*s23*s24 - s24**2 + &
                    2*s13*(5*s14 + 25*s23 + 3*s24))) + &
              m**2*(16*s12**4 - s13**4 + s13**3*(s14 - 13*s24) + &
                 8*s12**3*(5*s13 + s14 + 5*s23 + s24) + &
                 s13**2*(s14**2 + 13*s14*s23 + 2*s23**2 - 2*s14*s24 - &
                    s23*s24 - 11*s24**2) + &
                 2*s12**2*(11*s13**2 - s14**2 + 11*s23**2 + 10*s23*s24 - &
                    s24**2 + 2*s13*(5*s14 + 23*s23 + s24) + &
                    2*s14*(s23 + 3*s24)) - &
                 s23*(-s14**3 + s14**2*(11*s23 - s24) + &
                    (s23 - s24)**2*(s23 + s24) + &
                    s14*(13*s23**2 + 2*s23*s24 + s24**2)) + &
                 s13*(-s14**3 + s14**2*(2*s23 - s24) + &
                    s24*(13*s23**2 + 2*s23*s24 + s24**2) + &
                    s14*(-s23**2 + 20*s23*s24 + s24**2)) + &
                 s12*(s13**3 + s14**3 + s23**3 + &
                    s13**2*(7*s14 + 47*s23 - 25*s24) + 7*s23**2*s24 + &
                    7*s23*s24**2 + s24**3 - s14**2*(9*s23 + s24) - &
                    s14*(25*s23**2 - 18*s23*s24 + s24**2) + &
                    s13*(7*s14**2 + 47*s23**2 + 18*s23*s24 - 9*s24**2 + &
                       18*s14*(s23 + s24))))) + &
           gm**2*(-4*m**6*(120*s12**2 + &
                 16*s12*(11*s13 - 5*s14 + 11*s23 - 5*s24) + &
                 6*(5*s13 + s14 - 5*s23 - s24)*(s13 - s14 - s23 + s24)) + &
              4*m**4*(112*s12**3 + 6*s13**3 + s14**3 + &
                 12*s12**2*(21*s13 - 5*s14 + 21*s23 - 5*s24) + &
                 s14**2*(12*s23 - s24) + (s23 - s24)**2*(6*s23 + s24) + &
                 s13**2*(-11*s14 - 6*s23 + 53*s24) + &
                 s14*(53*s23**2 - 16*s23*s24 - s24**2) + &
                 2*s13*(2*s14**2 - 21*s14*s23 - 3*s23**2 - 8*s14*s24 - &
                    21*s23*s24 + 6*s24**2) + &
                 s12*(143*s13**2 - 35*s14**2 + 20*s14*s23 + 143*s23**2 - &
                    74*s14*s24 - 60*s23*s24 - 35*s24**2 + &
                    s13*(-60*s14 + 226*s23 + 20*s24))) + &
              m**2*(-88*s12**4 + 4*s13**4 + 4*s13**3*(3*s14 - 8*s24) + &
                 4*s12**3*(-77*s13 + 25*s14 - 77*s23 + 25*s24) + &
                 4*s13**2*(8*s14*s23 - 2*s23**2 + 12*s14*s24 - &
                    3*s23*s24 - 24*s24**2) + &
                 2*s12**2*(-157*s13**2 + 67*s14**2 - 10*s14*s23 - &
                    157*s23**2 + 2*s13*(55*s14 - 187*s23 - 5*s24) + &
                    114*s14*s24 + 110*s23*s24 + 67*s24**2) + &
                 4*s23*(-5*s14**3 + 4*s14**2*(-6*s23 + s24) + &
                    (s23 - s24)*(s23 + 2*s24)**2 + &
                    s14*(-8*s23**2 + 12*s23*s24 + 5*s24**2)) - &
                 4*s13*(4*s14**3 + s14**2*(12*s23 - 5*s24) + &
                    s14*(3*s23**2 - 48*s23*s24 - 4*s24**2) + &
                    s24*(-8*s23**2 + 12*s23*s24 + 5*s24**2)) + &
                 2*s12*(-43*s13**3 + 8*s14**3 - 43*s23**3 + &
                    s13**2*(66*s14 - 201*s23 - 86*s24) + 66*s23**2*s24 + &
                    89*s23*s24**2 + 8*s24**3 + s14**2*(9*s23 + 28*s24) + &
                    s13*(89*s14**2 - 201*s23**2 + 130*s14*s24 + &
                       9*s24**2) + &
                    s14*(-86*s23**2 + 130*s23*s24 + 28*s24**2))) - &
              (s12 + s13 + s23)*&
               (8*s12**4 + 2*s12**3*(s13 + 15*s14 + s23 + 15*s24) - &
                 4*(s14*s23 - s13*s24)*&
                  (s13**2 + 4*s14**2 + 3*s14*s23 + s13*(4*s14 - 3*s24) - &
                    (s23 + 2*s24)**2) + &
                 2*s12**2*(-5*s13**2 + 19*s14**2 + 6*s14*s23 - 5*s23**2 + &
                    38*s14*s24 + 20*s23*s24 + 19*s24**2 + &
                    s13*(20*s14 - 22*s23 + 6*s24)) + &
                 s12*(-4*s13**3 + 16*s14**3 + s14**2*(-14*s23 + 48*s24) + &
                    2*s13*(20*s14**2 - 7*s14*s23 - 18*s23**2 + &
                       23*s14*s24 - 7*s23*s24 - 7*s24**2) - &
                    4*(s23 + s24)*(s23**2 - 6*s23*s24 - 4*s24**2) + &
                    2*s14*(-3*s23**2 + 23*s23*s24 + 24*s24**2) + &
                    s13**2*(20*s14 - 6*(6*s23 + s24)))))))/&
       (s12**2*(-gm**2 - 2*m**2 + s12 + s13 + s23)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
      (2*(6*gm**2*(-2*m**2*s12**2*(-2*m**2 + s12 + s13 + s23)*&
               (-2*m**2 + s12 + s14 + s24) + &
              2*(-gm**2 + m**2)*(m**2 - s13)*(m**2 - s14)*&
               (-2*m**2 + s12 + s23 + s24)**2 - &
              gm**2*s12*(-2*m**2 + s12 + s23 + s24)*&
               (-4*m**4 + s13**2 - 8*s13*s14 + s14**2 + &
                 s12*(s13 + s14) + s13*s23 + &
                 m**2*(6*s12 + 5*s13 + 5*s14 - s23 - s24) + s14*s24) - &
              gm**2*s12*(-12*m**6 + &
                 m**4*(-44*s12 + 6*(s13 + s14 + s23 + s24)) - &
                 6*m**2*(s12**2 + s14*s23 + s13*s24 - &
                    3*s12*(s13 + s14 + s23 + s24)) - &
                 4*s12*(s13**2 + s14**2 + 2*s14*s23 + s23**2 + &
                    2*s14*s24 + s24**2 + 2*s13*(s23 + s24) + &
                    s12*(s13 + s14 + s23 + s24))) + &
              gm**4*s12*(-6*(2*m**4 + s14*s23 + s13*s24 - &
                    m**2*(s13 + s14 + s23 + s24)) + &
                 s12*(4*m**2 - 8*(s12 + s13 + s14 + s23 + s24)))) + &
           2*(-2*m**2 + s12 + s13 + s14)**2*&
            (6*gm**2*(-gm**2 + m**2)*(m**2 - s23)*(m**2 - s24) + &
              4*(-2*m**2 + s12 + s23 + s24)**2*&
               (s14*s23 + m**2*(2*s12 - s13 - s14 - s23 - s24) + s13*s24) &
- ((2*m**2 - s12 - s23 - s24)*&
                 (4*m**2*(4*m**4 + s13*s23 + s23**2 + s14*s24 + &
                      s24**2 + s12*(s23 + s24) - &
                      m**2*(2*s12 + s13 + s14 + 3*s23 + 3*s24)) + &
                   4*gm**2*(-4*m**4 + s14*s23 + (s13 - 6*s23)*s24 + &
                      m**2*(8*s12 - s13 - s14 + 5*s23 + 5*s24))))/2.) - &
           (-2*m**2 + s12 + s13 + s14)*&
            (4*m**2*(-2*m**2 + s12 + s23 + s24)*&
               (-2*s12*(-2*m**2 + s12 + s13 + s23)*&
                  (-2*m**2 + s12 + s14 + s24) + &
                 (-2*m**2 + s12 + s23 + s24)*&
                  ((m**2 - s13)*(-2*m**2 + s12 + s13 + s23) + &
                    (m**2 - s14)*(-2*m**2 + s12 + s14 + s24))) - &
              4*gm**2*(2*m**2 - s12 - s23 - s24)*&
               (2*m**4*(29*s12 + 3*s13 + 3*s14 - s23 - s24) + &
                 3*s12**2*(s13 + s14 + s23 + s24) - &
                 (s23 + s24)*(s14*s23 + s13*(-6*s14 + s24)) + &
                 s12*(3*s13**2 + 3*s14**2 + s14*(11*s23 + 6*s24) + &
                    s13*(6*s14 + 6*s23 + 11*s24) + 3*(s23**2 + s24**2)) + &
                 m**2*(11*s12**2 + s14*s23 + s23**2 - 5*s14*s24 + &
                    2*s23*s24 + s24**2 + s13*(-12*s14 - 5*s23 + s24) - &
                    2*s12*(11*s13 + 11*s14 + 12*(s23 + s24)))) + &
              gm**4*(48*m**2*s12**2 - &
                 6*s12*((m**2 - s23)*(-2*m**2 + s12 + s13 + s23) + &
                    (m**2 - s24)*(6*m**2 + s12 + s14 - 8*s23 + s24)) - &
                 (2*m**2 - s12 - s23 - s24)*&
                  (-40*m**4 + 4*m**2*(2*s12 + 5*(s13 + s14 + s23 + s24)) - &
                    4*(9*s12**2 + 9*s12*(s13 + s14 + s23 + s24) + &
                       5*(s14*s23 + s13*s24)))))))/&
       ((gm**2 + m**2 - s12 - s13 - s14)*(gm**2 + m**2 - s12 - s23 - s24)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) + &
      (4*(-2*gm**6*s12*(24*m**4 + &
              3*(s13 + s23)*(s12 + s13 + s14 + s23 + s24) - &
              2*m**2*(3*s12 + 2*(5*s13 + s14 + 5*s23 + s24))) - &
           2*(-2*m**2 + s12 + s14 + s24)**2*&
            (128*m**6*s12 - s13**2*s14*s23 + s14**3*s23 + &
              2*s14**2*s23**2 + s14*s23**3 + s13**3*s24 - &
              s13*s14**2*s24 - 4*s13*s14*s23*s24 - s13*s23**2*s24 + &
              2*s13**2*s24**2 - s14*s23*s24**2 + s13*s24**3 - &
              s12*(s13 + s14 + s23 + s24)*&
               (s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                 2*s14*(-3*s23 + s24) + (s23 + s24)**2) - &
              4*m**4*(32*s12**2 - (s13 - s14 - s23 + s24)**2 + &
                 16*s12*(s13 + s14 + s23 + s24)) - &
              s12**2*(s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                 (s23 + s24)**2 + s14*(-6*s23 + 2*s24)) + &
              m**2*(32*s12**3 - s13**3 - s14**3 - 7*s14**2*s23 - &
                 7*s14*s23**2 - s23**3 + s13**2*(s14 + s23 - 7*s24) + &
                 s14**2*s24 + 6*s14*s23*s24 + s23**2*s24 + s14*s24**2 + &
                 s23*s24**2 - s24**3 + &
                 32*s12**2*(s13 + s14 + s23 + s24) + &
                 s13*(s14**2 + s23**2 + 6*s23*s24 - 7*s24**2 + &
                    6*s14*(s23 + s24)) + &
                 8*s12*(s13**2 + s14**2 + 2*s13*(s14 + 2*s23) + &
                    4*s14*s24 + (s23 + s24)**2))) + &
           gm**4*(-864*m**6*s12 - 22*s12**4 - &
              s12**3*(39*s13 + 61*s14 + 39*s23 + 61*s24) - &
              (s14*s23 - s13*s24)*&
               (-6*s13**2 + 17*s13*s14 + 13*s14**2 + 7*s14*s23 + &
                 6*s23**2 - 7*s13*s24 - 17*s23*s24 - 13*s24**2) + &
              2*m**4*(92*s12**2 - &
                 7*(s13 - s14 - s23 + s24)*(s13 - 5*s14 - s23 + 5*s24) + &
                 8*s12*(16*s13 + 9*s14 + 16*s23 + 9*s24)) - &
              s12**2*(11*s13**2 + 56*s14**2 + 69*s14*s23 + 11*s23**2 + &
                 112*s14*s24 + 49*s23*s24 + 56*s24**2 + &
                 s13*(49*s14 + 22*s23 + 69*s24)) - &
              m**2*(-112*s12**3 - 6*s13**3 - 13*s14**3 - 90*s14**2*s23 - &
                 27*s14*s23**2 - 6*s23**3 + &
                 s13**2*(23*s14 + 6*s23 - 27*s24) + 13*s14**2*s24 + &
                 94*s14*s23*s24 + 23*s23**2*s24 + 13*s14*s24**2 - &
                 4*s23*s24**2 - 13*s24**3 - &
                 2*s12**2*(17*s13 + 95*s14 + 17*s23 + 95*s24) + &
                 s12*(27*s13**2 - 99*s14**2 - 80*s14*s23 + 27*s23**2 + &
                    s13*(-8*s14 + 82*s23 - 80*s24) - 114*s14*s24 - &
                    8*s23*s24 - 99*s24**2) + &
                 s13*(-4*s14**2 + 4*s14*s23 + 6*s23**2 + 94*s14*s24 + &
                    4*s23*s24 - 90*s24**2)) + &
              s12*(6*s13**3 - 17*s14**3 + 6*s23**3 + &
                 s13**2*(s14 + 18*s23 - 6*s24) + s23**2*s24 - &
                 10*s23*s24**2 - 17*s24**3 - s14**2*(43*s23 + 51*s24) - &
                 3*s14*(2*s23**2 + 9*s23*s24 + 17*s24**2) - &
                 s13*(10*s14**2 - 18*s23**2 + 15*s23*s24 + 43*s24**2 + &
                    3*s14*(5*s23 + 9*s24)))) + &
           gm**2*(768*m**8*s12 - &
              4*m**6*(256*s12**2 - &
                 2*(s13 - s14 - s23 + s24)*(s13 - 3*s14 - s23 + 3*s24) + &
                 16*s12*(7*s13 + 18*s14 + 7*s23 + 18*s24)) + &
              2*m**4*(240*s12**3 + &
                 4*s12**2*(69*s13 + 127*s14 + 69*s23 + 127*s24) + &
                 8*s12*(8*s13**2 + 29*s14**2 + 29*s14*s23 + 8*s23**2 + &
                    70*s14*s24 + 33*s23*s24 + 29*s24**2 + &
                    s13*(33*s14 + 12*s23 + 29*s24)) - &
                 2*(4*s13**3 + 5*s14**3 + s14**2*(14*s23 - 5*s24) + &
                    s14*(s23 - s24)*(9*s23 + 5*s24) + &
                    s13**2*(s14 - 4*s23 + 9*s24) - &
                    2*s13*(5*s14**2 + 5*s14*s23 + 2*s23**2 + 2*s14*s24 + &
                       5*s23*s24 - 7*s24**2) + &
                    (s23 - s24)*(4*s23**2 + 5*s23*s24 - 5*s24**2))) + &
              (s12 + s14 + s24)*&
               (8*s12**4 + s12**3*(6*s13 + 26*s14 + 6*s23 + 26*s24) - &
                 4*(s14*s23 - s13*s24)*&
                  (-2*s13**2 + s23*(2*s14 + 2*s23 + s24) - &
                    s13*(s14 + 2*s24)) + &
                 6*s12**2*(s13**2 + 3*s14**2 + 4*s14*s23 + s23**2 + &
                    10*s14*s24 + 2*s23*s24 + 3*s24**2 + &
                    2*s13*(s14 + s23 + 2*s24)) + &
                 s12*(8*s13**3 + 2*s13**2*(2*s14 + 12*s23 - 5*s24) + &
                    4*s23*(2*s23 - s24)*(s23 + s24) + &
                    2*s14**2*(5*s23 + 12*s24) + &
                    2*s13*(-2*s14**2 + 7*s14*s23 + 12*s23**2 + &
                       13*s14*s24 + 7*s23*s24 + 5*s24**2) + &
                    s14*(-10*s23**2 + 26*s23*s24 + 24*s24**2))) - &
              2*m**2*(48*s12**4 + &
                 8*s12**3*(11*s13 + 18*s14 + 11*s23 + 18*s24) + &
                 s12**2*(47*s13**2 + 127*s14**2 + 154*s14*s23 + &
                    47*s23**2 + 322*s14*s24 + 142*s23*s24 + 127*s24**2 + &
                    2*s13*(71*s14 + 41*s23 + 77*s24)) + &
                 s12*(2*s13**3 + 29*s14**3 + 2*s23**3 + 41*s23**2*s24 + &
                    48*s23*s24**2 + 29*s24**3 + &
                    s13**2*(41*s14 + 26*s23 + 27*s24) + &
                    s14**2*(46*s23 + 159*s24) + &
                    2*s13*(24*s14**2 + 48*s14*s23 + 13*s23**2 + &
                       67*s14*s24 + 48*s23*s24 + 23*s24**2) + &
                    s14*(27*s23**2 + 134*s23*s24 + 159*s24**2)) - &
                 2*(2*s13**3*(s14 + 3*s24) - &
                    s13**2*(s14**2 + 6*s14*s23 - 8*s14*s24 + 2*s23*s24 - &
                       7*s24**2) - &
                    s13*(s14**3 + s14**2*(8*s23 + 7*s24) + &
                       s24*(6*s23**2 + 8*s23*s24 - 7*s24**2) + &
                       s14*(2*s23**2 + 12*s23*s24 - s24**2)) + &
                    s23*(7*s14**3 + s14**2*(7*s23 + s24) + &
                       s14*(6*s23**2 + 8*s23*s24 - 7*s24**2) - &
                       s24*(-2*s23**2 + s23*s24 + s24**2)))))))/&
       (s12**2*(-gm**2 - 2*m**2 + s12 + s14 + s24)*&
         (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
      (2*(4*gm**6*s12*(-8*m**4 + 4*m**2*(6*s12 + s13 + s14 + s23 + s24) - &
              2*(4*s12**2 + (s13 + s23)*(s14 + s24) + &
                 4*s12*(s13 + s14 + s23 + s24))) + &
           8*gm**4*(96*m**6*s12 + 8*s12**4 + &
              14*s12**3*(s13 + s14 + s23 + s24) + &
              (s14*s23 - s13*s24)**2 + &
              m**4*(44*s12**2 + (s13 - s14 - s23 + s24)**2 - &
                 64*s12*(s13 + s14 + s23 + s24)) + &
              s12**2*(4*s13**2 + 4*s14**2 + 4*s23**2 + 3*s23*s24 + &
                 4*s24**2 + 3*s14*(5*s23 + 4*s24) + &
                 3*s13*(s14 + 4*s23 + 5*s24)) - &
              s12*(2*s13**3 + 2*s14**3 + 2*s23**3 + &
                 s13**2*(9*s14 + 2*s23) + 2*s14**2*s24 + 9*s23**2*s24 + &
                 9*s23*s24**2 + 2*s24**3 + s14*s24*(3*s23 + 2*s24) + &
                 s13*(9*s14**2 + 3*s14*(s23 + s24) + s23*(2*s23 + 3*s24))&
) - 2*m**2*(22*s12**3 + s14*s23*(s14 + s23 - s24) + s13**2*s24 + &
                 15*s12**2*(s13 + s14 + s23 + s24) - &
                 s13*((s23 - s24)*s24 + s14*(s23 + s24)) - &
                 s12*(9*s13**2 + 9*s14**2 + 6*s14*s23 + 9*s23**2 + &
                    10*s14*s24 + 22*s23*s24 + 9*s24**2 + &
                    2*s13*(11*s14 + 5*s23 + 3*s24)))) - &
           8*gm**2*(-192*m**8*s12 + 4*s12**5 + &
              5*s12**4*(s13 + s14 + s23 + s24) + &
              2*(s13 + s14 + s23 + s24)*(s14*s23 - s13*s24)**2 - &
              s12**3*(s13**2 + 8*s13*s14 + s14**2 - 10*s14*s23 + &
                 s23**2 - 10*s13*s24 + 8*s23*s24 + s24**2) - &
              4*m**6*(-84*s12**2 + 2*(s13 - s14 - s23 + s24)**2 - &
                 44*s12*(s13 + s14 + s23 + s24)) - &
              s12*(s13 + s14 + s23 + s24)*&
               (s13**3 + s14**3 + s23**3 + &
                 s13**2*(6*s14 + s23 - 3*s24) + 6*s23**2*s24 + &
                 6*s23*s24**2 + s24**3 + s14**2*(-3*s23 + s24) + &
                 s14*(-3*s23**2 + 3*s23*s24 + s24**2) + &
                 s13*(6*s14**2 + s23**2 + 3*s23*s24 - 3*s24**2 + &
                    3*s14*(s23 + s24))) - &
              s12**2*(3*s13**3 + 3*s14**3 + 3*s23**3 + &
                 s13**2*(19*s14 + 5*s23 - 6*s24) + 19*s23**2*s24 + &
                 19*s23*s24**2 + 3*s24**3 + s14**2*(-6*s23 + 5*s24) + &
                 s14*(-6*s23**2 + 7*s23*s24 + 5*s24**2) + &
                 s13*(19*s14**2 + 5*s23**2 + 7*s23*s24 - 6*s24**2 + &
                    7*s14*(s23 + s24))) + &
              2*m**4*(-88*s12**3 + s13**3 + s14**3 - &
                 s13**2*(s14 + s23 - 11*s24) + s14**2*(11*s23 - s24) + &
                 (s23 - s24)**2*(s23 + s24) - &
                 98*s12**2*(s13 + s14 + s23 + s24) + &
                 s14*(11*s23**2 - 10*s23*s24 - s24**2) - &
                 s13*(s14**2 + s23**2 + 10*s23*s24 - 11*s24**2 + &
                    10*s14*(s23 + s24)) - &
                 2*s12*(11*s13**2 + 11*s14**2 + 22*s14*s23 + 11*s23**2 + &
                    38*s14*s24 + 38*s23*s24 + 11*s24**2 + &
                    s13*(38*s14 + 38*s23 + 22*s24))) - &
              m**2*(-20*s12**4 - 44*s12**3*(s13 + s14 + s23 + s24) - &
                 s12**2*(37*s13**2 + 37*s14**2 + 26*s14*s23 + &
                    37*s23**2 + 70*s14*s24 + 110*s23*s24 + 37*s24**2 + &
                    2*s13*(55*s14 + 35*s23 + 13*s24)) + &
                 4*(s13**3*s24 + &
                    s14*s23*(s14**2 + 4*s14*s23 + s23**2 - s24**2) - &
                    s13*s24*(s14**2 + 8*s14*s23 + s23**2 - s24**2) + &
                    s13**2*(-(s14*s23) + 4*s24**2)) + &
                 s12*(-7*s13**3 - 7*s14**3 + s14**2*(3*s23 - 29*s24) + &
                    s13**2*(-49*s14 - 29*s23 + 3*s24) + &
                    s14*(3*s23**2 - 62*s23*s24 - 29*s24**2) - &
                    7*(s23 + s24)*(s23**2 + 6*s23*s24 + s24**2) + &
                    s13*(-49*s14**2 - 29*s23**2 - 62*s23*s24 + 3*s24**2 - &
                       62*s14*(s23 + s24))))) - &
           2*(-2048*m**10*s12 + &
              4*s12**4*(s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                 2*s14*(-3*s23 + s24) + (s23 + s24)**2) + &
              64*m**8*(64*s12**2 - (s13 - s14 - s23 + s24)**2 + &
                 32*s12*(s13 + s14 + s23 + s24)) + &
              8*s12**3*(s13 + s14 + s23 + s24)*&
               (s13**2 + s14**2 + 2*s13*(s14 + s23 - 3*s24) + &
                 (s23 + s24)**2 + s14*(-6*s23 + 2*s24)) + &
              s12**2*(s13 + s14 + s23 + s24)*&
               (6*s13**3 + 6*s14**3 + 2*s13**2*(7*s14 + 7*s23 - 15*s24) + &
                 s14**2*(-30*s23 + 14*s24) - &
                 2*s14*(15*s23**2 + 2*s23*s24 - 7*s24**2) + &
                 (s23 + s24)*(6*s23**2 + 8*s23*s24 + 6*s24**2) + &
                 s13*(14*s14**2 + 14*s23**2 - 4*s23*s24 - 30*s24**2 - &
                    4*s14*(s23 + s24))) + &
              2*s12*(s13 + s14 + s23 + s24)**2*&
               (s13**3 + s14**3 + s23**3 + s13**2*(s14 + s23 - 5*s24) + &
                 s23**2*s24 + s23*s24**2 + s24**3 + &
                 s14**2*(-5*s23 + s24) + &
                 s14*(-5*s23**2 + 2*s23*s24 + s24**2) + &
                 s13*(s14**2 + s23**2 + 2*s23*s24 - 5*s24**2 + &
                    2*s14*(s23 + s24))) - &
              4*(s13**2*s24 - s14*s23*(s14 + s23 + s24) + &
                  s13*(s14*(-s23 + s24) + s24*(s23 + s24)))**2 - &
              32*m**6*(96*s12**3 - s13**3 - s14**3 - 7*s14**2*s23 - &
                 7*s14*s23**2 - s23**3 + s13**2*(s14 + s23 - 7*s24) + &
                 s14**2*s24 + 6*s14*s23*s24 + s23**2*s24 + s14*s24**2 + &
                 s23*s24**2 - s24**3 + &
                 96*s12**2*(s13 + s14 + s23 + s24) + &
                 s13*(s14**2 + s23**2 + 6*s23*s24 - 7*s24**2 + &
                    6*s14*(s23 + s24)) + &
                 s12*(22*s13**2 + 22*s14**2 + 36*s14*s23 + 22*s23**2 + &
                    60*s14*s24 + 52*s23*s24 + 22*s24**2 + &
                    4*s13*(13*s14 + 15*s23 + 9*s24))) + &
              4*m**4*(256*s12**4 - s13**4 - s14**4 - 20*s14**3*s23 - &
                 54*s14**2*s23**2 - 20*s14*s23**3 - s23**4 - &
                 20*s13**3*s24 + 2*s14**2*s24**2 + 20*s14*s23*s24**2 + &
                 2*s23**2*s24**2 - s24**4 + &
                 384*s12**3*(s13 + s14 + s23 + s24) + &
                 2*s13**2*(s14**2 + 10*s14*s23 + s23**2 - 27*s24**2) + &
                 4*s13*s24*(5*s14**2 + 26*s14*s23 + 5*s23**2 - &
                    5*s24**2) + &
                 16*s12**2*(12*s13**2 + 12*s14**2 + 18*s14*s23 + &
                    12*s23**2 + 29*s14*s24 + 25*s23*s24 + 12*s24**2 + &
                    s13*(25*s14 + 29*s23 + 18*s24)) + &
                 16*s12*(2*s13**3 + 2*s14**3 + 2*s23**3 + &
                    s13**2*(7*s14 + 9*s23) + 9*s14**2*s24 + &
                    7*s23**2*s24 + 7*s23*s24**2 + 2*s24**3 + &
                    s14*s24*(14*s23 + 9*s24) + &
                    s13*(7*s14**2 + 14*s14*(s23 + s24) + &
                       s23*(9*s23 + 14*s24)))) - &
              4*m**2*(32*s12**5 + 64*s12**4*(s13 + s14 + s23 + s24) + &
                 4*s12**3*(13*s13**2 + 13*s14**2 + 13*(s23 + s24)**2 + &
                    2*s13*(13*s14 + 15*s23 + 7*s24) + &
                    2*s14*(7*s23 + 15*s24)) + &
                 s12*(s13 + s14 + s23 + s24)*&
                  (5*s13**3 + 5*s14**3 + &
                    s13**2*(11*s14 + 15*s23 - 21*s24) + &
                    3*s14**2*(-7*s23 + 5*s24) + &
                    (s23 + s24)*(5*s23**2 + 6*s23*s24 + 5*s24**2) + &
                    s14*(-21*s23**2 + 22*s23*s24 + 15*s24**2) + &
                    s13*(11*s14**2 + 15*s23**2 + 22*s23*s24 - 21*s24**2 + &
                       22*s14*(s23 + s24))) + &
                 2*s12**2*(11*s13**3 + 11*s14**3 + &
                    s13**2*(33*s14 + 41*s23 - 3*s24) + &
                    11*(s23 + s24)**3 + s14**2*(-3*s23 + 41*s24) + &
                    s14*(-3*s23**2 + 46*s23*s24 + 41*s24**2) + &
                    s13*(33*s14**2 + 41*s23**2 + 46*s23*s24 - 3*s24**2 + &
                       46*s14*(s23 + s24))) - &
                 2*(s13**4*s24 + &
                    s13**3*(s14*(-s23 + s24) + s24*(s23 + 7*s24)) - &
                    s13**2*(s14**2*(s23 + s24) + &
                       s24*(s23**2 - 6*s23*s24 - 7*s24**2) + &
                       s14*(s23**2 + 13*s23*s24 - 6*s24**2)) + &
                    s14*s23*(s14**3 + (s23 - s24)*(s23 + s24)**2 + &
                       s14**2*(7*s23 + s24) + &
                       s14*(7*s23**2 + 6*s23*s24 - s24**2)) + &
                    s13*(s14**3*(s23 - s24) - &
                       (s23 - s24)*s24*(s23 + s24)**2 + &
                       s14**2*(6*s23**2 - 13*s23*s24 - s24**2) + &
                       s14*(s23**3 - 13*s23**2*s24 - 13*s23*s24**2 + &
                         s24**3)))))))/&
       (s12**2*(-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) + &
      (2*((4*(-2*m**2 + s12 + s23 + s24)**2*&
               (16*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
                 s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
                 3*s14*s23*s24 + s13*s24**2 + &
                 s12**2*(s13 + s14 + s23 + s24) + &
                 s12*(s13 + s14 + s23 + s24)**2 - &
                 4*m**4*(4*s12 + s13 + s14 + s23 + s24) + &
                 m**2*(4*s12**2 - s13**2 - s14**2 - 2*s14*s23 - &
                    s23**2 + 2*s14*s24 - 6*s23*s24 - s24**2 - &
                    2*s13*(3*s14 - s23 + s24))) - &
              2*gm**4*(-3*s12*(m**2 - s23)*&
                  (-2*m**2 + s12 + s13 + s23) + &
                 6*(-2*m**2 + s12 + s13 + s14)*(m**2 - s23)*&
                  (m**2 - s24) - &
                 3*s12*(m**2 - s24)*(-2*m**2 + s12 + s14 + s24) - &
                 5*(-2*m**2 + s12 + s23 + s24)*&
                  (2*m**4 + 2*s12**2 + s14*s23 + s13*s24 + &
                    2*s12*(s13 + s14 + s23 + s24) - &
                    m**2*(4*s12 + s13 + s14 + s23 + s24))) + &
              4*gm**2*(-2*m**2 + s12 + s23 + s24)*&
               (3*s12*(m**2 - s23)*(-2*m**2 + s12 + s13 + s23) - &
                 s12*(-2*m**2 + s12 + s14 + s24)*&
                  (-11*m**2 + 4*s12 + 4*s13 + 4*s23 + 3*s24) + &
                 (-2*m**2 + s12 + s23 + s24)*&
                  (2*m**4 - 2*s12**2 + s13**2 + &
                    2*m**2*(s12 - s13 - s14) + s14**2 + s13*s23 - &
                    s14*s23 - s13*s24 + s14*s24 - &
                    s12*(s13 + s14 + 2*(s23 + s24))) - &
                 2*(-2*m**2 + s12 + s13 + s14)*&
                  (13*m**4 + s12**2 + 2*s13*s23 + s14*s23 + 2*s23**2 + &
                    s13*s24 + 2*s14*s24 + 5*s23*s24 + 2*s24**2 - &
                    m**2*(7*s12 + 3*s13 + 3*s14 + 11*s23 + 11*s24) + &
                    s12*(s13 + s14 + 3*(s23 + s24)))))/&
            (gm**2 + m**2 - s12 - s23 - s24) - &
           (2*(-2*(-2*m**2 + s12 + s13 + s14)**2*&
                 (16*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
                   s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
                   3*s14*s23*s24 + s13*s24**2 + &
                   s12**2*(s13 + s14 + s23 + s24) + &
                   s12*(s13 + s14 + s23 + s24)**2 - &
                   4*m**4*(4*s12 + s13 + s14 + s23 + s24) + &
                   m**2*(4*s12**2 - s13**2 - s14**2 - 2*s14*s23 - &
                      s23**2 + 2*s14*s24 - 6*s23*s24 - s24**2 - &
                      2*s13*(3*s14 - s23 + s24))) + &
                gm**4*(-3*s12*(m**2 - s13)*&
                    (-2*m**2 + s12 + s13 + s23) - &
                   3*s12*(m**2 - s14)*(-2*m**2 + s12 + s14 + s24) + &
                   6*(m**2 - s13)*(m**2 - s14)*&
                    (-2*m**2 + s12 + s23 + s24) - &
                   5*(-2*m**2 + s12 + s13 + s14)*&
                    (2*m**4 + 2*s12**2 + s14*s23 + s13*s24 + &
                      2*s12*(s13 + s14 + s23 + s24) - &
                      m**2*(4*s12 + s13 + s14 + s23 + s24))) + &
                2*gm**2*(-2*m**2 + s12 + s13 + s14)*&
                 (-3*s12*(m**2 - s13)*(-2*m**2 + s12 + s13 + s23) + &
                   s12*(-11*m**2 + 4*s12 + 4*s13 + 3*s14 + 4*s23)*&
                    (-2*m**2 + s12 + s14 + s24) + &
                   2*(-2*m**2 + s12 + s23 + s24)*&
                    (7*m**4 + s13**2 + 3*s13*s14 + s14**2 + &
                      s12*(s13 + s14) + s13*s23 + s14*s24 - &
                      m**2*(2*s12 + 6*s13 + 6*s14 + s23 + s24)) - &
                   (2*m**2 - s12 - s13 - s14)*&
                    (10*m**4 + 4*s12**2 + s13*s23 + 3*s14*s23 + s23**2 + &
                      3*s13*s24 + s14*s24 + 4*s23*s24 + s24**2 - &
                      4*m**2*(3*s12 + s13 + s14 + 2*s23 + 2*s24) + &
                      s12*(4*s13 + 4*s14 + 5*(s23 + s24))))))/&
            (gm**2 + m**2 - s12 - s13 - s14) + &
           2*(4*(-2*m**2 + s12 + s13 + s14)*(-2*m**2 + s12 + s13 + s23)*&
               (-2*m**2 + s12 + s14 + s24)*(-2*m**2 + s12 + s23 + s24) + &
              2*gm**4*(2*m**4 - s12**2 + s14*s23 + &
                 m**2*(8*s12 - s13 - s14 - s23 - s24) + s13*s24 - &
                 s12*(s13 + s14 + s23 + s24)) + &
              gm**2*(-((m**2 - s13)*(-2*m**2 + s12 + s13 + s23)*&
                    (-2*m**2 + s12 + s23 + s24)) + &
                 (-2*m**2 + s12 + s14 + s24)*&
                  (4*s12*(-2*m**2 + s12 + s13 + s23) - &
                    (m**2 - s14)*(-2*m**2 + s12 + s23 + s24)) + &
                 (-2*m**2 + s12 + s13 + s14)*&
                  (-((m**2 - s23)*(-2*m**2 + s12 + s13 + s23)) - &
                    (m**2 - s24)*(-2*m**2 + s12 + s14 + s24) + &
                    2*(-2*m**2 + s12 + s23 + s24)*&
                     (6*m**2 - 2*(s12 + s13 + s14 + s23 + s24))))) - &
           (4*(-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)*&
              (4*(-2*m**2 + s12 + s13 + s14)*&
                 (-2*m**2 + s12 + s13 + s23)*&
                 (-2*m**2 + s12 + s14 + s24)*(-2*m**2 + s12 + s23 + s24) &
+ 2*gm**4*(2*m**4 - s12**2 + s14*s23 + &
                   m**2*(8*s12 - s13 - s14 - s23 - s24) + s13*s24 - &
                   s12*(s13 + s14 + s23 + s24)) + &
                gm**2*(-((m**2 - s13)*(-2*m**2 + s12 + s13 + s23)*&
                      (-2*m**2 + s12 + s23 + s24)) + &
                   (-2*m**2 + s12 + s14 + s24)*&
                    (4*s12*(-2*m**2 + s12 + s13 + s23) - &
                      (m**2 - s14)*(-2*m**2 + s12 + s23 + s24)) + &
                   (-2*m**2 + s12 + s13 + s14)*&
                    (-((m**2 - s23)*(-2*m**2 + s12 + s13 + s23)) - &
                      (m**2 - s24)*(-2*m**2 + s12 + s14 + s24) + &
                      2*(-2*m**2 + s12 + s23 + s24)*&
                       (6*m**2 - 2*(s12 + s13 + s14 + s23 + s24))))))/s12 &
- ((-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)*&
              (-4*(-2*m**2 + s12 + s14 + s24)**2*&
                 (16*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
                   s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
                   3*s14*s23*s24 + s13*s24**2 + &
                   s12**2*(s13 + s14 + s23 + s24) + &
                   s12*(s13 + s14 + s23 + s24)**2 - &
                   4*m**4*(4*s12 + s13 + s14 + s23 + s24) + &
                   m**2*(4*s12**2 - s13**2 - s14**2 - 2*s14*s23 - &
                      s23**2 + 2*s14*s24 - 6*s23*s24 - s24**2 - &
                      2*s13*(3*s14 - s23 + s24))) - &
                2*gm**4*(24*m**6 - 10*s12**3 - 9*s13*s14*s23 - &
                   8*s14**2*s23 - 3*s14*s23**2 - 3*s13**2*s24 - &
                   8*s13*s14*s24 - 9*s13*s23*s24 - 8*s14*s23*s24 - &
                   8*s13*s24**2 - &
                   s12**2*(13*s13 + 20*s14 + 13*s23 + 20*s24) - &
                   s12*(3*s13**2 + 13*s13*s14 + 10*s14**2 + &
                      6*s13*s23 + 21*s14*s23 + 3*s23**2 + 21*s13*s24 + &
                      20*s14*s24 + 13*s23*s24 + 10*s24**2) + &
                   m**2*(18*s12**2 + 3*s13**2 + 17*s13*s14 + &
                      8*s14**2 - 26*s13*s23 + 47*s14*s23 + 3*s23**2 + &
                      47*s13*s24 + 12*s14*s24 + 17*s23*s24 + &
                      8*s24**2 + &
                      4*s12*(15*s13 + 7*s14 + 15*s23 + 7*s24)) + &
                   m**4*(72*s12 - 4*(s13 + 12*s14 + s23 + 12*s24))) + &
                gm**2*(-8*m**2*(m**2 - s13)*(-2*m**2 + s12 + s13 + s23)*&
                    (-2*m**2 + s12 + s23 + s24) + &
                   4*(-2*m**2 + s12 + s14 + s24)**2*&
                    (4*m**4 + 4*s12**2 + 2*s14*s23 + &
                      m**2*(3*s12 - s13 - 3*s14 - 2*s23 - 2*s24) + &
                      s13*s24 + s14*s24 + &
                      s12*(4*s13 + 3*s14 + 4*s23 + 2*s24)) + &
                   4*(-2*m**2 + s12 + s14 + s24)*&
                    (((-2*m**2 + s12 + s13 + s23)*&
                        (-16*m**2*s12 + &
                        4*(m**2 - s13)*(m**2 + s12 - 2*s23 + s24)))/2. &
+ (2*m**2 - s12 - s23 - s24)*&
                       (2*m**4 + &
                         m**2*(-3*s12 - 9*s13 + s14 - 3*s23 - 3*s24) + &
                         3*s13*(s12 + s13 + s14 + s23 + s24))) + &
                   (-2*m**2 + s12 + s13 + s14)*&
                    (16*m**6 + &
                      8*m**4*(9*s12 + 6*s13 + 10*s14 - 4*s23 + 18*s24) + &
                      4*(s12 + s14 + s24)*&
                       (4*s12**2 - s13*s23 + s14*s23 - s23**2 + &
                         4*s13*s24 + 5*s14*s24 + 5*s23*s24 + 5*s24**2 + &
                         s12*(4*s13 + 4*s14 + 3*s23 + 9*s24)) - &
                      4*m**2*(18*s12**2 + 6*s14**2 + s14*s23 + &
                         34*s14*s24 + 13*s23*s24 + 28*s24**2 + &
                         3*s13*(s14 + 5*s24) + &
                         s12*(15*s13 + 24*s14 + 7*s23 + 46*s24))))))/&
            (s12*(-gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (2*(-2*(s13**2 - s14**2 + 2*s14*s23 - s23**2 - 2*s13*s24 + &
                   s24**2)*(-(s13*s14*s23) - s14**2*s23 - s14*s23**2 + &
                   s13**2*s24 + s13*s14*s24 + s13*s23*s24 - &
                   s14*s23*s24 + s13*s24**2 + &
                   4*m**4*(s13 - s14 - s23 + s24) + &
                   s12**2*(s13 - s14 - s23 + s24) + &
                   s12*(s13**2 - s14**2 - 2*s14*s23 - s23**2 + &
                      2*s13*s24 + s24**2) + &
                   m**2*(-s13**2 + s14**2 + 6*s14*s23 + s23**2 - &
                      6*s13*s24 - s24**2 - 4*s12*(s13 - s14 - s23 + s24)&
)) - 2*gm**4*(128*m**4*s12 + 10*s12**3 - s14*s23*(s14 + s23 - s24) - &
                   s13**2*s24 + 16*s12**2*(s13 + s14 + s23 + s24) + &
                   s13*((s23 - s24)*s24 + s14*(s23 + s24)) + &
                   m**2*(-64*s12**2 + (s13 - s14 - s23 + s24)**2 - &
                      60*s12*(s13 + s14 + s23 + s24)) + &
                   2*s12*(3*s13**2 + 3*s14**2 + 3*s23**2 + 10*s23*s24 + &
                      3*s24**2 + 6*s14*(s23 + s24) + &
                      2*s13*(5*s14 + 3*(s23 + s24)))) + &
                8*gm**2*(-80*m**6*s12 + 5*s12**4 + &
                   10*s12**3*(s13 + s14 + s23 + s24) - &
                   (s14*s23 - s13*s24)**2 + &
                   m**4*(100*s12**2 - (s13 - s14 - s23 + s24)**2 + &
                      60*s12*(s13 + s14 + s23 + s24)) + &
                   2*s12**2*(3*s13**2 + 3*s14**2 + 3*s23**2 + &
                      7*s23*s24 + 3*s24**2 + 6*s14*(s23 + s24) + &
                      s13*(7*s14 + 6*(s23 + s24))) + &
                   s12*(s13**3 + s14**3 + s23**3 + 4*s23**2*s24 + &
                      4*s23*s24**2 + s24**3 + 3*s14**2*(s23 + s24) + &
                      3*s14*(s23**2 + 3*s23*s24 + s24**2) + &
                      s13**2*(4*s14 + 3*(s23 + s24)) + &
                      s13*(4*s14**2 + 9*s14*(s23 + s24) + &
                         3*(s23**2 + 3*s23*s24 + s24**2))) - &
                   m**2*(40*s12**3 + 50*s12**2*(s13 + s14 + s23 + s24) - &
                      2*(s13 - s14 - s23 + s24)*(-(s14*s23) + s13*s24) + &
                      s12*(11*s13**2 + 11*s14**2 + 11*s23**2 + &
                         30*s23*s24 + 11*s24**2 + 34*s14*(s23 + s24) + &
                         s13*(30*s14 + 34*(s23 + s24)))))))/s12 - &
           ((-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)*&
              (-4*(-2*m**2 + s12 + s13 + s23)**2*&
                 (48*m**6 + 3*s13*s14*s23 + s14**2*s23 + s14*s23**2 + &
                   s13**2*s24 + 3*s13*s14*s24 + 3*s13*s23*s24 + &
                   3*s14*s23*s24 + s13*s24**2 + &
                   s12**2*(s13 + s14 + s23 + s24) + &
                   s12*(s13 + s14 + s23 + s24)**2 - &
                   4*m**4*(12*s12 + 5*(s13 + s14 + s23 + s24)) + &
                   m**2*(12*s12**2 - s13**2 - 6*s13*s14 - s14**2 + &
                      10*s13*s23 + 6*s14*s23 - s23**2 + 6*s13*s24 + &
                      10*s14*s24 - 6*s23*s24 - s24**2 + &
                      8*s12*(s13 + s14 + s23 + s24))) + &
                2*gm**4*(152*m**6 - 10*s12**3 - 8*s13*s14*s23 - &
                   3*s14**2*s23 - 8*s14*s23**2 + &
                   4*m**4*(2*s12 - 13*s13 - 32*s14 - 13*s23 - 32*s24) - &
                   8*s13**2*s24 - 9*s13*s14*s24 - 8*s13*s23*s24 - &
                   9*s14*s23*s24 - 3*s13*s24**2 - &
                   s12**2*(20*s13 + 13*s14 + 20*s23 + 13*s24) - &
                   s12*(10*s13**2 + 13*s13*s14 + 3*s14**2 + &
                      20*s13*s23 + 21*s14*s23 + 10*s23**2 + &
                      21*s13*s24 + 6*s14*s24 + 13*s23*s24 + 3*s24**2) + &
                   m**2*(26*s12**2 + 8*s13**2 + 17*s13*s14 + 3*s14**2 + &
                      12*s13*s23 + 51*s14*s23 + 8*s23**2 + 51*s13*s24 + &
                      94*s14*s24 + 17*s23*s24 + 3*s24**2 + &
                      4*s12*(9*s13 + 17*s14 + 9*s23 + 17*s24))) + &
                gm**2*(2*(-2*m**2 + s12 + s14 + s24)*&
                    (-4*s12*(-2*m**2 + s12 + s13 + s23)**2 + &
                      6*m**2*(m**2 - s14)*(-2*m**2 + s12 + s23 + s24) + &
                      4*(-2*m**2 + s12 + s13 + s23)*&
                       (5*m**4 + s14*(s12 + s23 + 4*s24) - &
                         m**2*(5*s14 + s23 + 4*s24))) + &
                   4*(-2*m**2 + s12 + s13 + s14)*&
                    ((m**2 - s23)*(-2*m**2 + s12 + s13 + s23)**2 + &
                      3*m**2*(m**2 - s24)*(-2*m**2 + s12 + s14 + s24) + &
                      (-2*m**2 + s12 + s13 + s23)*&
                       (m**4 + m**2*(s12 + 3*s13 + s14 + 4*s23 - s24) - &
                         s24*(s12 + 3*s13 + s14 + 3*s23 + s24)) + &
                      2*(-2*m**2 + s12 + s23 + s24)*&
                       (10*m**4 - &
                         2*(s12 + s13 + s23)*&
                         (s12 + s13 + s14 + s23 + s24) + &
                         m**2*(8*s12 + 8*s13 + 7*s14 + 8*s23 + 7*s24))) + &
                   4*(-2*m**2 + s12 + s13 + s23)*&
                    ((-2*m**2 + s12 + s23 + s24)*&
                       (-3*m**4 - 3*s14*(s12 + s13 + s14 + s23 + s24) + &
                         m**2*(3*s12 + 4*s13 + 5*s14 + 3*s23 + 3*s24)) - &
                      (2*m**2 - s12 - s13 - s23)*&
                       (2*s12**2 + m**2*(11*s12 + s13 - s14) + &
                         (-s13 + s14)*s23 + &
                         s12*(s13 + 2*(s14 + s23 + s24)))))))/&
            (s12*(-gm**2 - 2*m**2 + s12 + s13 + s23))))/&
       (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2 - &
      (4*(8*(-2*m**2 + s12 + s13 + s23)*(-2*m**2 + s12 + s14 + s24)**2*&
            (m**2*(m**2 - s13)*(-2*m**2 + s12 + s23 + s24) + &
              ((2*m**2 - s12 - s13 - s23)*&
                 (2*m**4 + s14*s23 + s13*s24 - &
                   m**2*(s13 + s14 + s23 + s24)))/2.) + &
           2*gm**6*((m**2 - s14)*&
               (28*m**4 + m**2*(9*s12 + 9*s13 + 9*s14 - 7*s23 - 3*s24) - &
                 9*s23*(s12 + s13 + s14 + s23 + s24)) + &
              (m**2 - s13)*(28*m**4 + &
                 m**2*(9*s12 + 9*s13 + 9*s14 - 3*s23 - 7*s24) - &
                 9*s24*(s12 + s13 + s14 + s23 + s24)) + &
              2*s12*(-12*m**4 - &
                 4*m**2*(2*m**2 + s12 + s13 + s14 + s23 + s24) + &
                 6*(2*m**2 + s12 + s13 + s14 + s23 + s24)**2)) + &
           2*gm**4*(6*m**2*(m**2 - s14)*(m**2 - s23)*&
               (-2*m**2 + s12 + s13 + s23) + &
              6*m**2*s12*(-2*m**2 + s12 + s13 + s23)**2 - &
              3*(m**2 - s13)*(m**2 - s23)*(-2*m**2 + s12 + s13 + s23)**2 + &
              6*m**2*(m**2 - s13)*(-2*m**2 + s12 + s13 + s23)*&
               (m**2 - s24) - 48*m**2*(m**2 - s13)*(m**2 - s23)*&
               (2*m**2 + s12 + s13 + s14 + s23 + s24) - &
              8*m**2*s12*(2*m**2 - s12 - s13 - s23)*&
               (2*m**2 + s12 + s13 + s14 + s23 + s24) - &
              12*(m**2 - s13)*(m**2 - s23)*(2*m**2 - s12 - s13 - s23)*&
               (2*m**2 + s12 + s13 + s14 + s23 + s24) - &
              12*(m**2 - s14)*(m**2 - s23)*&
               (2*m**2 + s12 + s13 + s14 + s23 + s24)**2 - &
              12*(m**2 - s13)*(m**2 - s24)*&
               (2*m**2 + s12 + s13 + s14 + s23 + s24)**2 - &
              3*(-2*m**2 + s12 + s14 + s24)**2*&
               (m**4 + s14*s24 - m**2*(2*s12 + s14 + s24)) + &
              2*(-2*m**2 + s12 + s23 + s24)*&
               (-40*m**6 - 3*m**2*(2*s13 - 7*s14)*&
                  (s12 + s13 + s14 + s23 + s24) - &
                 3*(s13 - s14)*(s12 + s13 + s14 + s23 + s24)**2 - &
                 5*m**4*(3*s12 + s13 + 3*(-s14 + s23 + s24)) + &
                 (-2*m**2 + s12 + s13 + s23)*&
                  (-2*m**4 + 2*m**2*s14 - &
                    ((m**2 - s13)*&
                       (4*m**2 + 3*(s12 + s13 + s14 + s23 + s24)))/4.)) + &
              2*(-2*m**2 + s12 + s14 + s24)*&
               (-3*m**2*(m**2 - s14)*(m**2 - s23) - &
                 3*m**2*(m**2 - s13)*(m**2 - s24) + &
                 6*m**2*s12*(2*m**2 + s12 + s13 + s14 + s23 + s24) - &
                 6*(m**2 - s14)*(m**2 - s24)*&
                  (2*m**2 + s12 + s13 + s14 + s23 + s24) - &
                 ((2*m**2 - s12 - s13 - s23)*&
                    (10*m**4 + 9*s12**2 + &
                      9*s12*(s13 + s14 + s23 + s24) + &
                      5*(s14*s23 + s13*s24) + &
                      m**2*(14*s12 - 5*(s13 + s14 + s23 + s24))))/2. + &
                 (-2*m**2 + s12 + s23 + s24)*&
                  (-2*m**4 + 2*m**2*s13 - &
                    ((m**2 - s14)*&
                       (4*m**2 + 3*(s12 + s13 + s14 + s23 + s24)))/4.))) - &
           2*gm**2*(m**2*(-2*m**2 + s12 + s13 + s23)*&
               (2*(4*m**4 - 2*m**2*(s13 + s14) - &
                    (s13 - s14)*(s12 + s13 + s23))*&
                  (2*m**2 - s12 - s23 - s24) - &
                 4*(2*m**2 - s12 - s13 - s23)*&
                  (2*m**4 + s14*s23 + s13*s24 - &
                    m**2*(s13 + s14 + s23 + s24))) + &
              ((-2*m**2 + s12 + s14 + s24)**2*&
                 (4*m**2*(5*m**2 - 2*s13 - 3*s14)*&
                    (2*m**2 - s12 - s23 - s24) + &
                   4*(2*m**2 - s12 - s13 - s23)*&
                    (-8*m**4 - s13*s24 - s14*(s23 + 6*s24) + &
                      m**2*(6*s12 + s13 + 7*s14 + s23 + 7*s24))))/4. + &
              2*(-2*m**2 + s12 + s14 + s24)*&
               (6*m**2*(m**2 - s13)*(2*m**2 - s12 - s23 - s24)*&
                  (2*m**2 + s12 + s13 + s14 + s23 + s24) - &
                 ((-2*m**2 + s12 + s13 + s23)**2*&
                    (8*m**4 + s14*s23 + &
                      m**2*(4*s12 - 7*s13 - s14 - 7*s23 - s24) + &
                      s13*(6*s23 + s24)))/2. + &
                 ((2*m**2 - s12 - s13 - s23)*&
                    (-42*m**6 + &
                      m**4*(-39*s12 + 26*s13 - 32*s14 + 9*s23 - 15*s24) - &
                      3*(s12 + s13 + s14 + s23 + s24)*&
                       (s12*(s13 - s14) + s13*s23 + 3*s14*s23 + &
                         5*s13*s24 - s14*s24) + &
                      m**2*(18*s13**2 + 24*s13*s14 + 6*s14**2 + &
                         5*s13*s23 + 10*s14*s23 + 12*s23**2 + 5*s13*s24 + &
                         34*s14*s24 + 24*s23*s24 + 12*s24**2 + &
                         s12*(17*s13 + 22*s14 + 12*(s23 + s24)))))/2.)) + &
           (-2*m**2 + s12 + s13 + s14)*&
            (8*m**2*(m**2 - s23)*(-2*m**2 + s12 + s13 + s23)*&
               (-2*m**2 + s12 + s14 + s24)**2 + &
              4*gm**2*m**2*(-2*m**2 + s12 + s23 + s24)*&
               (2*gm**2*m**2 + &
                 7*gm**2*(2*m**2 + s12 + s13 + s14 + s23 + s24) - &
                 2*(2*m**2 - s12 - s13 - s23)*&
                  (4*m**2 + s12 + s13 + s14 + s23 + s24) + &
                 3*(-2*m**2 + s12 + s14 + s24)*&
                  (2*m**2 + 2*s12 + 2*s13 + s14 + 2*s23 + s24)) - &
              gm**4*(112*m**6 + &
                 4*m**4*(18*s12 + 15*s13 + 15*s14 + 11*s23 - 9*s24) + &
                 m**2*(6*s12**2 + 3*s13**2 + 3*s14**2 + 28*s14*s23 + &
                    29*s23**2 + s13*(6*s14 + 32*s23 - 80*s24) + &
                    9*s12*(s13 + s14 + 3*s23 - 9*s24) - 76*s14*s24 - &
                    58*s23*s24 - 79*s24**2) + &
                 3*(s12 + s13 + s14 + s23 + s24)*&
                  (3*s12*s23 + 3*s13*s23 + 4*s14*s23 + 3*s23**2 - &
                    5*s12*s24 - 4*s13*s24 - 5*s14*s24 - 5*s24**2)) - &
              2*gm**2*(2*m**2*(-2*m**2 + s12 + s13 + s23)**2*(s23 - s24) + &
                 m**2*(-2*m**2 + s12 + s14 + s24)*&
                  (-3*(m**2 - s24)*(-2*m**2 + s12 + s14 + s24) - &
                    2*(m**2 - s23)*&
                     (10*m**2 + 7*s12 + 6*s13 + 7*s14 + 6*s23 + 7*s24)) + &
                 (-2*m**2 + s12 + s13 + s23)*&
                  (-((m**2 - s24)*(2*m**2 - s12 - s14 - s24)*&
                       (16*m**2 + 3*(s12 + s13 + s14 + s23 + s24))) + &
                    (m**2 - s23)*&
                     (-8*m**4 + &
                       (2*m**2 - s12 - s14 - s24)*&
                        (m**2 + 3*(s12 + s13 + s14 + s23 + s24))))))))/&
       (s12**2*(-gm**2 - 2*m**2 + s12 + s13 + s23)*&
         (-gm**2 - 2*m**2 + s12 + s14 + s24))))/(27.*gm**4)

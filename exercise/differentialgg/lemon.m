part_gg=1d0/64*(((-8*(20*gm**6*(4*m**2 - s12 - s13 - s14 - s23 - s24) - &
            2*(2*m**2 - s12 - s13 - s23)*(2*m**2 - s12 - s14 - s24)*&
             (s13 + s14 - s23 - s24)**2 + &
            2*gm**4*(490*m**4 + 29*s12**2 + 30*s13**2 + 59*s13*s14 + &
               30*s14**2 + 60*s13*s23 + 66*s14*s23 + 30*s23**2 + &
               66*s13*s24 + 60*s14*s24 + 59*s23*s24 + 30*s24**2 + &
               59*s12*(s13 + s14 + s23 + s24) - &
               m**2*(212*s12 + 245*(s13 + s14 + s23 + s24))) - &
            gm**2*(24*m**4*s12 + 6*s12**3 - s13**3 + 5*s13**2*s14 + &
               5*s13*s14**2 - s14**3 + s13**2*s23 - 6*s13*s14*s23 + &
               s14**2*s23 + s13*s23**2 + s14*s23**2 - s23**3 + &
               s13**2*s24 - 6*s13*s14*s24 + s14**2*s24 - 6*s13*s23*s24 - &
               6*s14*s23*s24 + 5*s23**2*s24 + s13*s24**2 + s14*s24**2 + &
               5*s23*s24**2 - s24**3 + &
               6*s12**2*(s13 + s14 + s23 + s24) - &
               2*m**2*(12*s12**2 - 7*(s13 + s14 - s23 - s24)**2 + &
                  6*s12*(s13 + s14 + s23 + s24)) - &
               s12*(s13**2 + s14**2 + s23**2 - 4*s23*s24 + s24**2 - &
                  2*s14*(4*s23 + s24) - 2*s13*(2*s14 + s23 + 4*s24)))))/&
        (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2 - &
       ((4*gm**2*m**2 - (-2*m**2 + s12 + s13 + s23)**2)*&
          (gm**4*(18*m**4 - s12**2 + 2*s13*s14 + 7*s14*s23 + &
               7*s13*s24 + 2*s23*s24 - s12*(s13 + s14 + s23 + s24) + &
               m**2*(88*s12 - 9*(s13 + s14 + s23 + s24))) - &
            2*(-2*m**2 + s12 + s13 + s23)**2*&
             (18*m**4 - s12**2 + 2*s13*s14 + 7*s14*s23 + 7*s13*s24 + &
               2*s23*s24 - s12*(s13 + s14 + s23 + s24) - &
               m**2*(20*s12 + 9*(s13 + s14 + s23 + s24))) + &
            gm**2*(144*m**6 - &
               2*m**4*(98*s12 + 9*(5*s13 + s14 + 5*s23 + s24)) + &
               (s12 + s13 + s23)*&
                (s12**2 + 6*s13**2 + s13*(-2*s14 + 42*s23 - 7*s24) + &
                  s23*(-7*s14 + 6*s23 - 2*s24) + &
                  s12*(31*s13 + s14 + 31*s23 + s24)) + &
               m**2*(138*s12**2 - 33*s13**2 + &
                  s12*(153*s13 + 7*s14 + 153*s23 + 7*s24) + &
                  s23*(23*s14 - 33*s23 + 13*s24) + &
                  s13*(13*s14 - 6*s23 + 23*s24)))))/&
        (s12**2*(gm**2 - 2*m**2 + s12 + s13 + s23)**2) - &
       ((4*gm**2*m**2 - (-2*m**2 + s12 + s14 + s24)**2)*&
          (-2*(-2*m**2 + s12 + s14 + s24)**2*&
             (18*m**4 - s12**2 + 2*s13*s14 + 7*s14*s23 + 7*s13*s24 + &
               2*s23*s24 - s12*(s13 + s14 + s23 + s24) + &
               m**2*(16*s12 - 9*(s13 + s14 + s23 + s24))) + &
            gm**4*(18*m**4 - s12**2 + 2*s13*s14 + 7*s14*s23 + &
               7*s13*s24 + 2*s23*s24 - s12*(s13 + s14 + s23 + s24) + &
               m**2*(88*s12 - 9*(s13 + s14 + s23 + s24))) + &
            gm**2*(-216*m**6 + &
               6*m**4*(62*s12 - 3*(s13 - 15*s14 + s23 - 15*s24)) + &
               m**2*(-42*s12**2 + 13*s13*s14 - 73*s14**2 + 23*s14*s23 + &
                  s12*(7*s13 - 227*s14 + 7*s23 - 227*s24) + &
                  23*s13*s24 - 286*s14*s24 + 13*s23*s24 - 73*s24**2) + &
               (s12 + s14 + s24)*&
                (s12**2 - 2*s13*s14 + 6*s14**2 - 7*s14*s23 - 7*s13*s24 + &
                  42*s14*s24 - 2*s23*s24 + 6*s24**2 + &
                  s12*(s13 + 31*s14 + s23 + 31*s24)))))/&
        (s12**2*(gm**2 - 2*m**2 + s12 + s14 + s24)**2) - &
       (2*(2*(2*m**2 - s12 - s13 - s23)*(2*m**2 - s12 - s14 - s24)*&
             (12*m**4 + 3*s12**2 + s13**2 + 2*s13*s14 + s14**2 + &
               6*s12*(s13 + s14) - 12*m**2*(s12 + s13 + s14) + &
               4*s13*s23 + 4*s14*s23 - 2*s23**2 + 4*s13*s24 + &
               4*s14*s24 - 4*s23*s24 - 2*s24**2) + &
            2*gm**4*(3*m**4 + 3*s12**2 + s13*s14 - &
               m**2*(4*s12 + 3*(s13 + s14)) + 2*s14*s23 + 2*s13*s24 - &
               2*s23*s24 + 3*s12*(s13 + s14 + s23 + s24)) + &
            gm**2*(48*m**6 - 8*s12**3 - s13**3 - 5*s13**2*s14 - &
               5*s13*s14**2 - s14**3 - 5*s13**2*s23 - 17*s13*s14*s23 - &
               8*s14**2*s23 - 2*s13*s23**2 - 2*s14*s23**2 + 2*s23**3 - &
               8*s13**2*s24 - 17*s13*s14*s24 - 5*s14**2*s24 - &
               8*s13*s23*s24 - 8*s14*s23*s24 + 10*s23**2*s24 - &
               2*s13*s24**2 - 2*s14*s24**2 + 10*s23*s24**2 + 2*s24**3 - &
               2*m**4*(40*s12 + 33*s13 + 33*s14 + 9*s23 + 9*s24) - &
               s12**2*(17*s13 + 17*s14 + 8*(s23 + s24)) - &
               s12*(10*s13**2 + 10*s14**2 + s14*(18*s23 + 13*s24) + &
                  s13*(28*s14 + 13*s23 + 18*s24) - &
                  2*(s23**2 + s23*s24 + s24**2)) + &
               m**2*(44*s12**2 + 19*s13**2 + 50*s13*s14 + 19*s14**2 + &
                  31*s13*s23 + 37*s14*s23 - 8*s23**2 + 37*s13*s24 + &
                  31*s14*s24 - 16*s23*s24 - 8*s24**2 + &
                  s12*(67*s13 + 67*s14 + 25*(s23 + s24))))))/s12**2 + &
       (2*(4*gm**8*(m**2 - s13)*(m**2 - s14) + &
            gm**4*(2*m**2 - s12 - s13 - s14)*&
             (1820*m**6 + 52*s12**3 + 52*s13**3 + 180*s13**2*s14 + &
               180*s13*s14**2 + 52*s14**3 + 44*s13**2*s23 + &
               82*s13*s14*s23 + 50*s14**2*s23 - 8*s13*s23**2 - &
               9*s14*s23**2 + 50*s13**2*s24 + 82*s13*s14*s24 + &
               44*s14**2*s24 + 11*s13*s23*s24 + 11*s14*s23*s24 - &
               9*s13*s24**2 - 8*s14*s24**2 - &
               2*m**4*(569*s12 + 627*s13 + 627*s14 + 82*s23 + 82*s24) + &
               3*s12**2*(54*s13 + 54*s14 + 17*(s23 + s24)) + &
               s12*(162*s13**2 + 162*s14**2 + 125*s14*s23 - s23**2 + &
                  101*s14*s24 + 20*s23*s24 - s24**2 + &
                  s13*(348*s14 + 101*s23 + 125*s24)) + &
               m**2*(90*s12**2 + 62*s13**2 + 100*s13*s14 + 62*s14**2 - &
                  s13*s23 - 11*s14*s23 + 17*s23**2 - 11*s13*s24 - &
                  s14*s24 - 22*s23*s24 + 17*s24**2 + &
                  s12*(86*s13 + 86*s14 - 88*(s23 + s24)))) - &
            (-2*m**2 + s12 + s13 + s14)**3*&
             (196*m**6 + 2*s12**3 + 2*s13**3 + 2*s13**2*s14 + &
               2*s13*s14**2 + 2*s14**3 + 2*s13*s14*s23 - 2*s14**2*s23 - &
               2*s13*s23**2 - 3*s14*s23**2 - 2*s13**2*s24 + &
               2*s13*s14*s24 - s13*s23*s24 - s14*s23*s24 - &
               3*s13*s24**2 - 2*s14*s24**2 - &
               2*m**4*(51*s12 + 73*s13 + 73*s14 + 26*s23 + 26*s24) + &
               s12*(4*s13**2 + 4*s14**2 - 3*s14*s23 + 5*s23**2 + &
                  s13*(4*s14 + 5*s23 - 3*s24) + 5*s14*s24 + &
                  8*s23*s24 + 5*s24**2) + &
               s12**2*(4*s13 + 4*s14 + 7*(s23 + s24)) + &
               m**2*(-2*s12**2 + 22*s13**2 + 44*s13*s14 + 22*s14**2 + &
                  23*s13*s23 + 29*s14*s23 + 5*s23**2 + 29*s13*s24 + &
                  23*s14*s24 + 2*s23*s24 + 5*s24**2 + &
                  s12*(42*s13 + 42*s14 - 8*(s23 + s24)))) + &
            2*gm**2*(-2*m**2 + s12 + s13 + s14)**2*&
             (540*m**6 + 7*s12**3 + 7*s13**3 + 25*s13**2*s14 + &
               25*s13*s14**2 + 7*s14**3 + 5*s13**2*s23 + &
               7*s13*s14*s23 + 8*s14**2*s23 - 8*s13*s23**2 - &
               6*s14*s23**2 - 6*s23**3 + 8*s13**2*s24 + 7*s13*s14*s24 + &
               5*s14**2*s24 - 10*s13*s23*s24 - 10*s14*s23*s24 - &
               12*s23**2*s24 - 6*s13*s24**2 - 8*s14*s24**2 - &
               12*s23*s24**2 - 6*s24**3 - &
               2*m**4*(228*s12 + 180*s13 + 180*s14 + 85*s23 + 85*s24) + &
               3*s12**2*(8*s13 + 8*s14 - 3*(s23 + s24)) + &
               s12*(24*s13**2 + 24*s14**2 + 11*s14*s23 - 22*s23**2 - &
                  s14*s24 - 28*s23*s24 - 22*s24**2 + &
                  s13*(52*s14 - s23 + 11*s24)) + &
               m**2*(84*s12**2 + 43*s13**2 + 90*s13*s14 + 43*s14**2 + &
                  41*s13*s23 + 31*s14*s23 + 50*s23**2 + 31*s13*s24 + &
                  41*s14*s24 + 80*s23*s24 + 50*s24**2 + &
                  2*s12*(47*s13 + 47*s14 + 55*(s23 + s24)))) + &
            2*gm**6*(-80*m**6 + 44*s12**3 + 44*s13**3 + 136*s13**2*s14 + &
               136*s13*s14**2 + 44*s14**3 + 44*s13**2*s23 + &
               89*s13*s14*s23 + 43*s14**2*s23 + 43*s13**2*s24 + &
               89*s13*s14*s24 + 44*s14**2*s24 + &
               4*m**4*(59*s12 + 65*s13 + 65*s14 + 44*s23 + 44*s24) + &
               s12**2*(131*s13 + 131*s14 + 44*(s23 + s24)) + &
               s12*(131*s13**2 + s13*(266*s14 + 87*s23 + 83*s24) + &
                  s14*(131*s14 + 83*s23 + 87*s24)) - &
               m**2*(196*s12**2 + 197*s13**2 + 406*s13*s14 + &
                  197*s14**2 + 177*s13*s23 + 175*s14*s23 + 175*s13*s24 + &
                  177*s14*s24 + &
                  2*s12*(191*s13 + 191*s14 + 85*(s23 + s24))))))/&
        ((-gm**2 - 2*m**2 + s12 + s13 + s14)**2*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) - &
       (4*(-4*(2*m**2 - s12 - s13 - s23)*(2*m**2 - s12 - s14 - s24)*&
             (s13 + s14 - s23 - s24)**2 + &
            2*gm**4*(110*m**4 + 18*s12**2 + 15*s13**2 + 53*s13*s14 + &
               15*s14**2 - 2*m**2*(32*s12 + 55*(s13 + s14)) + &
               10*s13*s23 + 17*s14*s23 - 5*s23**2 + 17*s13*s24 + &
               10*s14*s24 - 17*s23*s24 - 5*s24**2 + &
               s12*(33*s13 + 33*s14 + 13*(s23 + s24))) + &
            gm**2*(400*m**6 - 52*s12**3 - 23*s13**3 - 95*s13**2*s14 - &
               95*s13*s14**2 - 23*s14**3 - 37*s13**2*s23 - &
               113*s13*s14*s23 - 52*s14**2*s23 - 7*s13*s23**2 - &
               12*s14*s23**2 + 7*s23**3 - 52*s13**2*s24 - &
               113*s13*s14*s24 - 37*s14**2*s24 - 23*s13*s23*s24 - &
               23*s14*s23*s24 + 35*s23**2*s24 - 12*s13*s24**2 - &
               7*s14*s24**2 + 35*s23*s24**2 + 7*s24**3 - &
               s12**2*(127*s13 + 127*s14 + 57*(s23 + s24)) - &
               2*s12*(49*s13**2 + 49*s14**2 + 58*s14*s23 - s23**2 + &
                  47*s14*s24 - 6*s23*s24 - s24**2 + &
                  s13*(124*s14 + 47*s23 + 58*s24)) - &
               16*m**4*(38*s12 + 5*(7*s13 + 7*s14 + 2*(s23 + s24))) + &
               m**2*(308*s12**2 + 207*s13**2 + 514*s13*s14 + &
                  207*s14**2 + 196*s13*s23 + 236*s14*s23 - 23*s23**2 + &
                  236*s13*s24 + 196*s14*s24 - 66*s23*s24 - 23*s24**2 + &
                  2*s12*(267*s13 + 267*s14 + 97*(s23 + s24))))))/&
        (s12*(-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
       (4*(8*gm**8*(m**2 - s23)*(m**2 - s24) + &
            2*(-2*m**2 + s12 + s23 + s24)**3*&
             (44*m**6 - 2*s12**3 - s13**2*s23 + s13*s14*s23 - &
               3*s13*s23**2 - s14*s23**2 - 2*s23**3 + s13*s14*s24 - &
               s14**2*s24 - 2*s13*s23*s24 - 2*s14*s23*s24 - &
               2*s23**2*s24 - s13*s24**2 - 3*s14*s24**2 - &
               2*s23*s24**2 - 2*s24**3 - &
               4*s12**2*(s13 + s14 + s23 + s24) - &
               2*m**4*(27*s12 + 7*s13 + 7*s14 + 20*s23 + 20*s24) - &
               s12*(2*s13**2 + 2*s14**2 + &
                  s13*(2*s14 + 5*s23 + 3*s24) + s14*(3*s23 + 5*s24) + &
                  4*(s23**2 + s23*s24 + s24**2)) + &
               m**2*(20*s12**2 + s13**2 - 2*s13*s14 + s14**2 + &
                  13*s13*s23 + 7*s14*s23 + 14*s23**2 + 7*s13*s24 + &
                  13*s14*s24 + 16*s23*s24 + 14*s24**2 + &
                  4*s12*(5*s13 + 5*s14 + 6*(s23 + s24)))) - &
            gm**4*(2*m**2 - s12 - s23 - s24)*&
             (680*m**6 - 41*s12**3 - 17*s13**2*s23 - 4*s13*s14*s23 - &
               15*s14**2*s23 - 46*s13*s23**2 - 58*s14*s23**2 - &
               29*s23**3 - 15*s13**2*s24 - 4*s13*s14*s24 - &
               17*s14**2*s24 - 116*s13*s23*s24 - 116*s14*s23*s24 - &
               135*s23**2*s24 - 58*s13*s24**2 - 46*s14*s24**2 - &
               135*s23*s24**2 - 29*s24**3 - &
               4*m**4*(199*s12 + 95*s13 + 95*s14 + 180*s23 + 180*s24) - &
               3*s12**2*(20*s13 + 20*s14 + 41*(s23 + s24)) - &
               s12*(19*s13**2 + 19*s14**2 + 2*s14*(65*s23 + 59*s24) + &
                  2*s13*(5*s14 + 59*s23 + 65*s24) + &
                  3*(37*s23**2 + 90*s23*s24 + 37*s24**2)) + &
               m**2*(270*s12**2 + 32*s13**2 + 8*s13*s14 + 32*s14**2 + &
                  290*s13*s23 + 310*s14*s23 + 242*s23**2 + &
                  310*s13*s24 + 290*s14*s24 + 604*s23*s24 + &
                  242*s24**2 + 4*s12*(86*s13 + 86*s14 + 143*(s23 + s24))&
)) + gm**6*(-296*m**6 + 23*s12**3 + 26*s13*s23**2 + 22*s14*s23**2 + &
               26*s23**3 + 44*s13*s23*s24 + 44*s14*s23*s24 + &
               94*s23**2*s24 + 22*s13*s24**2 + 26*s14*s24**2 + &
               94*s23*s24**2 + 26*s24**3 + &
               4*m**4*(86*s12 + 23*s13 + 23*s14 + 104*s23 + 104*s24) + &
               s12*(45*s13*s23 + 41*s14*s23 + 71*s23**2 + 41*s13*s24 + &
                  45*s14*s24 + 158*s23*s24 + 71*s24**2) + &
               s12**2*(23*s13 + 23*s14 + 68*(s23 + s24)) - &
               2*m**2*(77*s12**2 + 48*s13*s23 + 44*s14*s23 + &
                  94*s23**2 + 44*s13*s24 + 48*s14*s24 + 200*s23*s24 + &
                  94*s24**2 + s12*(43*s13 + 43*s14 + 161*(s23 + s24)))) &
- gm**2*(-2*m**2 + s12 + s23 + s24)**2*&
             (108*m**6 - 10*s12**3 + 6*s13**3 + 12*s13**2*s14 + &
               12*s13*s14**2 + 6*s14**3 + 2*s13**2*s23 + 4*s13*s14*s23 - &
               6*s14**2*s23 - 17*s13*s23**2 - 29*s14*s23**2 - &
               13*s23**3 - 6*s13**2*s24 + 4*s13*s14*s24 + 2*s14**2*s24 - &
               58*s13*s23*s24 - 58*s14*s23*s24 - 55*s23**2*s24 - &
               29*s13*s24**2 - 17*s14*s24**2 - 55*s23*s24**2 - &
               13*s24**3 - 2*m**4*&
                (54*s12 + 17*s13 + 17*s14 + 114*s23 + 114*s24) - &
               3*s12**2*(2*s13 + 2*s14 + 15*(s23 + s24)) + &
               s12*(10*s13**2 + 10*s14**2 + &
                  s13*(28*s14 - 35*s23 - 47*s24) - &
                  s14*(47*s23 + 35*s24) - &
                  16*(3*s23**2 + 7*s23*s24 + 3*s24**2)) + &
               2*m**2*(21*s12**2 + &
                  s12*(11*s13 + 11*s14 + 97*(s23 + s24)) + &
                  2*(-8*s13**2 - 8*s14**2 + 32*s14*s23 + 23*s23**2 + &
                     22*s14*s24 + 60*s23*s24 + 23*s24**2 + &
                     s13*(-17*s14 + 22*s23 + 32*s24))))))/&
        ((-gm**2 - 2*m**2 + s12 + s23 + s24)**2*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) - &
       (2*(2*gm**4*(828*m**6 - 23*s12**3 - 33*s13**3 - 34*s13**2*s14 - &
               12*s13*s14**2 + 30*s14**3 - 99*s13**2*s23 - &
               57*s13*s14*s23 - 99*s13*s23**2 - 23*s14*s23**2 - &
               33*s23**3 + 6*m**4*&
                (55*s12 + 48*s13 - 69*s14 + 48*s23 - 69*s24) - &
               23*s13**2*s24 - 12*s13*s14*s24 + 78*s14**2*s24 - &
               57*s13*s23*s24 - 12*s14*s23*s24 - 34*s23**2*s24 + &
               78*s14*s24**2 - 12*s23*s24**2 + 30*s24**3 - &
               s12**2*(79*s13 + 83*s14 + 79*s23 + 83*s24) + &
               m**2*(172*s12**2 - 4*s13**2 - 27*s13*s14 - 49*s14**2 + &
                  8*s13*s23 - 45*s14*s23 - 4*s23**2 + &
                  s12*(153*s13 - 91*s14 + 153*s23 - 91*s24) - &
                  45*s13*s24 - 10*s14*s24 - 27*s23*s24 - 49*s24**2) - &
               s12*(89*s13**2 + 117*s13*s14 + 30*s14**2 + 178*s13*s23 + &
                  106*s14*s23 + 89*s23**2 + 106*s13*s24 + 72*s14*s24 + &
                  117*s23*s24 + 30*s24**2)) - &
            6*gm**6*(24*m**4 + &
               3*(s14 + s24)*(s12 + s13 + s14 + s23 + s24) - &
               2*m**2*(3*s12 + 2*(s13 + 5*s14 + s23 + 5*s24))) + &
            4*(2*m**2 - s12 - s13 - s23)*&
             (8*m**6*(8*s12 + 27*s13 - 9*s14 + 27*s23 - 9*s24) - &
               (s12 + s13 + s23)*&
                (8*s12**3 + 5*s13**3 + 5*s14**3 + 4*s14**2*s23 + &
                  4*s14*s23**2 + 5*s23**3 + 13*s14**2*s24 + &
                  7*s14*s23*s24 + 7*s23**2*s24 + 13*s14*s24**2 + &
                  7*s23*s24**2 + 5*s24**3 + &
                  17*s12**2*(s13 + s14 + s23 + s24) + &
                  s13**2*(7*s14 + 13*s23 + 4*s24) + &
                  s13*(7*s14**2 + 13*s23**2 + 7*s23*s24 + 4*s24**2 + &
                     7*s14*(s23 + s24)) + &
                  2*s12*(7*s13**2 + 7*s14**2 + 8*s14*s23 + 7*s23**2 + &
                     13*s14*s24 + 9*s23*s24 + 7*s24**2 + &
                     s13*(9*s14 + 13*s23 + 8*s24))) - &
               2*m**4*(48*s12**2 + &
                  2*s12*(79*s13 - s14 + 79*s23 - s24) + &
                  3*(25*s13**2 - 5*s14**2 + 16*s14*s23 + 25*s23**2 - &
                     2*s14*s24 + 8*s23*s24 - 5*s24**2 + &
                     2*s13*(4*s14 + 29*s23 + 8*s24))) + &
               m**2*(48*s12**3 + 41*s13**3 + &
                  2*s12**2*(77*s13 + 25*s14 + 77*s23 + 25*s24) + &
                  s13**2*(30*s14 + 139*s23 + 44*s24) + &
                  s13*(25*s14**2 + 70*s14*s23 + 139*s23**2 + &
                     60*s14*s24 + 70*s23*s24 + 23*s24**2) + &
                  s23*(23*s14**2 + 44*s14*s23 + 41*s23**2 + &
                     60*s14*s24 + 30*s23*s24 + 25*s24**2) + &
                  s12*(137*s13**2 + 13*s14**2 + 114*s14*s23 + &
                     137*s23**2 + 46*s14*s24 + 94*s23*s24 + 13*s24**2 + &
                     2*s13*(47*s14 + 147*s23 + 57*s24)))) + &
            gm**2*(288*m**8 + &
               16*m**6*(-4*s12 + 3*(s13 + 8*s14 + s23 + 8*s24)) - &
               2*m**4*(80*s12**2 - 197*s13**2 + 13*s14**2 + &
                  84*s14*s23 - 197*s23**2 - 134*s14*s24 + 192*s23*s24 + &
                  13*s24**2 + 2*s13*(96*s14 - 241*s23 + 42*s24) + &
                  s12*(-38*s13 + 258*s14 - 38*s23 + 258*s24)) - &
               (s12 + s13 + s23)*&
                (2*s12**3 - 26*s13**3 - 80*s14**3 - 55*s14**2*s23 - &
                  51*s14*s23**2 - 26*s23**3 - 208*s14**2*s24 - &
                  85*s14*s23*s24 - 50*s23**2*s24 - 208*s14*s24**2 - &
                  64*s23*s24**2 - 80*s24**3 - &
                  s12**2*(75*s13 + 13*s14 + 75*s23 + 13*s24) - &
                  s13**2*(50*s14 + 106*s23 + 51*s24) - &
                  s13*(64*s14**2 + 139*s14*s23 + 106*s23**2 + &
                     85*s14*s24 + 139*s23*s24 + 55*s24**2) - &
                  s12*(103*s13**2 + 95*s14**2 + 104*s14*s23 + &
                     103*s23**2 + 158*s14*s24 + 114*s23*s24 + &
                     95*s24**2 + 2*s13*(57*s14 + 117*s23 + 52*s24))) + &
               m**2*(64*s12**3 - 247*s13**3 - 60*s14**3 - &
                  247*s14**2*s23 - 114*s14*s23**2 - 247*s23**3 - &
                  4*s12**2*(49*s13 - 34*s14 + 49*s23 - 34*s24) - &
                  156*s14**2*s24 - 440*s14*s23*s24 - 128*s23**2*s24 - &
                  156*s14*s24**2 - 261*s23*s24**2 - 60*s24**3 - &
                  s13**2*(128*s14 + 797*s23 + 114*s24) - &
                  s13*(261*s14**2 + 286*s14*s23 + 797*s23**2 + &
                     440*s14*s24 + 286*s23*s24 + 247*s24**2) - &
                  s12*(527*s13**2 + 147*s14**2 + 118*s14*s23 + &
                     527*s23**2 + 294*s14*s24 + 126*s23*s24 + &
                     147*s24**2 + 2*s13*(63*s14 + 551*s23 + 59*s24))))))/&
        (s12*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) - &
       (gm**4*(360*m**6 + 90*s12**3 + 16*s13**2*s14 + 12*s13*s14**2 + &
             72*s13*s14*s23 + 27*s14**2*s23 + 56*s14*s23**2 + &
             4*m**4*(10*s12 + 63*s13 - 90*s14 + 63*s23 - 90*s24) + &
             56*s13**2*s24 + 69*s13*s14*s24 + 72*s13*s23*s24 + &
             69*s14*s23*s24 + 16*s23**2*s24 + 27*s13*s24**2 + &
             12*s23*s24**2 + &
             9*s12**2*(20*s13 + 13*s14 + 20*s23 + 13*s24) + &
             s12*(90*s13**2 + 27*s14**2 + 173*s14*s23 + 90*s23**2 + &
                54*s14*s24 + 133*s23*s24 + 27*s24**2 + &
                s13*(133*s14 + 180*s23 + 173*s24)) + &
             m**2*(190*s12**2 - 68*s13**2 + 29*s14**2 - 223*s14*s23 - &
                68*s23**2 + 4*s12*(27*s13 - 47*s14 + 27*s23 - 47*s24) + &
                338*s14*s24 - 173*s23*s24 + 29*s24**2 - &
                s13*(173*s14 + 116*s23 + 223*s24))) - &
          2*(-2*m**2 + s12 + s13 + s23)**2*&
           (432*m**6 + 2*s12**3 + 4*s13**2*s14 + 4*s13*s14**2 + &
             23*s13*s14*s23 + 9*s14**2*s23 + 9*s14*s23**2 + &
             9*s13**2*s24 + 23*s13*s14*s24 + 23*s13*s23*s24 + &
             23*s14*s23*s24 + 4*s23**2*s24 + 9*s13*s24**2 + &
             4*s23*s24**2 + 11*s12**2*(s13 + s14 + s23 + s24) + &
             s12*(9*s13**2 + 20*s13*s14 + 9*s14**2 + 18*s13*s23 + &
                20*s14*s23 + 9*s23**2 + 20*s13*s24 + 18*s14*s24 + &
                20*s23*s24 + 9*s24**2) - &
             4*m**4*(106*s12 + 45*(s13 + s14 + s23 + s24)) + &
             m**2*(100*s12**2 + 68*s12*(s13 + s14 + s23 + s24) + &
                3*(s13**2 - 10*s13*s14 + s14**2 + 22*s13*s23 + &
                   10*s14*s23 + s23**2 + 10*s13*s24 + 22*s14*s24 - &
                   10*s23*s24 + s24**2))) + &
          2*gm**2*(1152*m**8 - &
             12*m**6*(62*s12 + 45*(s13 + s14 + s23 + s24)) + &
             m**4*(172*s12**2 + 203*s13**2 - 5*s14**2 + 106*s14*s23 + &
                203*s23**2 + 190*s14*s24 - 34*s23*s24 - 5*s24**2 + &
                s13*(-34*s14 + 566*s23 + 106*s24) + &
                s12*(346*s13 + 258*s14 + 346*s23 + 258*s24)) + &
             (s12 + s13 + s23)*&
              (73*s12**3 + 6*s13**3 + &
                8*s12**2*(17*s13 + 8*s14 + 17*s23 + 8*s24) + &
                s13**2*(10*s14 + 48*s23 + 25*s24) + &
                s13*(-4*s14**2 + 55*s14*s23 + 48*s23**2 - 23*s14*s24 + &
                   55*s23*s24 - 9*s24**2) + &
                s23*(-9*s14**2 + 25*s14*s23 + 6*s23**2 - 23*s14*s24 + &
                   10*s23*s24 - 4*s24**2) + &
                s12*(69*s13**2 - 9*s14**2 + 89*s14*s23 + 69*s23**2 - &
                   18*s14*s24 + 84*s23*s24 - 9*s24**2 + &
                   s13*(84*s14 + 168*s23 + 89*s24))) - &
             m**2*(190*s12**3 + 91*s13**3 + &
                s13**2*(36*s14 + 323*s23 + 31*s24) + &
                2*s12**2*(228*s13 + 61*s14 + 228*s23 + 61*s24) + &
                s13*(-27*s14**2 + 77*s14*s23 + 323*s23**2 - &
                   119*s14*s24 + 77*s23*s24 - 52*s24**2) + &
                s23*(-52*s14**2 + 31*s14*s23 + 91*s23**2 - &
                   119*s14*s24 + 36*s23*s24 - 27*s24**2) + &
                s12*(357*s13**2 - 52*s14**2 + 153*s14*s23 + 357*s23**2 - &
                   94*s14*s24 + 163*s23*s24 - 52*s24**2 + &
                   s13*(163*s14 + 764*s23 + 153*s24)))))/&
        (s12**2*(gm**2 - 2*m**2 + s12 + s13 + s23)) + &
       (-2*(-2*m**2 + s12 + s14 + s24)**2*&
           (144*m**6 + 2*s12**3 + 4*s13**2*s14 + 4*s13*s14**2 + &
             23*s13*s14*s23 + 9*s14**2*s23 + 9*s14*s23**2 + &
             9*s13**2*s24 + 23*s13*s14*s24 + 23*s13*s23*s24 + &
             23*s14*s23*s24 + 4*s23**2*s24 + 9*s13*s24**2 + &
             4*s23*s24**2 + 11*s12**2*(s13 + s14 + s23 + s24) + &
             s12*(9*s13**2 + 20*s13*s14 + 9*s14**2 + 18*s13*s23 + &
                20*s14*s23 + 9*s23**2 + 20*s13*s24 + 18*s14*s24 + &
                20*s23*s24 + 9*s24**2) - &
             4*m**4*(34*s12 + 9*(s13 + s14 + s23 + s24)) + &
             m**2*(28*s12**2 - 5*s13**2 - 46*s13*s14 - 5*s14**2 + &
                10*s13*s23 - 26*s14*s23 - 5*s23**2 - 26*s13*s24 + &
                10*s14*s24 - 46*s23*s24 - 5*s24**2 - &
                4*s12*(s13 + s14 + s23 + s24))) + &
          gm**4*(-216*m**6 + 90*s12**3 + 12*s13**2*s14 + &
             16*s13*s14**2 + 69*s13*s14*s23 + 56*s14**2*s23 + &
             27*s14*s23**2 + 27*s13**2*s24 + 72*s13*s14*s24 + &
             69*s13*s23*s24 + 72*s14*s23*s24 + 12*s23**2*s24 + &
             56*s13*s24**2 + 16*s23*s24**2 + &
             9*s12**2*(13*s13 + 20*s14 + 13*s23 + 20*s24) + &
             s12*(27*s13**2 + 133*s13*s14 + 90*s14**2 + 54*s13*s23 + &
                173*s14*s23 + 27*s23**2 + 173*s13*s24 + 180*s14*s24 + &
                133*s23*s24 + 90*s24**2) + &
             m**4*(-568*s12 + 36*(s13 + 12*s14 + s23 + 12*s24)) - &
             m**2*(170*s12**2 - 5*s13**2 + 213*s13*s14 + 68*s14**2 - &
                170*s13*s23 + 363*s14*s23 - 5*s23**2 + 363*s13*s24 + &
                116*s14*s24 + 213*s23*s24 + 68*s24**2 + &
                4*s12*(137*s13 + 63*s14 + 137*s23 + 63*s24))) - &
          2*gm**2*(4*m**6*(92*s12 - &
                9*(3*s13 - 17*s14 + 3*s23 - 17*s24)) - &
             2*m**4*(330*s12**2 - 10*s13**2 + 239*s14**2 + 67*s14*s23 - &
                10*s23**2 + 548*s14*s24 + 77*s23*s24 + 239*s24**2 + &
                s13*(77*s14 - 70*s23 + 67*s24) + &
                6*s12*(26*s13 + 89*s14 + 26*s23 + 89*s24)) - &
             (s12 + s14 + s24)*&
              (73*s12**3 + 6*s14**3 + 25*s14**2*s23 - 9*s14*s23**2 + &
                48*s14**2*s24 + 55*s14*s23*s24 - 4*s23**2*s24 + &
                48*s14*s24**2 + 10*s23*s24**2 + 6*s24**3 - &
                s13**2*(4*s14 + 9*s24) + &
                8*s12**2*(8*s13 + 17*s14 + 8*s23 + 17*s24) + &
                s13*(10*s14**2 - 23*s14*s23 + 55*s14*s24 - &
                   23*s23*s24 + 25*s24**2) + &
                s12*(-9*s13**2 + 69*s14**2 + 89*s14*s23 - 9*s23**2 + &
                   168*s14*s24 + 84*s23*s24 + 69*s24**2 + &
                   s13*(84*s14 - 18*s23 + 89*s24))) + &
             m**2*(384*s12**3 + 111*s14**3 + 118*s14**2*s23 - &
                15*s14*s23**2 + 483*s14**2*s24 + 246*s14*s23*s24 - &
                15*s23**2*s24 + 483*s14*s24**2 + 68*s23*s24**2 + &
                111*s24**3 - 15*s13**2*(s14 + s24) + &
                s12**2*(311*s13 + 799*s14 + 311*s23 + 799*s24) + &
                2*s13*(34*s14**2 - 30*s14*s23 + 123*s14*s24 - &
                   30*s23*s24 + 59*s24**2) + &
                s12*(-15*s13**2 + 526*s14**2 + 429*s14*s23 - 15*s23**2 + &
                   1202*s14*s24 + 409*s23*s24 + 526*s24**2 + &
                   s13*(409*s14 - 60*s23 + 429*s24)))))/&
        (s12**2*(gm**2 - 2*m**2 + s12 + s14 + s24)) + &
       (2*(4*gm**6*(238*m**4 + 12*s12**2 + 30*s13*s23 + 23*s14*s23 + &
               30*s23**2 + 23*s13*s24 + 30*s14*s24 + 72*s23*s24 + &
               30*s24**2 - m**2*&
                (136*s12 + 53*s13 + 53*s14 + 185*s23 + 185*s24) + &
               6*s12*(2*s13 + 2*s14 + 7*(s23 + s24))) + &
            2*gm**4*(2864*m**6 - 60*s12**3 - 66*s13**2*s23 - &
               44*s13*s14*s23 - 62*s14**2*s23 - 168*s13*s23**2 - &
               169*s14*s23**2 - 102*s23**3 - 62*s13**2*s24 - &
               44*s13*s14*s24 - 66*s14**2*s24 - 359*s13*s23*s24 - &
               359*s14*s23*s24 - 374*s23**2*s24 - 169*s13*s24**2 - &
               168*s14*s24**2 - 374*s23*s24**2 - 102*s24**3 - &
               4*m**4*(665*s12 + 334*s13 + 334*s14 + 718*s23 + &
                  718*s24) - &
               s12**2*(109*s13 + 109*s14 + 261*(s23 + s24)) - &
               s12*(49*s13**2 + 49*s14**2 + 303*s23**2 + 668*s23*s24 + &
                  303*s24**2 + 4*s13*(14*s14 + 79*s23 + 72*s24) + &
                  4*s14*(72*s23 + 79*s24)) + &
               m**2*(896*s12**2 + 128*s13**2 + 88*s13*s14 + &
                  128*s14**2 + 1019*s13*s23 + 1013*s14*s23 + &
                  913*s23**2 + 1013*s13*s24 + 1019*s14*s24 + &
                  2006*s23*s24 + 913*s24**2 + &
                  2*s12*(427*s13 + 427*s14 + 897*(s23 + s24)))) + &
            2*(2*m**2 - s12 - s23 - s24)*&
             (576*m**8 + 8*s12**4 + 2*s13**3*s23 + 7*s13**2*s14*s23 + &
               10*s13*s14**2*s23 + 5*s14**3*s23 + 10*s13**2*s23**2 - &
               4*s13*s14*s23**2 + 8*s14**2*s23**2 + 16*s13*s23**3 - &
               3*s14*s23**3 + 8*s23**4 + 5*s13**3*s24 + &
               10*s13**2*s14*s24 + 7*s13*s14**2*s24 + 2*s14**3*s24 + &
               24*s13**2*s23*s24 + 4*s13*s14*s23*s24 + &
               24*s14**2*s23*s24 + 27*s13*s23**2*s24 + &
               8*s14*s23**2*s24 + 16*s23**3*s24 + 8*s13**2*s24**2 - &
               4*s13*s14*s24**2 + 10*s14**2*s24**2 + 8*s13*s23*s24**2 + &
               27*s14*s23*s24**2 + 16*s23**2*s24**2 - 3*s13*s24**3 + &
               16*s14*s24**3 + 16*s23*s24**3 + 8*s24**4 - &
               8*m**6*(116*s12 + 37*s13 + 37*s14 + 89*s23 + 89*s24) + &
               6*s12**3*(3*s13 + 3*s14 + 4*(s23 + s24)) + &
               s12**2*(15*s13**2 + 15*s14**2 + 34*s14*s23 + &
                  29*s23**2 + 44*s14*s24 + 54*s23*s24 + 29*s24**2 + &
                  2*s13*(7*s14 + 22*s23 + 17*s24)) + &
               8*m**4*(66*s12**2 + 9*s13**2 + 6*s13*s14 + 9*s14**2 + &
                  42*s13*s23 + 33*s14*s23 + 39*s23**2 + 33*s13*s24 + &
                  42*s14*s24 + 72*s23*s24 + 39*s24**2 + &
                  s12*(46*s13 + 46*s14 + 101*(s23 + s24))) + &
               s12*(5*s13**3 + 5*s14**3 + 21*s23**3 + 43*s23**2*s24 + &
                  43*s23*s24**2 + 21*s24**3 + &
                  s13**2*(7*s14 + 25*s23 + 23*s24) + &
                  s14**2*(23*s23 + 25*s24) + &
                  s14*(13*s23**2 + 56*s23*s24 + 39*s24**2) + &
                  s13*(7*s14**2 + 39*s23**2 + 56*s23*s24 + 13*s24**2 + &
                     16*s14*(s23 + s24))) - &
               m**2*(120*s12**3 + 7*s13**3 + 7*s14**3 + 61*s14**2*s23 + &
                  43*s14*s23**2 + 69*s23**3 + 53*s14**2*s24 + &
                  186*s14*s23*s24 + 139*s23**2*s24 + 123*s14*s24**2 + &
                  139*s23*s24**2 + 69*s24**3 + &
                  s13**2*(17*s14 + 53*s23 + 61*s24) + &
                  2*s12**2*(73*s13 + 73*s14 + 137*(s23 + s24)) + &
                  s13*(17*s14**2 + 123*s23**2 + 186*s23*s24 + &
                     43*s24**2 + 22*s14*(s23 + s24)) + &
                  s12*(66*s13**2 + 66*s14**2 + 214*s23**2 + &
                     396*s23*s24 + 214*s24**2 + &
                     8*s14*(25*s23 + 32*s24) + &
                     4*s13*(13*s14 + 64*s23 + 50*s24)))) + &
            gm**2*(528*m**8 + 28*s12**4 - 52*s13**3*s23 - &
               93*s13**2*s14*s23 - 84*s13*s14**2*s23 - 43*s14**3*s23 - &
               36*s13**2*s23**2 - 123*s13*s14*s23**2 - &
               37*s14**2*s23**2 + 76*s13*s23**3 + 62*s14*s23**3 + &
               60*s23**4 - 16*m**6*&
                (161*s12 - 6*(8*s13 + 8*s14 - 23*s23 - 23*s24)) - &
               43*s13**3*s24 - 84*s13**2*s14*s24 - 93*s13*s14**2*s24 - &
               52*s14**3*s24 - 17*s13**2*s23*s24 - 134*s13*s14*s23*s24 - &
               17*s14**2*s23*s24 + 242*s13*s23**2*s24 + &
               228*s14*s23**2*s24 + 296*s23**3*s24 - 37*s13**2*s24**2 - &
               123*s13*s14*s24**2 - 36*s14**2*s24**2 + &
               228*s13*s23*s24**2 + 242*s14*s23*s24**2 + &
               472*s23**2*s24**2 + 62*s13*s24**3 + 76*s14*s24**3 + &
               296*s23*s24**3 + 60*s24**4 + &
               s12**3*(-13*s13 - 13*s14 + 141*(s23 + s24)) + &
               s12**2*(-84*s13**2 - 84*s14**2 + 37*s14*s23 + &
                  261*s23**2 + 97*s14*s24 + 590*s23*s24 + 261*s24**2 + &
                  s13*(-200*s14 + 97*s23 + 37*s24)) + &
               4*m**4*(573*s12**2 - 174*s13**2 - 344*s13*s14 - &
                  174*s14**2 + 61*s13*s23 + 55*s14*s23 + 422*s23**2 + &
                  55*s13*s24 + 61*s14*s24 + 984*s23*s24 + 422*s24**2 + &
                  s12*(-38*s13 - 38*s14 + 916*(s23 + s24))) + &
               s12*(-43*s13**3 - 43*s14**3 - &
                  s14**2*(121*s23 + 70*s24) - &
                  s13**2*(93*s14 + 70*s23 + 121*s24) + &
                  s14*(112*s23**2 + 323*s23*s24 + 189*s24**2) + &
                  4*(52*s23**3 + 187*s23**2*s24 + 187*s23*s24**2 + &
                     52*s24**3) + &
                  s13*(-93*s14**2 + 189*s23**2 + 323*s23*s24 + &
                     112*s24**2 - 317*s14*(s23 + s24))) - &
               m**2*(624*s12**3 - 95*s13**3 - 95*s14**3 - &
                  376*s14**2*s23 + 361*s14*s23**2 + 506*s23**3 - &
                  410*s14**2*s24 + 1060*s14*s23*s24 + 1798*s23**2*s24 + &
                  419*s14*s24**2 + 1798*s23*s24**2 + 506*s24**3 - &
                  s13**2*(177*s14 + 410*s23 + 376*s24) + &
                  2*s12**2*(45*s13 + 45*s14 + 781*(s23 + s24)) + &
                  s13*(-177*s14**2 + 419*s23**2 + 1060*s23*s24 + &
                     361*s24**2 - 878*s14*(s23 + s24)) + &
                  s12*(-485*s13**2 - 485*s14**2 + 1453*s23**2 + &
                     3198*s23*s24 + 1453*s24**2 + &
                     8*s14*(57*s23 + 89*s24) + &
                     s13*(-1150*s14 + 712*s23 + 456*s24))))))/&
        ((-gm**2 - 2*m**2 + s12 + s23 + s24)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) + &
       (2*(-6*gm**6*(24*m**4 + &
               3*(s13 + s23)*(s12 + s13 + s14 + s23 + s24) - &
               2*m**2*(3*s12 + 2*(5*s13 + s14 + 5*s23 + s24))) - &
            2*gm**4*(1836*m**6 + 23*s12**3 - 30*s13**3 + &
               12*s13**2*s14 + 34*s13*s14**2 + 33*s14**3 - &
               78*s13**2*s23 + 12*s13*s14*s23 + 23*s14**2*s23 - &
               78*s13*s23**2 - 30*s23**3 + 57*s13*s14*s24 + &
               99*s14**2*s24 + 12*s13*s23*s24 + 57*s14*s23*s24 + &
               12*s23**2*s24 + 23*s13*s24**2 + 99*s14*s24**2 + &
               34*s23*s24**2 + 33*s24**3 + &
               s12**2*(83*s13 + 79*s14 + 83*s23 + 79*s24) + &
               m**2*(-228*s12**2 + 97*s13**2 + 47*s13*s14 - &
                  116*s14**2 + 106*s13*s23 + 61*s14*s23 + 97*s23**2 + &
                  7*s12*(5*s13 - 47*s14 + 5*s23 - 47*s24) + &
                  61*s13*s24 - 248*s14*s24 + 47*s23*s24 - 116*s24**2) + &
               s12*(30*s13**2 + 117*s13*s14 + 89*s14**2 + 72*s13*s23 + &
                  106*s14*s23 + 30*s23**2 + 106*s13*s24 + &
                  178*s14*s24 + 117*s23*s24 + 89*s24**2) - &
               2*m**4*(173*s12 + 3*(89*s13 + 94*s14 + 89*s23 + 94*s24))) &
- 4*(-2*m**2 + s12 + s14 + s24)**2*&
             (288*m**6 - 8*s12**3 - 5*s13**3 - 7*s13**2*s14 - &
               7*s13*s14**2 - 5*s14**3 - 13*s13**2*s23 - &
               7*s13*s14*s23 - 4*s14**2*s23 - 13*s13*s23**2 - &
               4*s14*s23**2 - 5*s23**3 - 4*s13**2*s24 - 7*s13*s14*s24 - &
               13*s14**2*s24 - 7*s13*s23*s24 - 7*s14*s23*s24 - &
               7*s23**2*s24 - 4*s13*s24**2 - 13*s14*s24**2 - &
               7*s23*s24**2 - 5*s24**3 - &
               17*s12**2*(s13 + s14 + s23 + s24) - &
               2*s12*(7*s13**2 + 9*s13*s14 + 7*s14**2 + 13*s13*s23 + &
                  8*s14*s23 + 7*s23**2 + 8*s13*s24 + 13*s14*s24 + &
                  9*s23*s24 + 7*s24**2) - &
               20*m**4*(16*s12 + 9*(s13 + s14 + s23 + s24)) + &
               m**2*(104*s12**2 + 124*s12*(s13 + s14 + s23 + s24) + &
                  9*(5*s13**2 + 6*s13*s14 + 5*s14**2 + 10*s13*s23 + &
                     6*s14*s23 + 5*s23**2 + 6*s13*s24 + 10*s14*s24 + &
                     6*s23*s24 + 5*s24**2))) + &
            gm**2*(4320*m**8 - &
               16*m**6*(374*s12 + &
                  9*(16*s13 + 45*s14 + 16*s23 + 45*s24)) + &
               2*m**4*(1368*s12**2 + 417*s13**2 + 1527*s14**2 + &
                  1252*s14*s23 + 417*s23**2 + 3078*s14*s24 + &
                  1328*s23*s24 + 1527*s24**2 + &
                  2*s13*(664*s14 + 345*s23 + 626*s24) + &
                  2*s12*(689*s13 + 1473*s14 + 689*s23 + 1473*s24)) - &
               (s12 + s14 + s24)*&
                (2*s12**3 - 80*s13**3 - 26*s14**3 - 51*s14**2*s23 - &
                  55*s14*s23**2 - 80*s23**3 - 106*s14**2*s24 - &
                  139*s14*s23*s24 - 64*s23**2*s24 - 106*s14*s24**2 - &
                  50*s23*s24**2 - 26*s24**3 - &
                  s13**2*(64*s14 + 208*s23 + 55*s24) - &
                  s12**2*(13*s13 + 75*s14 + 13*s23 + 75*s24) - &
                  s13*(50*s14**2 + 85*s14*s23 + 208*s23**2 + &
                     139*s14*s24 + 85*s23*s24 + 51*s24**2) - &
                  s12*(95*s13**2 + 103*s14**2 + 95*s23**2 + &
                     114*s23*s24 + 103*s24**2 + &
                     26*s14*(4*s23 + 9*s24) + &
                     2*s13*(57*s14 + 79*s23 + 52*s24))) - &
               m**2*(408*s12**3 + 140*s13**3 + 547*s14**3 + &
                  662*s14**2*s23 + 615*s14*s23**2 + 140*s23**3 + &
                  1745*s14**2*s24 + 1466*s14*s23*s24 + 617*s23**2*s24 + &
                  1745*s14*s24**2 + 704*s23*s24**2 + 547*s24**3 + &
                  92*s12**2*(9*s13 + 16*s14 + 9*s23 + 16*s24) + &
                  s13**2*(617*s14 + 364*s23 + 615*s24) + &
                  2*s13*(352*s14**2 + 530*s14*s23 + 182*s23**2 + &
                     733*s14*s24 + 530*s23*s24 + 331*s24**2) + &
                  s12*(675*s13**2 + 1631*s14**2 + 1550*s14*s23 + &
                     675*s23**2 + 3358*s14*s24 + 1630*s23*s24 + &
                     1631*s24**2 + 2*s13*(815*s14 + 579*s23 + 775*s24))))&
))/(s12*(gm**2 - 2*m**2 + s12 + s14 + s24)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
       (-8*gm**6*(-4*s12**2 - s14*s23 + &
             m**2*(12*s12 + s13 + s14 - s23 - s24) - s13*s24 + &
             2*s23*s24 - 4*s12*(s13 + s14 + s23 + s24)) + &
          2*gm**4*(1560*m**6 - 46*s12**3 - 34*s13**2*s23 - &
             95*s13*s14*s23 - 19*s14**2*s23 - 90*s13*s23**2 - &
             93*s14*s23**2 - 56*s23**3 - 19*s13**2*s24 - &
             95*s13*s14*s24 - 34*s14**2*s24 - 197*s13*s23*s24 - &
             197*s14*s23*s24 - 196*s23**2*s24 - 93*s13*s24**2 - &
             90*s14*s24**2 - 196*s23*s24**2 - 56*s24**3 - &
             12*m**4*(106*s12 + 55*s13 + 55*s14 + 140*s23 + 140*s24) - &
             s12**2*(56*s13 + 56*s14 + 163*(s23 + s24)) - &
             s12*(10*s13**2 + 10*s14**2 + 173*s23**2 + 392*s23*s24 + &
                173*s24**2 + 7*s13*(10*s14 + 23*s23 + 19*s24) + &
                7*s14*(19*s23 + 23*s24)) + &
             m**2*(498*s12**2 + 53*s13**2 + 190*s13*s14 + 53*s14**2 + &
                532*s13*s23 + 508*s14*s23 + 555*s23**2 + 508*s13*s24 + &
                532*s14*s24 + 1194*s23*s24 + 555*s24**2 + &
                28*s12*(13*s13 + 13*s14 + 35*(s23 + s24)))) + &
          2*(2*m**2 - s12 - s23 - s24)*&
           (-4*s12**4 + 5*s13**2*s14*s23 + 8*s13*s14**2*s23 + &
             3*s14**3*s23 - 10*s13*s14*s23**2 + 4*s14**2*s23**2 - &
             7*s14*s23**3 + 3*s13**3*s24 + 8*s13**2*s14*s24 + &
             5*s13*s14**2*s24 + 10*s13**2*s23*s24 - 8*s13*s14*s23*s24 + &
             10*s14**2*s23*s24 - s13*s23**2*s24 - 8*s14*s23**2*s24 + &
             4*s13**2*s24**2 - 10*s13*s14*s24**2 - 8*s13*s23*s24**2 - &
             s14*s23*s24**2 - 7*s13*s24**3 + &
             32*m**6*(s12 - s13 - s14 + s23 + s24) - &
             4*s12**3*(s13 + s14 + 2*(s23 + s24)) + &
             s12**2*(3*s13**2 + 3*s14**2 - 4*s14*s23 - 11*s23**2 - &
                14*s23*s24 - 11*s24**2 - 2*s13*(5*s14 + 2*s24)) - &
             4*m**4*(12*s12**2 - 5*s13**2 - 5*s14**2 - 8*s14*s23 + &
                13*s23**2 - 8*s14*s24 + 14*s23*s24 + 13*s24**2 + &
                2*s13*(s14 - 4*(s23 + s24)) - &
                4*s12*(s13 + s14 - 4*(s23 + s24))) + &
             s12*(3*s13**3 + 3*s14**3 - 7*s23**3 - 9*s23**2*s24 - &
                9*s23*s24**2 - 7*s24**3 + 7*s14**2*(s23 + s24) - &
                s14*(7*s23**2 + 2*s23*s24 + 3*s24**2) + &
                s13**2*(s14 + 7*(s23 + s24)) + &
                s13*(s14**2 - 3*s23**2 - 2*s23*s24 - 7*s24**2 - &
                   6*s14*(s23 + s24))) + &
             m**2*(24*s12**3 - 3*s13**3 - 3*s14**3 - 27*s14**2*s23 + &
                15*s14*s23**2 + 15*s23**3 - 7*s14**2*s24 - &
                26*s14*s23*s24 + 33*s23**2*s24 - 5*s14*s24**2 + &
                33*s23*s24**2 + 15*s24**3 - &
                s13**2*(13*s14 + 7*s23 + 27*s24) + &
                8*s12**2*(s13 + s14 + 5*(s23 + s24)) + &
                s13*(-13*s14**2 - 5*s23**2 - 26*s23*s24 + 15*s24**2 + &
                   18*s14*(s23 + s24)) - &
                8*s12*(2*s13**2 + 2*s14**2 - 6*s23**2 - 7*s23*s24 - &
                   6*s24**2 + s13*(-3*s14 + 2*s23 + s24) + &
                   s14*(s23 + 2*s24)))) + &
          gm**2*(960*m**8 + 128*s12**4 + 12*s13**3*s23 + &
             67*s13**2*s14*s23 + 84*s13*s14**2*s23 + 29*s14**3*s23 + &
             24*s13**2*s23**2 + 147*s13*s14*s23**2 + 73*s14**2*s23**2 + &
             48*s13*s23**3 + 92*s14*s23**3 + 36*s23**4 + 29*s13**3*s24 + &
             84*s13**2*s14*s24 + 67*s13*s14**2*s24 + 12*s14**3*s24 + &
             149*s13**2*s23*s24 + 398*s13*s14*s23*s24 + &
             149*s14**2*s23*s24 + 260*s13*s23**2*s24 + &
             304*s14*s23**2*s24 + 216*s23**3*s24 + 73*s13**2*s24**2 + &
             147*s13*s14*s24**2 + 24*s14**2*s24**2 + &
             304*s13*s23*s24**2 + 260*s14*s23*s24**2 + &
             360*s23**2*s24**2 + 92*s13*s24**3 + 48*s14*s24**3 + &
             216*s23*s24**3 + 36*s24**4 + &
             3*s12**3*(83*s13 + 83*s14 + 117*(s23 + s24)) - &
             32*m**6*(98*s12 + 15*(3*s13 + 3*s14 + 4*s23 + 4*s24)) + &
             s12**2*(150*s13**2 + 150*s14**2 + 543*s14*s23 + &
                353*s23**2 + 511*s14*s24 + 830*s23*s24 + 353*s24**2 + &
                s13*(280*s14 + 511*s23 + 543*s24)) + &
             4*m**4*(732*s12**2 + 106*s13**2 + 276*s13*s14 + &
                106*s14**2 + 369*s13*s23 + 479*s14*s23 + 305*s23**2 + &
                479*s13*s24 + 369*s14*s24 + 806*s23*s24 + 305*s24**2 + &
                s12*(722*s13 + 722*s14 + 886*(s23 + s24))) + &
             s12*(29*s13**3 + 29*s14**3 + s14**2*(223*s23 + 208*s24) + &
                s13**2*(75*s14 + 208*s23 + 223*s24) + &
                s14*(386*s23**2 + 761*s23*s24 + 309*s24**2) + &
                2*(83*s23**3 + 351*s23**2*s24 + 351*s23*s24**2 + &
                   83*s24**3) + &
                s13*(75*s14**2 + 309*s23**2 + 761*s23*s24 + &
                   386*s24**2 + 437*s14*(s23 + s24))) - &
             m**2*(1056*s12**3 + 41*s13**3 + 41*s14**3 + &
                418*s14**2*s23 + 713*s14*s23**2 + 348*s23**3 + &
                252*s14**2*s24 + 1504*s14*s23*s24 + 1476*s23**2*s24 + &
                439*s14*s24**2 + 1476*s23*s24**2 + 348*s24**3 + &
                s13**2*(151*s14 + 252*s23 + 418*s24) + &
                2*s12**2*(791*s13 + 791*s14 + 997*(s23 + s24)) + &
                s13*(151*s14**2 + 439*s23**2 + 1504*s23*s24 + &
                   713*s24**2 + 898*s14*(s23 + s24)) + &
                s12*(545*s13**2 + 545*s14**2 + 1291*s23**2 + &
                   3122*s23*s24 + 1291*s24**2 + &
                   4*s14*(551*s23 + 505*s24) + &
                   2*s13*(539*s14 + 1010*s23 + 1102*s24)))))/&
        (s12*(-gm**2 - 2*m**2 + s12 + s23 + s24)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) - &
       (2*(8*gm**6*(103*m**4 + 15*s13**2 + 33*s13*s14 + 15*s14**2 + &
               15*s12*(s13 + s14) + 15*s13*s23 + 5*s14*s23 + &
               5*s13*s24 + 15*s14*s24 - &
               m**2*(70*s12 + 83*s13 + 83*s14 + 20*s23 + 20*s24)) + &
            2*gm**4*(1132*m**6 - 90*s12**3 - 66*s13**3 - &
               232*s13**2*s14 - 232*s13*s14**2 - 66*s14**3 - &
               66*s13**2*s23 - 85*s13*s14*s23 - 17*s14**2*s23 + &
               53*s14*s23**2 - 17*s13**2*s24 - 85*s13*s14*s24 - &
               66*s14**2*s24 + 143*s13*s23*s24 + 143*s14*s23*s24 + &
               53*s13*s24**2 - &
               2*m**4*(782*s12 + 493*s13 + 493*s14 + 208*s23 + &
                  208*s24) - &
               5*s12**2*(39*s13 + 39*s14 + 10*(s23 + s24)) - &
               s12*(171*s13**2 + 171*s14**2 + 57*s14*s23 - 40*s23**2 + &
                  65*s14*s24 - 134*s23*s24 - 40*s24**2 + &
                  s13*(376*s14 + 65*s23 + 57*s24)) + &
               m**2*(562*s12**2 + 341*s13**2 + 754*s13*s14 + &
                  341*s14**2 + 394*s13*s23 + 190*s14*s23 - 53*s23**2 + &
                  190*s13*s24 + 394*s14*s24 - 286*s23*s24 - 53*s24**2 + &
                  4*s12*(219*s13 + 219*s14 + 70*(s23 + s24)))) - &
            2*(2*m**2 - s12 - s13 - s14)*&
             (-4*s12**4 - 4*s13**4 - 8*s13**3*s14 - 8*s13**2*s14**2 - &
               8*s13*s14**3 - 4*s14**4 - 2*s13**3*s23 - &
               3*s13**2*s14*s23 + 2*s13*s14**2*s23 + 3*s14**3*s23 + &
               4*s13**2*s23**2 + 6*s13*s14*s23**2 - 4*s14**2*s23**2 + &
               2*s13*s23**3 + 5*s14*s23**3 + 3*s13**3*s24 + &
               2*s13**2*s14*s24 - 3*s13*s14**2*s24 - 2*s14**3*s24 + &
               2*s13**2*s23*s24 + 16*s13*s14*s23*s24 + &
               2*s14**2*s23*s24 - 5*s13*s23**2*s24 - 2*s14*s23**2*s24 - &
               4*s13**2*s24**2 + 6*s13*s14*s24**2 + 4*s14**2*s24**2 - &
               2*s13*s23*s24**2 - 5*s14*s23*s24**2 + 5*s13*s24**3 + &
               2*s14*s24**3 + 16*m**6*(2*s12 - s13 - s14 + s23 + s24) - &
               6*s12**3*(s13 + s14 + s23 + s24) - &
               s12**2*(7*s13**2 + 7*s14**2 - 3*s23**2 + 10*s23*s24 - &
                  3*s24**2 + 4*s14*(2*s23 + s24) + &
                  s13*(6*s14 + 4*s23 + 8*s24)) - &
               4*m**4*(12*s12**2 + &
                  3*(s13**2 - 2*s13*s14 + s14**2 - (s23 - s24)**2) + &
                  2*s12*(s13 + s14 + 5*(s23 + s24))) - &
               s12*(9*s13**3 + 9*s14**3 - s14**2*(s23 - 3*s24) + &
                  s13**2*(11*s14 + 3*s23 - s24) - &
                  5*(s23 - s24)**2*(s23 + s24) + &
                  s14*(s23**2 + 2*s23*s24 - 7*s24**2) + &
                  s13*(11*s14**2 - 7*s23**2 + 2*s23*s24 + s24**2 - &
                     2*s14*(s23 + s24))) + &
               m**2*(24*s12**3 + 15*s13**3 + 15*s14**3 - s14**2*s23 - &
                  7*s14*s23**2 - 7*s23**3 + &
                  s13**2*(17*s14 + 3*s23 - s24) + 3*s14**2*s24 + &
                  2*s14*s23*s24 + 7*s23**2*s24 - 11*s14*s24**2 + &
                  7*s23*s24**2 - 7*s24**3 + &
                  4*s12**2*(5*s13 + 5*s14 + 7*(s23 + s24)) + &
                  s13*(17*s14**2 - 11*s23**2 + 2*s23*s24 - 7*s24**2 - &
                     18*s14*(s23 + s24)) + &
                  4*s12*(5*s13**2 + 5*s14**2 - 3*s23**2 + 8*s23*s24 - &
                     3*s24**2 + 2*s14*(2*s23 + s24) + &
                     2*s13*(s23 + 2*s24)))) + &
            gm**2*(3456*m**8 + 158*s12**4 + 42*s13**4 + 196*s13**3*s14 + &
               308*s13**2*s14**2 + 196*s13*s14**3 + 42*s14**4 + &
               62*s13**3*s23 + 148*s13**2*s14*s23 + 126*s13*s14**2*s23 + &
               40*s14**3*s23 + 72*s13**2*s23**2 + 113*s13*s14*s23**2 + &
               97*s14**2*s23**2 + 52*s13*s23**3 + 43*s14*s23**3 + &
               40*s13**3*s24 + 126*s13**2*s14*s24 + 148*s13*s14**2*s24 + &
               62*s14**3*s24 + 39*s13**2*s23*s24 - 34*s13*s14*s23*s24 + &
               39*s14**2*s23*s24 + 117*s13*s23**2*s24 + &
               108*s14*s23**2*s24 + 97*s13**2*s24**2 + &
               113*s13*s14*s24**2 + 72*s14**2*s24**2 + &
               108*s13*s23*s24**2 + 117*s14*s23*s24**2 + 43*s13*s24**3 + &
               52*s14*s24**3 - &
               8*m**6*(716*s12 + 399*s13 + 399*s14 + 423*s23 + &
                  423*s24) + 7*s12**3*&
                (63*s13 + 63*s14 + 37*(s23 + s24)) + &
               s12**2*(447*s13**2 + 447*s14**2 + &
                  s14*(557*s23 + 455*s24) + &
                  s13*(922*s14 + 455*s23 + 557*s24) + &
                  16*(9*s23**2 + 17*s23*s24 + 9*s24**2)) + &
               8*m**4*(471*s12**2 + 143*s13**2 + 264*s13*s14 + &
                  143*s14**2 + 352*s13*s23 + 349*s14*s23 + 117*s23**2 + &
                  349*s13*s24 + 352*s14*s24 + 154*s23*s24 + &
                  117*s24**2 + s12*(598*s13 + 598*s14 + 484*(s23 + s24))&
) + s12*(206*s13**3 + 206*s14**3 + 43*s23**3 + 117*s23**2*s24 + &
                  117*s23*s24**2 + 43*s24**3 + &
                  s14**2*(338*s23 + 255*s24) + &
                  s13**2*(674*s14 + 255*s23 + 338*s24) + &
                  s14*(241*s23**2 + 305*s23*s24 + 166*s24**2) + &
                  s13*(674*s14**2 + 166*s23**2 + 305*s23*s24 + &
                     241*s24**2 + 583*s14*(s23 + s24))) - &
               m**2*(1200*s12**3 + 262*s13**3 + 262*s14**3 + &
                  695*s14**2*s23 + 616*s14*s23**2 + 95*s23**3 + &
                  733*s14**2*s24 + 638*s14*s23*s24 + 225*s23**2*s24 + &
                  602*s14*s24**2 + 225*s23*s24**2 + 95*s24**3 + &
                  s13**2*(866*s14 + 733*s23 + 695*s24) + &
                  4*s12**2*(619*s13 + 619*s14 + 402*(s23 + s24)) + &
                  2*s13*(433*s14**2 + 301*s23**2 + 319*s23*s24 + &
                     308*s24**2 + 586*s14*(s23 + s24)) + &
                  s12*(1529*s13**2 + 1529*s14**2 + 2298*s14*s23 + &
                     725*s23**2 + 1982*s14*s24 + 1222*s23*s24 + &
                     725*s24**2 + 2*s13*(1575*s14 + 991*s23 + 1149*s24)))&
)))/((-gm**2 - 2*m**2 + s12 + s13 + s14)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) + &
       (4*gm**6*(-4*s12**2 + 2*s13*s14 - s14*s23 - s13*s24 + &
             m**2*(12*s12 - s13 - s14 + s23 + s24) - &
             4*s12*(s13 + s14 + s23 + s24)) + &
          2*gm**4*(-1140*m**6 + 38*s12**3 + 58*s13**3 + &
             188*s13**2*s14 + 188*s13*s14**2 + 58*s14**3 + &
             90*s13**2*s23 + 133*s13*s14*s23 + 33*s14**2*s23 + &
             32*s13*s23**2 - 10*s14*s23**2 + 33*s13**2*s24 + &
             133*s13*s14*s24 + 90*s14**2*s24 + 46*s13*s23*s24 + &
             46*s14*s23*s24 - 10*s13*s24**2 + 32*s14*s24**2 + &
             6*m**4*(221*s12 + 221*s13 + 221*s14 + 64*s23 + 64*s24) + &
             s12**2*(125*s13 + 125*s14 + 37*(s23 + s24)) + &
             s12*(145*s13**2 + 145*s14**2 + 86*s14*s23 - s23**2 + &
                118*s14*s24 + 32*s23*s24 - s24**2 + &
                2*s13*(143*s14 + 59*s23 + 43*s24)) - &
             m**2*(348*s12**2 + 489*s13**2 + 1026*s13*s14 + &
                489*s14**2 + 419*s13*s23 + 221*s14*s23 + 22*s23**2 + &
                221*s13*s24 + 419*s14*s24 + 92*s23*s24 + 22*s24**2 + &
                s12*(928*s13 + 928*s14 + 242*(s23 + s24)))) + &
          2*(2*m**2 - s12 - s13 - s14)*&
           (-16*s12**4 - s13**2*s14*s23 + 4*s13*s14**2*s23 + &
             5*s14**3*s23 - 2*s13*s14*s23**2 - 8*s14**2*s23**2 + &
             3*s14*s23**3 + 16*m**6*&
              (8*s12 - 7*(s13 + s14 - s23 - s24)) + 5*s13**3*s24 + &
             4*s13**2*s14*s24 - s13*s14**2*s24 + 2*s13**2*s23*s24 + &
             16*s13*s14*s23*s24 + 2*s14**2*s23*s24 - 7*s13*s23**2*s24 - &
             4*s14*s23**2*s24 - 8*s13**2*s24**2 - 2*s13*s14*s24**2 - &
             4*s13*s23*s24**2 - 7*s14*s23*s24**2 + 3*s13*s24**3 - &
             4*s12**3*(5*s13 + 5*s14 + 7*(s23 + s24)) + &
             s12**2*(s13**2 + s14**2 - 9*s23**2 - 34*s23*s24 - &
                9*s24**2 - 8*s14*(5*s23 + 3*s24) - &
                2*s13*(7*s14 + 12*s23 + 20*s24)) - &
             4*m**4*(48*s12**2 - 23*s13**2 - 46*s13*s14 - 23*s14**2 + &
                16*s13*s23 + 16*s14*s23 + 7*s23**2 + 16*s13*s24 + &
                16*s14*s24 + 14*s23*s24 + 7*s24**2 - &
                8*s12*(s13 + s14 - 7*(s23 + s24))) + &
             s12*(5*s13**3 + 5*s14**3 + 3*s23**3 + &
                s13**2*(3*s14 - 3*s23 - 7*s24) - 11*s23**2*s24 - &
                11*s23*s24**2 + 3*s24**3 - s14**2*(7*s23 + 3*s24) - &
                s14*(17*s23**2 + 18*s23*s24 + 5*s24**2) + &
                s13*(3*s14**2 - 5*s23**2 - 18*s23*s24 - 17*s24**2 - &
                   14*s14*(s23 + s24))) + &
             m**2*(96*s12**3 - 21*s13**3 - 21*s14**3 + 3*s14**2*s23 + &
                21*s14*s23**2 - 3*s23**3 + 7*s14**2*s24 + &
                18*s14*s23*s24 + 11*s23**2*s24 + 17*s14*s24**2 + &
                11*s23*s24**2 - 3*s24**3 + &
                s13**2*(-51*s14 + 7*s23 + 3*s24) + &
                4*s12**2*(13*s13 + 13*s14 + 35*(s23 + s24)) + &
                s13*(-51*s14**2 + 17*s23**2 + 18*s23*s24 + 21*s24**2 - &
                   2*s14*(s23 + s24)) - &
                16*s12*(3*s13**2 + 3*s14**2 + &
                   s13*(4*s14 - 5*s23 - 7*s24) - s14*(7*s23 + 5*s24) - &
                   2*(s23**2 + 3*s23*s24 + s24**2)))) + &
          gm**2*(960*m**8 - 52*s12**4 - 30*s13**4 - 156*s13**3*s14 - &
             252*s13**2*s14**2 - 156*s13*s14**3 - 30*s14**4 - &
             42*s13**3*s23 - 91*s13**2*s14*s23 - 74*s13*s14**2*s23 - &
             25*s14**3*s23 + 47*s13*s14*s23**2 - 5*s14**2*s23**2 + &
             12*s13*s23**3 + 29*s14*s23**3 - 25*s13**3*s24 - &
             74*s13**2*s14*s24 - 91*s13*s14**2*s24 - 42*s14**3*s24 + &
             33*s13**2*s23*s24 + 170*s13*s14*s23*s24 + &
             33*s14**2*s23*s24 + 43*s13*s23**2*s24 + 60*s14*s23**2*s24 - &
             5*s13**2*s24**2 + 47*s13*s14*s24**2 + 60*s13*s23*s24**2 + &
             43*s14*s23*s24**2 + 29*s13*s24**3 + 12*s14*s24**3 - &
             8*m**6*(113*s12 + 117*s13 + 117*s14 + 33*s23 + 33*s24) - &
             3*s12**3*(58*s13 + 58*s14 + 3*(s23 + s24)) - &
             s12**2*(223*s13**2 + 223*s14**2 + 90*s14*s23 - 72*s23**2 + &
                14*s14*s24 - 28*s23*s24 - 72*s24**2 + &
                2*s13*(239*s14 + 7*s23 + 45*s24)) + &
             2*m**4*(-12*s12**2 + s13**2 + 70*s13*s14 + s14**2 + &
                33*s13*s23 + 91*s14*s23 + 86*s23**2 + 91*s13*s24 + &
                33*s14*s24 + 228*s23*s24 + 86*s24**2 - &
                2*s12*(59*s13 + 59*s14 - 146*(s23 + s24))) + &
             s12*(-131*s13**3 - 131*s14**3 + 29*s23**3 + &
                51*s23**2*s24 + 51*s23*s24**2 + 29*s24**3 - &
                2*s14**2*(53*s23 + 24*s24) - &
                s13**2*(453*s14 + 48*s23 + 106*s24) + &
                s14*(67*s23**2 + 71*s23*s24 + 106*s24**2) + &
                s13*(-453*s14**2 + 106*s23**2 + 71*s23*s24 + &
                   67*s24**2 - 142*s14*(s23 + s24))) + &
             m**2*(222*s12**3 + 147*s13**3 + 147*s14**3 + &
                94*s14**2*s23 - 136*s14*s23**2 - 41*s23**3 + &
                152*s14**2*s24 - 346*s14*s23*s24 - 103*s23**2*s24 - &
                78*s14*s24**2 - 103*s23*s24**2 - 41*s24**3 + &
                s13**2*(549*s14 + 152*s23 + 94*s24) + &
                s12*(620*s13**2 + 620*s14**2 - 23*s14*s23 - &
                   263*s23**2 + s13*(1336*s14 - 217*s23 - 23*s24) - &
                   217*s14*s24 - 250*s23*s24 - 263*s24**2) + &
                4*s12**2*(175*s13 + 175*s14 - 52*(s23 + s24)) + &
                s13*(549*s14**2 + 2*s14*(s23 + s24) - &
                   2*(39*s23**2 + 173*s23*s24 + 68*s24**2)))))/&
        (s12*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) - &
       (4*(2*m**2 - s12 - s13 - s23)*(-2*m**2 + s12 + s14 + s24)**2*&
           (36*m**6 - 2*m**4*(5*s12 + 9*(s13 + s23)) - &
             (s12 + s13 + s23)*&
              (s12**2 - 2*s13*s14 - 7*s14*s23 - 7*s13*s24 - &
                2*s23*s24 + s12*(s13 + s14 + s23 + s24)) - &
             m**2*(2*s12**2 + 5*s13**2 - &
                9*s12*(s13 - s14 + s23 - s24) + &
                s13*(9*s14 - 10*s23 + 9*s24) + &
                s23*(9*s14 + 5*s23 + 9*s24))) - &
          2*gm**6*(504*m**6 + &
             6*m**4*(43*s12 - 15*(s13 + s14 + s23 + s24)) + &
             m**2*(340*s12**2 - 69*s13**2 - 69*s14**2 - 50*s14*s23 - &
                69*s23**2 - 78*s14*s24 - 130*s23*s24 - 69*s24**2 + &
                259*s12*(s13 + s14 + s23 + s24) - &
                2*s13*(65*s14 + 39*s23 + 25*s24)) + &
             9*(11*s12**3 + 22*s12**2*(s13 + s14 + s23 + s24) + &
                s23*(s14 + s23 + s24)*(7*s14 + 2*s24) + &
                s13**2*(2*s14 + 7*s24) + &
                s13*(s14 + s24)*(2*s14 + 9*s23 + 7*s24) + &
                s12*(11*s13**2 + 11*s14**2 + 29*s14*s23 + 11*s23**2 + &
                   22*s14*s24 + 24*s23*s24 + 11*s24**2 + &
                   s13*(24*s14 + 22*s23 + 29*s24)))) + &
          gm**4*(6048*m**8 - 146*s12**4 + 12*s13**3*s14 + &
             16*s13**2*s14**2 + 12*s13*s14**3 + 111*s13**2*s14*s23 + &
             72*s13*s14**2*s23 - 3*s14**3*s23 + 96*s13*s14*s23**2 - &
             64*s14**2*s23**2 - 3*s14*s23**3 - &
             8*m**6*(466*s12 - 9*(7*s13 - 23*s14 + 7*s23 - 23*s24)) - &
             3*s13**3*s24 + 72*s13**2*s14*s24 + 111*s13*s14**2*s24 + &
             96*s13**2*s23*s24 + 384*s13*s14*s23*s24 + &
             96*s14**2*s23*s24 + 111*s13*s23**2*s24 + &
             72*s14*s23**2*s24 + 12*s23**3*s24 - 64*s13**2*s24**2 + &
             96*s13*s14*s24**2 + 72*s13*s23*s24**2 + &
             111*s14*s23*s24**2 + 16*s23**2*s24**2 - 3*s13*s24**3 + &
             12*s23*s24**3 - 199*s12**3*(s13 + s14 + s23 + s24) + &
             4*s12**2*(10*s13**2 + 10*s14**2 - 31*s14*s23 + &
                10*s23**2 + s13*(-11*s14 + 20*s23 - 31*s24) + &
                20*s14*s24 - 11*s23*s24 + 10*s24**2) - &
             2*m**4*(508*s12**2 + 75*s13**2 + 467*s14**2 + &
                1130*s14*s23 + 75*s23**2 + 74*s14*s24 + 1390*s23*s24 + &
                467*s24**2 + 10*s13*(139*s14 - 15*s23 + 113*s24) + &
                4*s12*(178*s13 + 271*s14 + 178*s23 + 271*s24)) + &
             s12*(93*s13**3 + 93*s14**3 + 93*s23**3 + 167*s23**2*s24 + &
                167*s23*s24**2 + 93*s24**3 + &
                9*s14**2*(8*s23 + 31*s24) + &
                s13**2*(167*s14 + 279*s23 + 72*s24) + &
                s14*(72*s23**2 + 329*s23*s24 + 279*s24**2) + &
                s13*(167*s14**2 + 279*s23**2 + 329*s23*s24 + &
                   72*s24**2 + 329*s14*(s23 + s24))) + &
             m**2*(-32*s12**3 + 27*s13**3 + 147*s14**3 + &
                257*s14**2*s23 + 193*s14*s23**2 + 27*s23**3 + &
                1041*s14**2*s24 + 1234*s14*s23*s24 - 47*s23**2*s24 + &
                1041*s14*s24**2 + 57*s23*s24**2 + 147*s24**3 + &
                s13**2*(-47*s14 + 81*s23 + 193*s24) + &
                s12**2*(608*s13 + 812*s14 + 608*s23 + 812*s24) + &
                s13*(57*s14**2 + 466*s14*s23 + 81*s23**2 + &
                   1234*s14*s24 + 466*s23*s24 + 257*s24**2) + &
                s12*(629*s13**2 + 953*s14**2 + 1358*s14*s23 + &
                   629*s23**2 + 2426*s14*s24 + 1138*s23*s24 + &
                   953*s24**2 + 2*s13*(569*s14 + 589*s23 + 679*s24)))) + &
          2*gm**2*(8*m**8*(20*s12 + 9*(s13 - 5*s14 + s23 - 5*s24)) + &
             m**6*(64*s12**2 - 314*s13**2 + 298*s14**2 + 272*s14*s23 - &
                314*s23**2 + 916*s14*s24 + 592*s23*s24 + 298*s24**2 + &
                4*s13*(148*s14 - 77*s23 + 68*s24) + &
                s12*(644*s13 + 892*s14 + 644*s23 + 892*s24)) + &
             (s12 + s13 + s23)*(s12 + s14 + s24)*&
              (4*s12**3 + 39*s12**2*(s13 + s14 + s23 + s24) - &
                s13**2*(4*s14 + 29*s24) - &
                s23*(29*s14**2 + 4*s24*(s23 + s24) + &
                   s14*(29*s23 + 3*s24)) - &
                s13*(4*s14**2 + 3*s14*(s23 + s24) + &
                   s24*(3*s23 + 29*s24)) + &
                s12*(35*s13**2 + 35*s14**2 + 42*s14*s23 + 35*s23**2 + &
                   70*s14*s24 + 62*s23*s24 + 35*s24**2 + &
                   s13*(62*s14 + 70*s23 + 42*s24))) - &
             m**4*(168*s12**3 + 54*s13**3 + 75*s14**3 + &
                310*s14**2*s23 - 167*s14*s23**2 + 54*s23**3 + &
                465*s14**2*s24 + 990*s14*s23*s24 - 57*s23**2*s24 + &
                465*s14*s24**2 + 320*s23*s24**2 + 75*s24**3 - &
                s13**2*(57*s14 + 18*s23 + 167*s24) + &
                s12**2*(446*s13 + 866*s14 + 446*s23 + 866*s24) + &
                2*s13*(160*s14**2 - 122*s14*s23 - 9*s23**2 + &
                   495*s14*s24 - 122*s23*s24 + 155*s24**2) + &
                s12*(-93*s13**2 + 515*s14**2 + 610*s14*s23 - &
                   93*s23**2 + 1650*s14*s24 + 830*s23*s24 + &
                   515*s24**2 + 2*s13*(415*s14 - 63*s23 + 305*s24))) + &
             m**2*(40*s12**4 + s13**3*(43*s14 + 93*s24) + &
                s12**3*(-33*s13 + 169*s14 - 33*s23 + 169*s24) + &
                s13**2*(-26*s14**2 + 69*s14*s23 - 17*s14*s24 + &
                   119*s23*s24 + 29*s24**2) - &
                s12**2*(108*s13**2 - 167*s14**2 + 67*s14*s23 + &
                   108*s23**2 - 564*s14*s24 + 77*s23*s24 - 167*s24**2 + &
                   s13*(77*s14 + 266*s23 + 67*s24)) + &
                s12*(-19*s13**3 + 54*s14**3 - 19*s23**3 - &
                   106*s23**2*s24 + 61*s23*s24**2 + 54*s24**3 - &
                   s13**2*(106*s14 + 127*s23 + 31*s24) + &
                   4*s14**2*(29*s23 + 93*s24) + &
                   s13*(61*s14**2 - 127*s23**2 - 357*s14*(s23 - s24) - &
                      357*s23*s24 + 116*s24**2) + &
                   s14*(-31*s23**2 + 357*s23*s24 + 372*s24**2)) + &
                s23*(102*s14**3 + s14**2*(29*s23 + 471*s24) + &
                   s24*(43*s23**2 - 26*s23*s24 + 87*s24**2) + &
                   s14*(93*s23**2 - 17*s23*s24 + 456*s24**2)) + &
                s13*(87*s14**3 + s14**2*(-127*s23 + 456*s24) + &
                   s24*(69*s23**2 - 127*s23*s24 + 102*s24**2) + &
                   s14*(119*s23**2 - 294*s23*s24 + 471*s24**2)))))/&
        (s12**2*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
          (gm**2 - 2*m**2 + s12 + s14 + s24)) + &
       (2*gm**6*(408*m**6 + 8*s12**3 - 9*s13**2*s23 + 6*s13*s14*s23 + &
             7*s14**2*s23 - 27*s13*s23**2 + 24*s14*s23**2 - 18*s23**3 - &
             24*s13**2*s24 - 20*s13*s14*s24 - 42*s13*s23*s24 + &
             29*s14*s23*s24 - 20*s13*s24**2 + 22*s23*s24**2 + &
             s12**2*(-16*s13 + 16*s14 + 53*s23 + 16*s24) - &
             m**4*(154*s12 + 93*s13 + 103*s14 + 519*s23 + 173*s24) + &
             s12*(-24*s13**2 + 8*s14**2 + 60*s14*s23 + 27*s23**2 + &
                16*s14*s24 + 75*s23*s24 + 8*s24**2 - &
                4*s13*(4*s14 - 3*s23 + 9*s24)) + &
             m**2*(-29*s12**2 + 33*s13**2 + 14*s13*s14 - 7*s14**2 + &
                90*s13*s23 + 57*s14*s23 + 153*s23**2 + 92*s13*s24 - &
                7*s14*s24 + 113*s23*s24 + 14*s24**2 + &
                s12*(34*s13 - 42*s14 - 19*s23 + 19*s24))) + &
          gm**4*(3216*m**8 - 24*s12**4 - 26*s13**2*s14*s23 - &
             75*s13*s14**2*s23 - 99*s14**3*s23 + 24*s13**2*s23**2 - &
             96*s13*s14*s23**2 - 87*s14**2*s23**2 + 72*s13*s23**3 + &
             26*s14*s23**3 + 48*s23**4 + 48*s13**3*s24 + &
             13*s13**2*s14*s24 - 31*s13*s14**2*s24 - 62*s14**3*s24 + &
             52*s13**2*s23*s24 - 205*s13*s14*s23*s24 - &
             387*s14**2*s23*s24 - 12*s13*s23**2*s24 - &
             318*s14*s23**2*s24 - 16*s23**3*s24 + 52*s13**2*s24**2 - &
             41*s13*s14*s24**2 - 176*s14**2*s24**2 - &
             100*s13*s23*s24**2 - 436*s14*s23*s24**2 - &
             144*s23**2*s24**2 - 10*s13*s24**3 - 166*s14*s24**3 - &
             148*s23*s24**3 - 52*s24**4 - &
             s12**3*(60*s13 + 101*s14 + 201*s23 + 140*s24) - &
             4*m**6*(342*s12 + 105*s13 - 403*s14 + 381*s23 + 685*s24) + &
             s12**2*(12*s13**2 - 130*s14**2 - 401*s14*s23 - &
                247*s23**2 - 400*s14*s24 - 597*s23*s24 - 260*s24**2 - &
                s13*(74*s14 + 161*s23 + 122*s24)) - &
             m**4*(372*s12**2 - 27*s13**2 + 1247*s14**2 + &
                2410*s14*s23 - 325*s23**2 + &
                s13*(308*s14 + 424*s23 - 562*s24) + 2088*s14*s24 + &
                412*s23*s24 - 119*s24**2 + &
                s12*(-468*s13 + 2180*s14 + 1312*s23 + 632*s24)) + &
             m**2*(358*s12**3 - 48*s13**3 + 161*s14**3 + &
                1041*s14**2*s23 + 430*s14*s23**2 - 142*s23**3 + &
                s13**2*(13*s14 + 50*s23 - 205*s24) + 856*s14**2*s24 + &
                2295*s14*s23*s24 + 438*s23**2*s24 + 1055*s14*s24**2 + &
                704*s23*s24**2 + 328*s24**3 + &
                s12**2*(31*s13 + 937*s14 + 1047*s23 + 1089*s24) + &
                s13*(106*s14**2 + 575*s14*s23 - 28*s23**2 + &
                   75*s14*s24 + 453*s23*s24 - 93*s24**2) + &
                s12*(-189*s13**2 + 778*s14**2 + 2110*s14*s23 + &
                   720*s23**2 + s13*(35*s14 + 297*s23 - 62*s24) + &
                   2151*s14*s24 + 1925*s23*s24 + 1091*s24**2)) + &
             s12*(48*s13**3 - 53*s14**3 - 23*s14**2*(13*s23 + 14*s24) + &
                s13**2*(21*s14 + 100*s23 + 64*s24) - &
                s13*(14*s14**2 + 122*s14*s23 - 6*s23**2 + &
                   107*s14*s24 + 213*s23*s24 + 72*s24**2) - &
                s14*(334*s23**2 + 884*s23*s24 + 465*s24**2) - &
                2*(11*s23**3 + 212*s23**2*s24 + 272*s23*s24**2 + &
                   98*s24**3))) + &
          2*(2*m**2 - s12 - s23 - s24)*(-2*m**2 + s12 + s14 + s24)**2*&
           (192*m**6 - 14*s12**3 - 4*s13**2*s23 + s13*s14*s23 + &
             3*s14**2*s23 - 12*s13*s23**2 - 11*s14*s23**2 - 8*s23**3 + &
             3*s13**2*s24 + s13*s14*s24 - 4*s14**2*s24 - &
             9*s13*s23*s24 - 9*s14*s23*s24 - 8*s23**2*s24 - &
             11*s13*s24**2 - 12*s14*s24**2 - 8*s23*s24**2 - 8*s24**3 - &
             8*m**4*(33*s12 + 8*s13 + 8*s14 + 22*s23 + 22*s24) - &
             s12**2*(27*s13 + 27*s14 + 25*(s23 + s24)) - &
             s12*(13*s13**2 + 13*s14**2 + 22*s14*s23 + 19*s23**2 + &
                28*s14*s24 + 18*s23*s24 + 19*s24**2 + &
                2*s13*(9*s14 + 14*s23 + 11*s24)) + &
             m**2*(112*s12**2 + s13**2 - 2*s13*s14 + s14**2 + &
                56*s13*s23 + 40*s14*s23 + 63*s23**2 + 40*s13*s24 + &
                56*s14*s24 + 66*s23*s24 + 63*s24**2 + &
                2*s12*(63*s13 + 63*s14 + 53*(s23 + s24)))) + &
          gm**2*(-1728*m**10 + &
             8*m**8*(428*s12 + 19*s13 + 193*s14 + 233*s23 + 707*s24) - &
             2*m**6*(1320*s12**2 + 107*s13**2 - 17*s14**2 + &
                720*s14*s23 + 845*s23**2 + 2044*s14*s24 + &
                2294*s23*s24 + 2605*s24**2 + &
                2*s13*(83*s14 + 40*s23 + 282*s24) + &
                2*s12*(437*s13 + 631*s14 + 651*s23 + 1889*s24)) + &
             m**4*(792*s12**3 + 72*s13**3 - 185*s14**3 - &
                392*s14**2*s23 + 1669*s14*s23**2 + 728*s23**3 + &
                613*s14**2*s24 + 2340*s14*s23*s24 + 2117*s23**2*s24 + &
                2509*s14*s24**2 + 2932*s23*s24**2 + 1983*s24**3 + &
                3*s13**2*(67*s14 + 4*s23 + 167*s24) + &
                2*s12**2*(805*s13 + 697*s14 + 565*s23 + 1693*s24) + &
                2*s13*(28*s14**2 - 55*s14*s23 + 302*s23**2 + &
                   624*s14*s24 + 439*s23*s24 + 328*s24**2) + &
                s12*(765*s13**2 + 481*s14**2 + 1178*s14*s23 + &
                   1765*s23**2 + 3518*s14*s24 + 3922*s23*s24 + &
                   4569*s24**2 + 2*s13*(889*s14 + 771*s23 + 1169*s24))) &
+ m**2*(16*s12**4 + 31*s14**4 + 297*s14**3*s23 - 258*s14**2*s23**2 - &
                620*s14*s23**3 - 112*s23**4 - 23*s14**3*s24 + &
                116*s14**2*s23*s24 - 1016*s14*s23**2*s24 - &
                596*s23**3*s24 - 219*s14**2*s24**2 - &
                793*s14*s23*s24**2 - 660*s23**2*s24**2 - &
                509*s14*s24**3 - 624*s23*s24**3 - 312*s24**4 - &
                36*s13**3*(s14 + 3*s24) - &
                s12**3*(415*s13 + 153*s14 + 37*s23 + 315*s24) - &
                s13**2*(47*s14**2 - 2*s14*s23 + 56*s23**2 + &
                   346*s14*s24 + 122*s23*s24 + 217*s24**2) - &
                s12**2*(501*s13**2 + 207*s14**2 + 269*s14*s23 + &
                   486*s23**2 + 815*s14*s24 + 606*s23*s24 + &
                   962*s24**2 + s13*(898*s14 + 1093*s23 + 963*s24)) - &
                s13*(12*s14**3 + 168*s23**3 + 598*s23**2*s24 + &
                   431*s23*s24**2 + 25*s24**3 + &
                   s14**2*(-269*s23 + 379*s24) + &
                   s14*(346*s23**2 + 246*s23*s24 + 476*s24**2)) - &
                s12*(108*s13**3 + 7*s14**3 + 668*s23**3 + &
                   1152*s23**2*s24 + 1201*s23*s24**2 + 943*s24**3 + &
                   s14**2*(-49*s23 + 351*s24) + &
                   s13**2*(502*s14 + 274*s23 + 718*s24) + &
                   s13*(419*s14**2 + 772*s14*s23 + 738*s23**2 + &
                      1378*s14*s24 + 1556*s23*s24 + 573*s24**2) + &
                   s14*(792*s23**2 + 898*s23*s24 + 1111*s24**2))) - &
             (s12 + s14 + s24)*&
              (36*s12**4 + 35*s14**3*s23 + 21*s14**2*s23**2 - &
                96*s14*s23**3 - 64*s23**4 - 36*s13**3*s24 - &
                4*s14**3*s24 + 37*s14**2*s23*s24 - 64*s14*s23**2*s24 - &
                88*s23**3*s24 + 4*s14*s23*s24**2 - 44*s23**2*s24**2 - &
                8*s14*s24**3 - 32*s23*s24**3 - 12*s24**4 + &
                s12**3*(-14*s13 + 17*s14 + 55*s23 + 62*s24) + &
                s13**2*(8*s14*s23 - 32*s23**2 - 55*s14*s24 - &
                   54*s23*s24 - 10*s24**2) - &
                s12**2*(86*s13**2 + 16*s14**2 - 25*s14*s23 + &
                   45*s23**2 - 2*s14*s24 - 45*s23*s24 - 16*s24**2 + &
                   s13*(92*s14 + 141*s23 + 44*s24)) - &
                s12*(36*s13**3 - 3*s14**3 + 128*s23**3 + &
                   80*s23**2*s24 + 30*s23*s24**2 + 22*s24**3 + &
                   s14**2*(-5*s23 + 6*s24) + &
                   s13**2*(51*s14 + 146*s23 + 96*s24) + &
                   s13*(36*s14**2 + 68*s14*s23 + 206*s23**2 + &
                      125*s14*s24 + 181*s23*s24 + 10*s24**2) + &
                   s14*(56*s23**2 - 32*s23*s24 + 11*s24**2)) + &
                s13*(3*s14**2*(9*s23 - 13*s24) + &
                   s14*(26*s23**2 - 19*s23*s24 - 49*s24**2) - &
                   4*(24*s23**3 + 30*s23**2*s24 + 6*s23*s24**2 - &
                      5*s24**3)))))/&
        (s12*(gm**2 - 2*m**2 + s12 + s14 + s24)*&
          (-gm**2 - 2*m**2 + s12 + s23 + s24)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
       (2*gm**6*(204*m**6 + s12**3 + 38*s13**2*s14 + 18*s13*s14**2 - &
             18*s14**3 + 82*s13*s14*s23 + 75*s14**2*s23 + &
             44*s14*s23**2 + s12**2*(2*s13 + 73*s14 + 2*s23 - 38*s24) - &
             37*s13**2*s24 + 15*s13*s14*s24 - 27*s14**2*s24 - &
             37*s13*s23*s24 + 75*s14*s23*s24 - 39*s13*s24**2 - &
             9*s14*s24**2 + m**4*&
              (-86*s12 - 179*s13 - 145*s14 + 59*s23 + 37*s24) + &
             s12*(s13**2 + 111*s13*s14 + 54*s14**2 + 2*s13*s23 + &
                117*s14*s23 + s23**2 - 75*s13*s24 + 24*s14*s24 - &
                38*s23*s24 - 39*s24**2) + &
             m**2*(-15*s12**2 + 37*s13**2 + 27*s13*s14 + 18*s14**2 - &
                29*s13*s23 - 187*s14*s23 - 44*s23**2 + 66*s13*s24 - &
                54*s14*s24 - 38*s23*s24 + 48*s24**2 + &
                s12*(30*s13 + 62*s14 - 101*s23 + 33*s24))) - &
          gm**4*(1416*m**8 + 36*s12**4 + 8*s13**4 + 56*s13**3*s14 + &
             90*s13**2*s14**2 + 26*s13*s14**3 - 24*s14**4 + &
             38*s13**3*s23 + 62*s13**2*s14*s23 + 42*s13*s14**2*s23 + &
             32*s14**3*s23 + 52*s13**2*s23**2 - 45*s13*s14*s23**2 - &
             105*s14**2*s23**2 + 22*s13*s23**3 - 51*s14*s23**3 + &
             s12**3*(124*s13 + 66*s14 + 79*s23 - 21*s24) - &
             40*s13**3*s24 - 34*s13**2*s14*s24 - 12*s13*s14**2*s24 - &
             36*s14**3*s24 + 25*s13**2*s23*s24 - 130*s13*s14*s23*s24 + &
             75*s14**2*s23*s24 + 65*s13*s23**2*s24 - &
             165*s14*s23**2*s24 + 31*s13**2*s24**2 + &
             37*s13*s14*s24**2 - 12*s14**2*s24**2 + 91*s13*s23*s24**2 + &
             22*s14*s23*s24**2 + 48*s13*s24**3 - &
             2*m**6*(1030*s12 + 579*s13 + 275*s14 - 561*s23 + &
                187*s24) + s12**2*&
              (148*s13**2 + 74*s14**2 + 28*s14*s23 + 50*s23**2 + &
                s13*(210*s14 + 212*s23 - 74*s24) + 10*s14*s24 + &
                43*s23*s24 - 9*s24**2) + &
             m**4*(516*s12**2 + 176*s13**2 + 276*s14**2 - &
                2337*s14*s23 - 441*s23**2 + 371*s14*s24 - 20*s23*s24 - &
                251*s24**2 + s13*(-296*s14 + s23 + 361*s24) + &
                s12*(648*s13 - 390*s14 - 640*s23 + 682*s24)) + &
             m**2*(-16*s12**3 + 8*s13**3 - 116*s14**3 + &
                625*s14**2*s23 + 677*s14*s23**2 + 29*s23**3 + &
                s13**2*(142*s14 - 229*s23 - 69*s24) - 19*s14**2*s24 + &
                182*s14*s23*s24 + 100*s23**2*s24 + 129*s14*s24**2 - &
                113*s23*s24**2 - 48*s24**3 - &
                s12**2*(44*s13 - 340*s14 + 23*s23 + 377*s24) - &
                2*s13*(27*s14**2 - 322*s14*s23 + 69*s23**2 + &
                   74*s14*s24 + 66*s23*s24 - 33*s24**2) + &
                2*s12*(6*s13**2 + 124*s14**2 + 469*s14*s23 + &
                   45*s23**2 + s13*(288*s14 - 127*s23 - 207*s24) - &
                   193*s14*s24 - 72*s23*s24 + 57*s24**2)) + &
             s12*(68*s13**3 + 20*s14**3 + 7*s23**3 + &
                s13**2*(200*s14 + 171*s23 - 93*s24) + 64*s23**2*s24 + &
                99*s23*s24**2 + 48*s24**3 + s14**2*(-67*s23 + 69*s24) + &
                2*s13*(70*s14**2 + 56*s14*s23 + 55*s23**2 + &
                   12*s14*s24 + 38*s23*s24 + 11*s24**2) + &
                s14*(-89*s23**2 - 86*s23*s24 + 85*s24**2))) - &
          2*(2*m**2 - s12 - s13 - s14)*(2*m**2 - s12 - s13 - s23)*&
           (8*m**6*(13*s12 + 6*(-2*s14 + 3*s23 + s24)) - &
             2*m**4*(48*s12**2 + 13*s13**2 - 31*s14**2 + 31*s14*s23 + &
                46*s23**2 + 21*s14*s24 + 12*s23*s24 - 2*s24**2 + &
                2*s12*(5*s13 - 14*s14 + 47*s23 + 28*s24) + &
                s13*(-30*s14 + 49*s23 + 35*s24)) + &
             m**2*(18*s12**3 + 15*s13**3 + &
                2*s12**2*(8*s13 + 3*s14 + 15*s23 + 10*s24) + &
                s13**2*(2*s14 + 44*s23 + 37*s24) + &
                s13*(-s14**2 + 19*s14*s23 + 53*s23**2 + 43*s14*s24 - &
                   9*s23*s24 + 4*s24**2) + &
                s12*(45*s13**2 - 23*s14**2 + 89*s14*s23 + 8*s23**2 + &
                   43*s14*s24 - 28*s23*s24 + 4*s24**2 + &
                   s13*(2*s14 + 51*s23 + 25*s24)) + &
                s23*(-15*s14**2 + 8*(s23 - s24)**2 + &
                   s14*(63*s23 + 33*s24))) + &
             (s12 + s13 + s23)*&
              (2*s12**3 - 4*s13**3 - s13**2*(4*s14 + 6*s23 + s24) - &
                s14*(4*s14**2 + s14*s23 + 6*s23**2 + 6*s14*s24 - &
                   8*s23*s24 + 2*s24**2) + &
                s12*(-11*s13**2 - 11*s14**2 - 5*s14*s23 + 10*s23**2 + &
                   s13*(-18*s14 + s23 - 5*s24) + s14*s24 + &
                   24*s23*s24 + 10*s24**2) + &
                s12**2*(-5*s13 - 5*s14 + 12*(s23 + s24)) - &
                s13*(4*s14**2 + 9*s14*(s23 + s24) + &
                   2*(s23**2 - 4*s23*s24 + 3*s24**2)))) + &
          gm**2*(-960*m**10 + &
             4*m**8*(110*s12 + 349*s13 + 15*s14 + 143*s23 + 141*s24) + &
             2*m**6*(558*s12**2 - 287*s13**2 + 412*s14**2 - &
                296*s14*s23 - 366*s23**2 + &
                s12*(-78*s13 + 472*s14 + 484*s23 - 518*s24) + &
                s13*(215*s14 - 523*s23 - 230*s24) - 247*s14*s24 - &
                97*s23*s24 - 117*s24**2) + &
             m**4*(-966*s12**3 + 234*s13**3 - 296*s14**3 - &
                198*s14**2*s23 + 1423*s14*s23**2 + 193*s23**3 - &
                s12**2*(1143*s13 + 1153*s14 + 1569*s23 - 397*s24) + &
                s13**2*(-370*s14 + 651*s23 - 385*s24) + &
                274*s14**2*s24 + 71*s14*s23*s24 + 132*s23**2*s24 + &
                106*s14*s24**2 + 99*s23*s24**2 - 24*s24**3 + &
                s13*(-920*s14**2 + 1107*s14*s23 + 518*s23**2 + &
                   455*s14*s24 - 95*s23*s24 + 289*s24**2) + &
                s12*(81*s13**2 - 1068*s14**2 + 326*s14*s23 - &
                   52*s23**2 + 435*s14*s24 + 107*s23*s24 + 265*s24**2 - &
                   s13*(1041*s14 + 705*s23 + 268*s24))) + &
             m**2*(209*s12**4 - 85*s13**4 - 24*s14**4 + &
                122*s14**3*s23 - 473*s14**2*s23**2 - 375*s14*s23**3 - &
                13*s23**4 - 36*s14**3*s24 - 104*s14**2*s23*s24 - &
                67*s14*s23**2*s24 - 24*s23**3*s24 - 12*s14**2*s24**2 - &
                130*s14*s23*s24**2 + 65*s23**2*s24**2 + 36*s23*s24**3 + &
                s12**3*(438*s13 + 319*s14 + 485*s23 + 54*s24) + &
                s13**3*(-34*s14 - 227*s23 + 221*s24) + &
                s13**2*(165*s14**2 - 601*s14*s23 - 116*s23**2 - &
                   23*s14*s24 + 186*s23*s24 - 39*s24**2) + &
                s12**2*(152*s13**2 + 253*s14**2 - 133*s14*s23 + &
                   258*s23**2 + 26*s14*s24 + 269*s23*s24 + &
                   101*s24**2 + s13*(375*s14 + 618*s23 + 517*s24)) + &
                s12*(-162*s13**3 + 126*s14**3 - 19*s23**3 - &
                   6*s13**2*(3*s14 + 23*s23 - 114*s24) + &
                   133*s23**2*s24 + 206*s23*s24**2 + 60*s24**3 - &
                   8*s14**2*(42*s23 + 23*s24) + &
                   s14*(-751*s23**2 + 193*s23*s24 - 68*s24**2) + &
                   s13*(334*s14**2 - 933*s14*s23 + 109*s23**2 + &
                      163*s14*s24 + 459*s23*s24 + 62*s24**2)) + &
                s13*(34*s14**3 - 3*s23**3 + s23**2*s24 + &
                   66*s23*s24**2 + 60*s24**3 - &
                   2*s14**2*(55*s23 + 137*s24) - &
                   2*s14*(497*s23**2 - 34*s23*s24 + 70*s24**2))) - &
             (s12 + s13 + s23)*&
              (-6*s13**4 + s13**3*(-16*s14 - 22*s23 + 19*s24) + &
                s12**3*(s13 - 7*s14 + 7*s23 + 32*s24) - &
                s13**2*(22*s14**2 + 91*s14*s23 + 33*s14*s24 + &
                   5*s23*s24 + 8*s24**2) + &
                s12**2*(-16*s13**2 - 51*s14**2 - 73*s14*s23 + &
                   10*s23**2 + 75*s14*s24 + 68*s23*s24 + 68*s24**2 + &
                   s13*(-75*s14 - 5*s23 + 119*s24)) + &
                s13*(-44*s14**3 + 16*s23**3 + 21*s23**2*s24 + &
                   61*s23*s24**2 + 36*s24**3 - &
                   s14**2*(77*s23 + 96*s24) + &
                   s14*(-91*s23**2 + 49*s23*s24 - 6*s24**2)) - &
                s14*(32*s14**3 + 12*s14**2*(s23 + 4*s24) + &
                   s23*(29*s23**2 + 45*s23*s24 - 4*s24**2) + &
                   s14*(81*s23**2 - 46*s23*s24 + 16*s24**2)) + &
                s12*(-23*s13**3 - 76*s14**3 - &
                   2*s13**2*(48*s14 + 23*s23 - 53*s24) - &
                   2*s14**2*(62*s23 + 5*s24) + &
                   s13*(-133*s14**2 - 176*s14*s23 + 6*s23**2 + &
                      58*s14*s24 + 47*s23*s24 + 60*s24**2) + &
                   s14*(-71*s23**2 + 116*s23*s24 + 86*s24**2) + &
                   3*(s23**3 + 8*s23**2*s24 + 19*s23*s24**2 + 12*s24**3))&
)))/(s12*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
          (gm**2 - 2*m**2 + s12 + s13 + s23)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
       (-2*gm**6*(264*m**6 + 8*s12**3 - 20*s13*s14*s23 - &
             24*s14**2*s23 - 20*s14*s23**2 + 7*s13**2*s24 + &
             6*s13*s14*s24 - 9*s14**2*s24 + 29*s13*s23*s24 - &
             42*s14*s23*s24 + 22*s23**2*s24 + 24*s13*s24**2 - &
             27*s14*s24**2 - 18*s24**3 + &
             s12**2*(16*s13 - 16*s14 + 16*s23 + 53*s24) - &
             m**4*(58*s12 + 11*s13 + 73*s14 + 193*s23 + 323*s24) + &
             m**2*(3*s12**2 - 7*s13**2 + 33*s14**2 + 120*s14*s23 + &
                14*s23**2 + 7*s13*(2*s14 - s23 - 5*s24) + 42*s14*s24 + &
                105*s23*s24 + 129*s24**2 + &
                s12*(-10*s13 + 66*s14 + 51*s23 + 13*s24)) + &
             s12*(8*s13**2 - 24*s14**2 + 8*s23**2 + 75*s23*s24 + &
                27*s24**2 + 12*s14*(-3*s23 + s24) + &
                s13*(-16*s14 + 16*s23 + 60*s24))) - &
          2*(2*m**2 - s12 - s13 - s23)*(2*m**2 - s12 - s23 - s24)*&
           (16*m**6*(5*s12 - 3*(3*s13 + s14 + 3*s23 - 3*s24)) - &
             2*m**4*(12*s12**2 - 35*s13**2 + s14**2 - 52*s14*s23 - &
                77*s23**2 - 2*s12*&
                 (49*s13 + 11*s14 + 55*s23 - 31*s24) + 6*s23*s24 + &
                23*s24**2 - 2*s13*(15*s14 + 52*s23 + 10*s24)) + &
             (s12 + s13 + s23)*&
              (14*s12**3 - 3*s14**2*s23 + 11*s14*s23**2 + 8*s23**3 + &
                s13**2*(4*s23 - 3*s24) + 4*s14**2*s24 + &
                9*s14*s23*s24 + 8*s23**2*s24 + 12*s14*s24**2 + &
                8*s23*s24**2 + 8*s24**3 + &
                s12**2*(27*s13 + 27*s14 + 25*(s23 + s24)) + &
                s13*(12*s23**2 + 9*s23*s24 + 11*s24**2 - &
                   s14*(s23 + s24)) + &
                s12*(13*s13**2 + 13*s14**2 + 22*s14*s23 + 19*s23**2 + &
                   28*s14*s24 + 18*s23*s24 + 19*s24**2 + &
                   2*s13*(9*s14 + 14*s23 + 11*s24))) - &
             m**2*(36*s12**3 + s13**3 + &
                8*s12**2*(18*s13 + 8*s14 + 19*s23 + 3*s24) + &
                s13**2*(-2*s14 + 73*s23 + 30*s24) + &
                s23*(-s14**2 + 50*s14*s23 + 63*s23**2 + 38*s14*s24 + &
                   34*s23*s24 + 31*s24**2) + &
                s13*(s14**2 + 48*s14*s23 + 103*s23**2 + 42*s14*s24 + &
                   32*s23*s24 + 33*s24**2) + &
                s12*(109*s13**2 - s14**2 + 146*s14*s23 + 147*s23**2 + &
                   32*s14*s24 + 64*s23*s24 + 17*s24**2 + &
                   s13*(88*s14 + 240*s23 + 70*s24)))) + &
          gm**4*(3120*m**8 + 24*s12**4 + 62*s13**3*s23 + &
             31*s13**2*s14*s23 - 13*s13*s14**2*s23 - 48*s14**3*s23 + &
             176*s13**2*s23**2 + 41*s13*s14*s23**2 - 52*s14**2*s23**2 + &
             166*s13*s23**3 + 10*s14*s23**3 + 52*s23**4 + &
             99*s13**3*s24 + 75*s13**2*s14*s24 + 26*s13*s14**2*s24 + &
             387*s13**2*s23*s24 + 205*s13*s14*s23*s24 - &
             52*s14**2*s23*s24 + 436*s13*s23**2*s24 + &
             100*s14*s23**2*s24 + 148*s23**3*s24 + 87*s13**2*s24**2 + &
             96*s13*s14*s24**2 - 24*s14**2*s24**2 + &
             318*s13*s23*s24**2 + 12*s14*s23*s24**2 + &
             144*s23**2*s24**2 - 26*s13*s24**3 - 72*s14*s24**3 + &
             16*s23*s24**3 - 48*s24**4 + &
             s12**3*(101*s13 + 60*s14 + 140*s23 + 201*s24) - &
             4*m**6*(298*s12 - 147*s13 + 409*s14 + 453*s23 + 485*s24) + &
             m**4*(-84*s12**2 + 399*s13**2 + 149*s14**2 + &
                1058*s14*s23 - 275*s23**2 + &
                s13*(-28*s14 + 572*s23 - 810*s24) + &
                4*s12*(91*s13 + 245*s14 - 60*s23 - 42*s24) + &
                532*s14*s24 + 956*s23*s24 + 39*s24**2) + &
             s12**2*(130*s13**2 - 12*s14**2 + 122*s14*s23 + &
                260*s23**2 + 161*s14*s24 + 597*s23*s24 + 247*s24**2 + &
                s13*(74*s14 + 400*s23 + 401*s24)) + &
             s12*(53*s13**3 - 48*s14**3 + 196*s23**3 + &
                544*s23**2*s24 + 424*s23*s24**2 + 22*s24**3 - &
                4*s14**2*(16*s23 + 25*s24) + &
                s13**2*(14*s14 + 322*s23 + 299*s24) + &
                3*s14*(24*s23**2 + 71*s23*s24 - 2*s24**2) + &
                s13*(-21*s14**2 + 107*s14*s23 + 465*s23**2 + &
                   122*s14*s24 + 884*s23*s24 + 334*s24**2)) - &
             m**2*(146*s12**3 + 161*s13**3 - 48*s14**3 - 9*s14**2*s23 - &
                57*s14*s23**2 + 56*s23**3 + 30*s14**2*s24 + &
                317*s14*s23*s24 + 256*s23**2*s24 - 256*s14*s24**2 + &
                246*s23*s24**2 - 158*s24**3 + &
                s12**2*(445*s13 - 29*s14 + 409*s23 + 127*s24) + &
                s13**2*(106*s14 + 600*s23 + 449*s24) + &
                s13*(13*s14**2 + 183*s14*s23 + 527*s23**2 + &
                   131*s14*s24 + 1055*s23*s24 - 338*s24**2) + &
                s12*(498*s13**2 + 39*s14**2 - 54*s14*s23 + 351*s23**2 + &
                   205*s14*s24 + 537*s23*s24 - 112*s24**2 + &
                   s13*(183*s14 + 1147*s23 + 782*s24)))) + &
          gm**2*(192*m**10 + 8*m**8*&
              (136*s12 + 241*s13 + 3*s14 + 59*s23 - 15*s24) - &
             2*m**6*(624*s12**2 + 567*s13**2 + 63*s14**2 + &
                224*s14*s23 + 53*s23**2 - 368*s14*s24 + 466*s23*s24 + &
                41*s24**2 + 2*s13*(149*s14 + 638*s23 + 322*s24) + &
                2*s12*(745*s13 + 223*s14 + 447*s23 + 457*s24)) + &
             m**4*(480*s12**3 + 325*s13**3 - 24*s14**3 + &
                91*s14**2*s23 + 164*s14*s23**2 - 171*s23**3 - &
                8*s14**2*s24 - 586*s14*s23*s24 + 464*s23**2*s24 - &
                428*s14*s24**2 + 103*s23*s24**2 - 92*s24**3 + &
                s13**2*(216*s14 + 887*s23 + 640*s24) + &
                2*s12**2*(681*s13 + 365*s14 + 477*s23 + 781*s24) + &
                s13*(-21*s14**2 + 388*s14*s23 + 663*s23**2 - &
                   94*s14*s24 + 1560*s23*s24 - 237*s24**2) + &
                s12*(971*s13**2 + 67*s14**2 + 614*s14*s23 + &
                   327*s23**2 - 546*s14*s24 + 2202*s23*s24 + &
                   543*s24**2 + 2*s13*(265*s14 + 1023*s23 + 847*s24))) + &
             m**2*(-148*s12**4 - 31*s13**4 + 60*s14**3*s23 + &
                69*s14**2*s23**2 - 67*s14*s23**3 + 80*s23**4 + &
                3*s13**3*(4*s14 - 35*s23 - 103*s24) + &
                46*s14**2*s23*s24 + 295*s14*s23**2*s24 + 8*s23**3*s24 + &
                24*s14**2*s24**2 + 458*s14*s23*s24**2 + &
                60*s23**2*s24**2 + 72*s14*s24**3 + 316*s23*s24**3 + &
                48*s24**4 - s12**3*&
                 (283*s13 + 117*s14 + 285*s23 + 419*s24) + &
                s13**2*(47*s14**2 + 103*s14*s23 - 125*s23**2 - &
                   265*s14*s24 - 388*s23*s24 + 226*s24**2) - &
                s12**2*(189*s13**2 - 209*s14**2 + 113*s14*s23 + &
                   58*s23**2 - 341*s14*s24 + 750*s23*s24 + 98*s24**2 + &
                   s13*(-170*s14 + 429*s23 + 523*s24)) + &
                s13*(36*s14**3 + 61*s23**3 - 235*s23**2*s24 + &
                   160*s23*s24**2 + 344*s24**3 + &
                   2*s14**2*(75*s23 + 7*s24) + &
                   s14*(84*s23**2 + 98*s23*s24 + 382*s24**2)) + &
                s12*(-85*s13**3 + 60*s14**3 + 159*s23**3 + &
                   s13**2*(163*s14 - 341*s23 - 397*s24) - &
                   363*s23**2*s24 - 32*s23*s24**2 + 264*s24**3 + &
                   2*s14**2*(139*s23 + 59*s24) + &
                   s13*(290*s14**2 + 258*s14*s23 - 129*s23**2 + &
                      280*s14*s24 - 762*s23*s24 + 240*s24**2) + &
                   s14*(-63*s23**2 + 796*s23*s24 + 482*s24**2))) + &
             (s12 + s13 + s23)*&
              (36*s12**4 + s13**3*(-4*s23 + 35*s24) + &
                s12**3*(17*s13 - 14*s14 + 62*s23 + 55*s24) + &
                s13**2*(-39*s14*s23 + 27*s14*s24 + 37*s23*s24 + &
                   21*s24**2) - &
                s12**2*(16*s13**2 + 86*s14**2 + 44*s14*s23 - &
                   16*s23**2 + s13*(92*s14 - 2*s23 - 25*s24) + &
                   141*s14*s24 - 45*s23*s24 + 45*s24**2) - &
                s13*(8*s23**3 + s14**2*(55*s23 - 8*s24) - &
                   4*s23**2*s24 + 64*s23*s24**2 + 96*s24**3 + &
                   s14*(49*s23**2 + 19*s23*s24 - 26*s24**2)) - &
                2*(18*s14**3*s23 + 6*s23**4 + 16*s23**3*s24 + &
                   22*s23**2*s24**2 + 44*s23*s24**3 + 32*s24**4 + &
                   s14**2*(5*s23**2 + 27*s23*s24 + 16*s24**2) + &
                   s14*(-10*s23**3 + 12*s23**2*s24 + 60*s23*s24**2 + &
                      48*s24**3)) + &
                s12*(3*s13**3 - 36*s14**3 + &
                   s13**2*(-36*s14 - 6*s23 + 5*s24) - &
                   2*s14**2*(48*s23 + 73*s24) - &
                   s13*(51*s14**2 + 125*s14*s23 + 11*s23**2 + &
                      68*s14*s24 - 32*s23*s24 + 56*s24**2) - &
                   s14*(10*s23**2 + 181*s23*s24 + 206*s24**2) - &
                   2*(11*s23**3 + 15*s23**2*s24 + 40*s23*s24**2 + &
                      64*s24**3)))))/&
        (s12*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
          (-gm**2 - 2*m**2 + s12 + s23 + s24)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
       (2*(8*gm**8*(2*m**4 + 4*s12**2 + s14*s23 + s13*s24 + &
               4*s12*(s13 + s14 + s23 + s24) - &
               m**2*(12*s12 + s13 + s14 + s23 + s24)) + &
            2*gm**6*(672*m**6 + 25*s12**3 - &
               4*m**4*(178*s12 + 77*s13 + 77*s14 + 59*s23 + 59*s24) + &
               s12**2*(20*s13 + 20*s14 + 47*(s23 + s24)) + &
               s12*(-5*s13**2 - 5*s14**2 + 33*s14*s23 + 22*s23**2 + &
                  23*s14*s24 + 84*s23*s24 + 22*s24**2 + &
                  s13*(18*s14 + 23*s23 + 33*s24)) + &
               2*(s13**2*(3*s23 + 4*s24) + &
                  s13*(s23 + s24)*(7*s14 + 3*s23 + 22*s24) + &
                  s14*(4*s14*s23 + 22*s23**2 + 3*s14*s24 + &
                     25*s23*s24 + 3*s24**2)) + &
               2*m**2*(51*s12**2 - 7*s13**2 - 14*s13*s14 - 7*s14**2 + &
                  72*s13*s23 + 32*s14*s23 - 25*s23**2 + 32*s13*s24 + &
                  72*s14*s24 - 50*s23*s24 - 25*s24**2 + &
                  s12*(52*s13 + 52*s14 + 64*(s23 + s24)))) + &
            2*(2*m**2 - s12 - s13 - s14)*(2*m**2 - s12 - s23 - s24)*&
             (112*m**8 + s13**2*s14*s23 - s14**3*s23 - s13*s14*s23**2 + &
               s14**2*s23**2 - s14*s23**3 - s13**3*s24 + &
               s13*s14**2*s24 + 5*s13**2*s23*s24 + 6*s13*s14*s23*s24 + &
               5*s14**2*s23*s24 + s13*s23**2*s24 + s13**2*s24**2 - &
               s13*s14*s24**2 + s14*s23*s24**2 - s13*s24**3 - &
               8*m**6*(17*s12 + 8*s13 + 8*s14 + 14*s23 + 14*s24) + &
               3*s12**3*(s13 + s14 - 2*(s23 + s24)) + &
               2*m**4*(26*s12**2 + 2*s13**2 + 2*s14**2 + &
                  66*s12*(s13 + s14) + 31*s14*s23 + 11*s23**2 + &
                  33*s14*s24 + 34*s23*s24 + 11*s24**2 + &
                  s13*(4*s14 + 33*s23 + 31*s24)) + &
               s12**2*(6*s13**2 + 6*s14**2 + 2*s14*(s23 - s24) + &
                  2*s13*(4*s14 - s23 + s24) - &
                  5*(3*s23**2 + 2*s23*s24 + 3*s24**2)) + &
               s12*(3*s13**3 + 3*s14**3 - 9*s23**3 - &
                  s14**2*(s23 - 4*s24) + &
                  s13**2*(5*s14 + 4*s23 - s24) - 7*s23**2*s24 - &
                  7*s23*s24**2 - 9*s24**3 + &
                  2*s14*(s23**2 + s23*s24 - 4*s24**2) + &
                  s13*(5*s14**2 + 5*s14*(s23 + s24) + &
                     2*(-4*s23**2 + s23*s24 + s24**2))) - &
               m**2*(6*s12**3 - s13**3 - s14**3 + 4*s14**2*s23 + &
                  10*s14*s23**2 - s23**3 + 6*s14**2*s24 + &
                  42*s14*s23*s24 + s23**2*s24 + 12*s14*s24**2 + &
                  s23*s24**2 - s24**3 + s13**2*(s14 + 6*s23 + 4*s24) + &
                  8*s12**2*(7*s13 + 7*s14 - 5*(s23 + s24)) + &
                  s12*(25*s13**2 + 25*s14**2 + 41*s14*s23 - &
                     44*s23**2 + 31*s14*s24 - 32*s23*s24 - 44*s24**2 + &
                     s13*(46*s14 + 31*s23 + 41*s24)) + &
                  s13*(s14**2 + 6*s14*(s23 + s24) + &
                     2*(6*s23**2 + 21*s23*s24 + 5*s24**2)))) + &
            gm**4*(4656*m**8 + 8*s12**4 - &
               32*m**6*(211*s12 + 95*s13 + 95*s14 + 122*s23 + &
                  122*s24) + 3*s12**3*(s13 + s14 - 17*(s23 + s24)) + &
               s12**2*(20*s13**2 + 20*s14**2 - 97*s23**2 + &
                  25*s14*(s23 - 3*s24) - 266*s23*s24 - 97*s24**2 + &
                  s13*(-32*s14 + 25*(-3*s23 + s24))) + &
               4*m**4*(724*s12**2 + 100*s13**2 + 180*s13*s14 + &
                  100*s14**2 + 629*s13*s23 + 575*s14*s23 + &
                  178*s23**2 + 575*s13*s24 + 629*s14*s24 + &
                  288*s23*s24 + 178*s24**2 + &
                  12*s12*(57*s13 + 57*s14 + 77*(s23 + s24))) + &
               s12*(25*s13**3 + 25*s14**3 + s14**2*(56*s23 + 22*s24) + &
                  s13**2*(23*s14 + 22*s23 + 56*s24) - &
                  s14*(55*s23**2 + 214*s23*s24 + 35*s24**2) - &
                  2*(19*s23**3 + 89*s23**2*s24 + 89*s23*s24**2 + &
                     19*s24**3) + &
                  s13*(23*s14**2 - 35*s23**2 - 214*s23*s24 - &
                     55*s24**2 + 74*s14*(s23 + s24))) - &
               2*m**2*(148*s12**3 + 13*s13**3 + 13*s14**3 + &
                  141*s14**2*s23 + 138*s14*s23**2 - 26*s23**3 + &
                  105*s14**2*s24 + 324*s14*s23*s24 - 118*s23**2*s24 + &
                  282*s14*s24**2 - 118*s23*s24**2 - 26*s24**3 + &
                  s13**2*(11*s14 + 105*s23 + 141*s24) + &
                  s12**2*(317*s13 + 317*s14 + 269*(s23 + s24)) + &
                  s12*(136*s13**2 + 136*s14**2 + 133*s23**2 + &
                     78*s23*s24 + 133*s24**2 + &
                     7*s14*(69*s23 + 67*s24) + &
                     s13*(216*s14 + 469*s23 + 483*s24)) + &
                  s13*(11*s14**2 + 234*s14*(s23 + s24) + &
                     6*(47*s23**2 + 54*s23*s24 + 23*s24**2))) + &
               2*(s13**3*(4*s23 + 9*s24) + &
                  s13**2*(3*s14*s23 + 11*s23**2 + 8*s14*s24 + &
                     16*s23*s24 + 19*s24**2) + &
                  s14*(-33*s23**3 - 79*s23**2*s24 - 39*s23*s24**2 + &
                     7*s24**3 + s14**2*(9*s23 + 4*s24) + &
                     s14*(19*s23**2 + 16*s23*s24 + 11*s24**2)) + &
                  s13*(7*s23**3 - 39*s23**2*s24 - 79*s23*s24**2 - &
                     33*s24**3 + s14**2*(8*s23 + 3*s24) + &
                     s14*(34*s23**2 + 40*s23*s24 + 34*s24**2)))) + &
            gm**2*(2080*m**10 - 30*s12**5 + 8*s13**4*s23 + &
               23*s13**3*s14*s23 + 23*s13**2*s14**2*s23 + &
               9*s13*s14**3*s23 + s14**4*s23 + 22*s13**3*s23**2 + &
               79*s13**2*s14*s23**2 + 74*s13*s14**2*s23**2 + &
               17*s14**3*s23**2 - 2*s13**2*s23**3 - 14*s13*s14*s23**3 - &
               40*s14**2*s23**3 - 16*s13*s23**4 + 4*s14*s23**4 + &
               s13**4*s24 + 9*s13**3*s14*s24 + 23*s13**2*s14**2*s24 + &
               23*s13*s14**3*s24 + 8*s14**4*s24 + 31*s13**3*s23*s24 + &
               129*s13**2*s14*s23*s24 + 129*s13*s14**2*s23*s24 + &
               31*s14**3*s23*s24 + 16*s13**2*s23**2*s24 + &
               78*s13*s14*s23**2*s24 - 22*s14**2*s23**2*s24 - &
               52*s13*s23**3*s24 - 12*s14*s23**3*s24 + &
               17*s13**3*s24**2 + 74*s13**2*s14*s24**2 + &
               79*s13*s14**2*s24**2 + 22*s14**3*s24**2 - &
               22*s13**2*s23*s24**2 + 78*s13*s14*s23*s24**2 + &
               16*s14**2*s23*s24**2 - 52*s13*s23**2*s24**2 - &
               52*s14*s23**2*s24**2 - 40*s13**2*s24**3 - &
               14*s13*s14*s24**3 - 2*s14**2*s24**3 - 12*s13*s23*s24**3 - &
               52*s14*s23*s24**3 + 4*s13*s24**4 - 16*s14*s24**4 - &
               48*s12**4*(s13 + s14 + s23 + s24) - &
               16*m**8*(250*s12 + 56*s13 + 56*s14 + 185*s23 + 185*s24) + &
               s12**3*(9*s13**2 + 9*s14**2 + &
                  s13*(42*s14 - 11*s23 - 123*s24) - &
                  s14*(123*s23 + 11*s24) - &
                  24*(s23**2 + 4*s23*s24 + s24**2)) + &
               8*m**6*(345*s12**2 - 40*s13**2 - 124*s13*s14 - &
                  40*s14**2 + 179*s13*s23 + 209*s14*s23 + 182*s23**2 + &
                  209*s13*s24 + 179*s14*s24 + 320*s23*s24 + &
                  182*s24**2 + 2*s12*(56*s13 + 56*s14 + 293*(s23 + s24))&
) + s12**2*(36*s13**3 + 36*s14**3 + &
                  s13**2*(128*s14 + 87*s23 - 15*s24) + &
                  s14**2*(-15*s23 + 87*s24) + &
                  s14*(-129*s23**2 - 70*s23*s24 + 39*s24**2) - &
                  2*(9*s23**3 + 59*s23**2*s24 + 59*s23*s24**2 + &
                     9*s24**3) + &
                  s13*(128*s14**2 + 39*s23**2 - 70*s23*s24 - &
                     129*s24**2 + 104*s14*(s23 + s24))) - &
               2*m**4*(460*s12**3 - 85*s13**3 - 85*s14**3 + &
                  18*s14**2*s23 + 441*s14*s23**2 + 140*s23**3 - &
                  120*s14**2*s24 + 664*s14*s23*s24 + 332*s23**2*s24 + &
                  399*s14*s24**2 + 332*s23*s24**2 + 140*s24**3 + &
                  s13**2*(-283*s14 - 120*s23 + 18*s24) + &
                  2*s12**2*(131*s13 + 131*s14 + 548*(s23 + s24)) + &
                  s13*(-283*s14**2 + 399*s23**2 + 664*s23*s24 + &
                     441*s24**2 - 338*s14*(s23 + s24)) + &
                  s12*(-315*s13**2 - 315*s14**2 + 866*s14*s23 + &
                     885*s23**2 + 502*s14*s24 + 1662*s23*s24 + &
                     885*s24**2 + s13*(-786*s14 + 502*s23 + 866*s24))) + &
               s12*(9*s13**4 + 9*s14**4 - &
                  2*s14*(s23 + s24)**2*(21*s23 + 4*s24) + &
                  s13**3*(32*s14 + 52*s23 + 45*s24) + &
                  s14**3*(45*s23 + 52*s24) + &
                  s13**2*(46*s14**2 + 191*s14*s23 + 69*s23**2 + &
                     184*s14*s24 + 67*s23*s24 - 72*s24**2) - &
                  4*(s23 + s24)**2*(3*s23**2 + 10*s23*s24 + 3*s24**2) + &
                  s14**2*(-72*s23**2 + 67*s23*s24 + 69*s24**2) + &
                  s13*(32*s14**3 - 2*(s23 + s24)**2*(4*s23 + 21*s24) + &
                     s14**2*(184*s23 + 191*s24) + &
                     s14*(37*s23**2 + 214*s23*s24 + 37*s24**2))) + &
               m**2*(200*s12**4 - 9*s13**4 - 9*s14**4 - 94*s14**3*s23 + &
                  145*s14**2*s23**2 + 146*s14*s23**3 + 12*s23**4 - &
                  146*s14**3*s24 + 46*s14**2*s23*s24 + &
                  274*s14*s23**2*s24 + 64*s23**3*s24 - &
                  27*s14**2*s24**2 + 318*s14*s23*s24**2 + &
                  104*s23**2*s24**2 + 190*s14*s24**3 + 64*s23*s24**3 + &
                  12*s24**4 - 2*s13**3*(16*s14 + 73*s23 + 47*s24) - &
                  s13**2*(46*s14**2 + 450*s14*s23 + 27*s23**2 + &
                     398*s14*s24 - 46*s23*s24 - 145*s24**2) + &
                  6*s12**3*(41*s13 + 41*s14 + 65*(s23 + s24)) + &
                  2*s12**2*(-104*s13**2 - 104*s14**2 + 329*s14*s23 + &
                     235*s23**2 + 59*s14*s24 + 514*s23*s24 + &
                     235*s24**2 + s13*(-260*s14 + 59*s23 + 329*s24)) - &
                  2*s13*(16*s14**3 - 95*s23**3 - 159*s23**2*s24 - &
                     137*s23*s24**2 - 73*s24**3 + &
                     s14**2*(199*s23 + 225*s24) + &
                     s14*(43*s23**2 + 158*s23*s24 + 43*s24**2)) + &
                  s12*(-197*s13**3 - 197*s14**3 + 250*s23**3 + &
                     2*s14**2*(s23 - 154*s24) + 814*s23**2*s24 + &
                     814*s23*s24**2 + 250*s24**3 + &
                     s13**2*(-659*s14 - 308*s23 + 2*s24) + &
                     s14*(629*s23**2 + 560*s23*s24 + 211*s24**2) + &
                     s13*(-659*s14**2 + 211*s23**2 + 560*s23*s24 + &
                        629*s24**2 - 550*s14*(s23 + s24)))))))/&
        ((-gm**2 - 2*m**2 + s12 + s13 + s14)*&
          (-gm**2 - 2*m**2 + s12 + s23 + s24)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) + &
       (10*((s13**2 - s14**2 + 2*s14*s23 - s23**2 - 2*s13*s24 + s24**2)*&
             (-(s13*s14*s23) - s14**2*s23 - s14*s23**2 + s13**2*s24 + &
               s13*s14*s24 + s13*s23*s24 - s14*s23*s24 + s13*s24**2 + &
               4*m**4*(s13 - s14 - s23 + s24) + &
               s12**2*(s13 - s14 - s23 + s24) + &
               s12*(s13**2 - s14**2 - 2*s14*s23 - s23**2 + 2*s13*s24 + &
                  s24**2) + m**2*&
                (-s13**2 + s14**2 + 6*s14*s23 + s23**2 - 6*s13*s24 - &
                  s24**2 - 4*s12*(s13 - s14 - s23 + s24))) + &
            gm**4*(248*m**4*s12 + 22*s12**3 + s13*s14*s23 - &
               s14**2*s23 - s14*s23**2 - s13**2*s24 + s13*s14*s24 + &
               s13*s23*s24 + s14*s23*s24 - s13*s24**2 + &
               34*s12**2*(s13 + s14 + s23 + s24) + &
               2*s12*(6*s13**2 + 19*s13*s14 + 6*s14**2 + 12*s13*s23 + &
                  15*s14*s23 + 6*s23**2 + 15*s13*s24 + 12*s14*s24 + &
                  19*s23*s24 + 6*s24**2) + &
               m**2*(-112*s12**2 + (s13 - s14 - s23 + s24)**2 - &
                  120*s12*(s13 + s14 + s23 + s24))) + &
            gm**2*(512*m**6*s12 - 38*s12**4 - &
               76*s12**3*(s13 + s14 + s23 + s24) + &
               4*(s14*s23 - s13*s24)**2 - &
               4*m**4*(166*s12**2 - (s13 - s14 - s23 + s24)**2 + &
                  102*s12*(s13 + s14 + s23 + s24)) - &
               s12**2*(45*s13**2 + 45*s14**2 + 96*s14*s23 + 45*s23**2 + &
                  90*s14*s24 + 104*s23*s24 + 45*s24**2 + &
                  2*s13*(52*s14 + 45*s23 + 48*s24)) - &
               s12*(7*s13**3 + 7*s14**3 + 7*s23**3 + 31*s23**2*s24 + &
                  31*s23*s24**2 + 7*s24**3 + 3*s14**2*(9*s23 + 7*s24) + &
                  s13**2*(31*s14 + 21*s23 + 27*s24) + &
                  3*s14*(9*s23**2 + 22*s23*s24 + 7*s24**2) + &
                  s13*(31*s14**2 + 66*s14*(s23 + s24) + &
                     3*(7*s23**2 + 22*s23*s24 + 9*s24**2))) + &
               m**2*(280*s12**3 + 356*s12**2*(s13 + s14 + s23 + s24) + &
                  s12*(86*s13**2 + 86*s14**2 + 244*s14*s23 + &
                     86*s23**2 + 220*s14*s24 + 228*s23*s24 + &
                     86*s24**2 + 4*s13*(57*s14 + 55*s23 + 61*s24)) - &
                  8*(s14*s23*(s14 + s23 - s24) + s13**2*s24 - &
                     s13*((s23 - s24)*s24 + s14*(s23 + s24)))))))/&
        (s12**2*(-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) - &
       (2*(24*gm**6*(4*m**4 + 4*s12**2 + (s13 + s23)*(s14 + s24) + &
               4*s12*(s13 + s14 + s23 + s24) - &
               2*m**2*(6*s12 + s13 + s14 + s23 + s24)) + &
            2*gm**4*(-2496*m**6 + 28*s12**3 + 24*s13**3 + &
               124*s13**2*s14 + 124*s13*s14**2 + 24*s14**3 + &
               72*s13**2*s23 + 237*s13*s14*s23 + 119*s14**2*s23 + &
               72*s13*s23**2 + 119*s14*s23**2 + 24*s23**3 + &
               119*s13**2*s24 + 237*s13*s14*s24 + 72*s14**2*s24 + &
               237*s13*s23*s24 + 237*s14*s23*s24 + 124*s23**2*s24 + &
               119*s13*s24**2 + 72*s14*s24**2 + 124*s23*s24**2 + &
               24*s24**3 + 6*s12**2*(s13 + s14 + s23 + s24) - &
               24*m**4*(17*s12 - 76*(s13 + s14 + s23 + s24)) + &
               2*s12*(s13**2 + s14**2 + s23**2 + 40*s23*s24 + s24**2 + &
                  2*s14*(21*s23 + s24) + 2*s13*(20*s14 + s23 + 21*s24)) &
+ m**2*(296*s12**2 - 399*s13**2 - 399*s14**2 - 974*s14*s23 - &
                  399*s23**2 - 786*s14*s24 - 994*s23*s24 - 399*s24**2 + &
                  16*s12*(s13 + s14 + s23 + s24) - &
                  2*s13*(497*s14 + 393*s23 + 487*s24))) - &
            gm**2*(5376*m**8 + 264*s12**4 + 32*s13**4 + &
               216*s13**3*s14 + 368*s13**2*s14**2 + 216*s13*s14**3 + &
               32*s14**4 + 120*s13**3*s23 + 615*s13**2*s14*s23 + &
               696*s13*s14**2*s23 + 201*s14**3*s23 + &
               176*s13**2*s23**2 + 600*s13*s14*s23**2 + &
               354*s14**2*s23**2 + 120*s13*s23**3 + 201*s14*s23**3 + &
               32*s23**4 + 201*s13**3*s24 + 696*s13**2*s14*s24 + &
               615*s13*s14**2*s24 + 120*s14**3*s24 + &
               600*s13**2*s23*s24 + 1340*s13*s14*s23*s24 + &
               600*s14**2*s23*s24 + 615*s13*s23**2*s24 + &
               696*s14*s23**2*s24 + 216*s23**3*s24 + &
               354*s13**2*s24**2 + 600*s13*s14*s24**2 + &
               176*s14**2*s24**2 + 696*s13*s23*s24**2 + &
               615*s14*s23*s24**2 + 368*s23**2*s24**2 + &
               201*s13*s24**3 + 120*s14*s24**3 + 216*s23*s24**3 + &
               32*s24**4 + 768*s12**3*(s13 + s14 + s23 + s24) - &
               128*m**6*(100*s12 + 57*(s13 + s14 + s23 + s24)) + &
               s12**2*(759*s13**2 + 759*s14**2 + 759*s23**2 + &
                  1550*s23*s24 + 759*s24**2 + &
                  2*s14*(791*s23 + 771*s24) + &
                  2*s13*(775*s14 + 771*s23 + 791*s24)) + &
               4*m**4*(2456*s12**2 + 785*s13**2 + 785*s14**2 + &
                  1890*s14*s23 + 785*s23**2 + 1550*s14*s24 + &
                  1902*s23*s24 + 785*s24**2 + &
                  2920*s12*(s13 + s14 + s23 + s24) + &
                  2*s13*(951*s14 + 775*s23 + 945*s24)) + &
               s12*(287*s13**3 + 287*s14**3 + 287*s23**3 + &
                  1045*s23**2*s24 + 1045*s23*s24**2 + 287*s24**3 + &
                  s14**2*(1037*s23 + 877*s24) + &
                  s13**2*(1045*s14 + 877*s23 + 1037*s24) + &
                  s14*(1037*s23**2 + 2034*s23*s24 + 877*s24**2) + &
                  s13*(1045*s14**2 + 877*s23**2 + 2034*s23*s24 + &
                     1037*s24**2 + 2034*s14*(s23 + s24))) - &
               m**2*(2912*s12**3 + 537*s13**3 + 537*s14**3 + &
                  2255*s14**2*s23 + 2255*s14*s23**2 + 537*s23**3 + &
                  1575*s14**2*s24 + 4458*s14*s23*s24 + &
                  2311*s23**2*s24 + 1575*s14*s24**2 + 2311*s23*s24**2 + &
                  537*s24**3 + 5552*s12**2*(s13 + s14 + s23 + s24) + &
                  s13**2*(2311*s14 + 1575*s23 + 2255*s24) + &
                  s13*(2311*s14**2 + 1575*s23**2 + 4458*s23*s24 + &
                     2255*s24**2 + 4458*s14*(s23 + s24)) + &
                  8*s12*(415*s13**2 + 415*s14**2 + 892*s14*s23 + &
                     415*s23**2 + 812*s14*s24 + 906*s23*s24 + &
                     415*s24**2 + s13*(906*s14 + 812*s23 + 892*s24)))) + &
            2*(-9216*m**10 + 72*s12**5 + 10*s13**5 + 30*s13**4*s14 + &
               40*s13**3*s14**2 + 40*s13**2*s14**3 + 30*s13*s14**4 + &
               10*s14**5 + 46*s13**4*s23 + 115*s13**3*s14*s23 + &
               115*s13**2*s14**2*s23 + 69*s13*s14**3*s23 + &
               23*s14**4*s23 + 88*s13**3*s23**2 + &
               163*s13**2*s14*s23**2 + 114*s13*s14**2*s23**2 + &
               39*s14**3*s23**2 + 88*s13**2*s23**3 + &
               101*s13*s14*s23**3 + 39*s14**2*s23**3 + 46*s13*s23**4 + &
               23*s14*s23**4 + 10*s23**5 + 23*s13**4*s24 + &
               69*s13**3*s14*s24 + 115*s13**2*s14**2*s24 + &
               115*s13*s14**3*s24 + 46*s14**4*s24 + 101*s13**3*s23*s24 + &
               199*s13**2*s14*s23*s24 + 199*s13*s14**2*s23*s24 + &
               101*s14**3*s23*s24 + 163*s13**2*s23**2*s24 + &
               199*s13*s14*s23**2*s24 + 114*s14**2*s23**2*s24 + &
               115*s13*s23**3*s24 + 69*s14*s23**3*s24 + 30*s23**4*s24 + &
               39*s13**3*s24**2 + 114*s13**2*s14*s24**2 + &
               163*s13*s14**2*s24**2 + 88*s14**3*s24**2 + &
               114*s13**2*s23*s24**2 + 199*s13*s14*s23*s24**2 + &
               163*s14**2*s23*s24**2 + 115*s13*s23**2*s24**2 + &
               115*s14*s23**2*s24**2 + 40*s23**3*s24**2 + &
               39*s13**2*s24**3 + 101*s13*s14*s24**3 + &
               88*s14**2*s24**3 + 69*s13*s23*s24**3 + &
               115*s14*s23*s24**3 + 40*s23**2*s24**3 + 23*s13*s24**4 + &
               46*s14*s24**4 + 30*s23*s24**4 + 10*s24**5 + &
               216*s12**4*(s13 + s14 + s23 + s24) + &
               1152*m**8*(17*s12 + 9*(s13 + s14 + s23 + s24)) + &
               8*s12**3*(34*s13**2 + 34*s14**2 + 58*s14*s23 + &
                  34*s23**2 + 67*s14*s24 + 59*s23*s24 + 34*s24**2 + &
                  s13*(59*s14 + 67*s23 + 58*s24)) - &
               32*m**6*(504*s12**2 + 155*s13**2 + 155*s14**2 + &
                  266*s14*s23 + 155*s23**2 + 302*s14*s24 + &
                  274*s23*s24 + 155*s24**2 + &
                  540*s12*(s13 + s14 + s23 + s24) + &
                  s13*(274*s14 + 302*s23 + 266*s24)) + &
               s12**2*(181*s13**3 + 181*s14**3 + 181*s23**3 + &
                  411*s23**2*s24 + 411*s23*s24**2 + 181*s24**3 + &
                  s13**2*(411*s14 + 539*s23 + 395*s24) + &
                  s14**2*(395*s23 + 539*s24) + &
                  s14*(395*s23**2 + 778*s23*s24 + 539*s24**2) + &
                  s13*(411*s14**2 + 539*s23**2 + 778*s23*s24 + &
                     395*s24**2 + 778*s14*(s23 + s24))) + &
               4*m**4*(1584*s12**3 + 313*s13**3 + 313*s14**3 + &
                  695*s14**2*s23 + 695*s14*s23**2 + 313*s23**3 + &
                  911*s14**2*s24 + 1378*s14*s23*s24 + 735*s23**2*s24 + &
                  911*s14*s24**2 + 735*s23*s24**2 + 313*s24**3 + &
                  2592*s12**2*(s13 + s14 + s23 + s24) + &
                  s13**2*(735*s14 + 911*s23 + 695*s24) + &
                  s13*(735*s14**2 + 911*s23**2 + 1378*s23*s24 + &
                     695*s24**2 + 1378*s14*(s23 + s24)) + &
                  72*s12*(21*s13**2 + 21*s14**2 + 36*s14*s23 + &
                     21*s23**2 + 41*s14*s24 + 37*s23*s24 + 21*s24**2 + &
                     s13*(37*s14 + 41*s23 + 36*s24))) + &
               s12*(63*s13**4 + 63*s14**4 + &
                  4*s13**3*(43*s14 + 63*s23 + 40*s24) + &
                  4*s14**3*(40*s23 + 63*s24) + &
                  (s23 + s24)**2*(63*s23**2 + 46*s23*s24 + 63*s24**2) + &
                  s13**2*(218*s14**2 + 488*s14*s23 + 378*s23**2 + &
                     396*s14*s24 + 476*s23*s24 + 202*s24**2) + &
                  s14**2*(202*s23**2 + 476*s23*s24 + 378*s24**2) + &
                  4*s14*(40*s23**3 + 99*s23**2*s24 + 122*s23*s24**2 + &
                     63*s24**3) + &
                  4*s13*(43*s14**3 + 63*s23**3 + 122*s23**2*s24 + &
                     99*s23*s24**2 + 40*s24**3 + &
                     s14**2*(99*s23 + 122*s24) + &
                     s14*(119*s23**2 + 186*s23*s24 + 119*s24**2))) - &
               m**2*(1152*s12**4 + 169*s13**4 + 169*s14**4 + &
                  412*s14**3*s23 + 566*s14**2*s23**2 + 412*s14*s23**3 + &
                  169*s23**4 + 648*s14**3*s24 + 1264*s14**2*s23*s24 + &
                  1080*s14*s23**2*s24 + 464*s23**3*s24 + &
                  958*s14**2*s24**2 + 1316*s14*s23*s24**2 + &
                  590*s23**2*s24**2 + 648*s14*s24**3 + 464*s23*s24**3 + &
                  169*s24**4 + 2592*s12**3*(s13 + s14 + s23 + s24) + &
                  s13**3*(464*s14 + 648*s23 + 412*s24) + &
                  2*s13**2*(295*s14**2 + 658*s14*s23 + 479*s23**2 + &
                     540*s14*s24 + 632*s23*s24 + 283*s24**2) + &
                  24*s12**2*(97*s13**2 + 97*s14**2 + 97*s23**2 + &
                     170*s23*s24 + 97*s24**2 + &
                     2*s13*(85*s14 + 95*s23 + 83*s24) + &
                     2*s14*(83*s23 + 95*s24)) + &
                  4*s13*(116*s14**3 + 162*s23**3 + 329*s23**2*s24 + &
                     270*s23*s24**2 + 103*s24**3 + &
                     s14**2*(270*s23 + 329*s24) + &
                     s14*(316*s23**2 + 502*s23*s24 + 316*s24**2)) + &
                  4*s12*(247*s13**3 + 247*s14**3 + 247*s23**3 + &
                     573*s23**2*s24 + 573*s23*s24**2 + 247*s24**3 + &
                     s13**2*(573*s14 + 725*s23 + 545*s24) + &
                     s14**2*(545*s23 + 725*s24) + &
                     s14*(545*s23**2 + 1078*s23*s24 + 725*s24**2) + &
                     s13*(573*s14**2 + 725*s23**2 + 1078*s23*s24 + &
                        545*s24**2 + 1078*s14*(s23 + s24)))))))/&
        (s12*(-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) - &
       (2*(2*gm**6*(24*m**6 + 15*s12**3 - 4*s13**2*s14 - 4*s13*s14**2 - &
               4*s13*s14*s23 - 2*s14**2*s23 + s14*s23**2 - &
               2*s13**2*s24 - 4*s13*s14*s24 - 3*s13*s23*s24 - &
               3*s14*s23*s24 + s13*s24**2 - &
               2*m**4*(90*s12 + 13*s13 + 13*s14 + 5*s23 + 5*s24) + &
               s12**2*(-19*s13 - 19*s14 + 17*(s23 + s24)) + &
               s12*(-34*s13**2 - 34*s14**2 + s14*(s23 - 32*s24) + &
                  s13*(-68*s14 - 32*s23 + s24) + &
                  2*(s23**2 + 3*s23*s24 + s24**2)) + &
               m**2*(136*s12**2 + 6*s13**2 + 24*s13*s14 + 6*s14**2 + &
                  7*s13*s23 + 9*s14*s23 - s23**2 + 9*s13*s24 + &
                  7*s14*s24 + 6*s23*s24 - s24**2 + &
                  s12*(159*s13 + 159*s14 + 25*(s23 + s24)))) - &
            gm**4*(3552*m**8 + 3*s12**4 + 40*s13**4 + 184*s13**3*s14 + &
               288*s13**2*s14**2 + 184*s13*s14**3 + 40*s14**4 + &
               100*s13**3*s23 + 302*s13**2*s14*s23 + &
               272*s13*s14**2*s23 + 70*s14**3*s23 + 80*s13**2*s23**2 + &
               116*s13*s14*s23**2 + 22*s14**2*s23**2 + 20*s13*s23**3 - &
               13*s14*s23**3 + 70*s13**3*s24 + 272*s13**2*s14*s24 + &
               302*s13*s14**2*s24 + 100*s14**3*s24 + &
               120*s13**2*s23*s24 + 268*s13*s14*s23*s24 + &
               120*s14**2*s23*s24 + 61*s13*s23**2*s24 + &
               28*s14*s23**2*s24 + 22*s13**2*s24**2 + &
               116*s13*s14*s24**2 + 80*s14**2*s24**2 + &
               28*s13*s23*s24**2 + 61*s14*s23*s24**2 - 13*s13*s24**3 + &
               20*s14*s24**3 - &
               8*m**6*(544*s12 + 619*s13 + 619*s14 + 257*s23 + &
                  257*s24) + &
               s12**3*(35*s13 + 35*s14 + 53*(s23 + s24)) + &
               s12**2*(50*s13**2 + 50*s14**2 + 231*s14*s23 + &
                  36*s23**2 + 152*s14*s24 + 86*s23*s24 + 36*s24**2 + &
                  s13*(84*s14 + 152*s23 + 231*s24)) + &
               2*m**4*(90*s12**2 + 1229*s13**2 + 2598*s13*s14 + &
                  1229*s14**2 + 1255*s13*s23 + 1013*s14*s23 + &
                  168*s23**2 + 1013*s13*s24 + 1255*s14*s24 + &
                  440*s23*s24 + 168*s24**2 + &
                  s12*(1783*s13 + 1783*s14 + 1133*(s23 + s24))) + &
               2*s12*(29*s13**3 + 29*s14**3 - 7*s23**3 - &
                  15*s23**2*s24 - 15*s23*s24**2 - 7*s24**3 + &
                  s14**2*(133*s23 + 74*s24) + &
                  s13**2*(101*s14 + 74*s23 + 133*s24) + &
                  s14*(37*s23**2 + 136*s23*s24 + 38*s24**2) + &
                  s13*(101*s14**2 + 38*s23**2 + 136*s23*s24 + &
                     37*s24**2 + 214*s14*(s23 + s24))) + &
               m**2*(140*s12**3 - 522*s13**3 - 522*s14**3 - &
                  658*s14**2*s23 - 153*s14*s23**2 - 7*s23**3 - &
                  894*s14**2*s24 - 694*s14*s23*s24 - 89*s23**2*s24 - &
                  401*s14*s24**2 - 89*s23*s24**2 - 7*s24**3 - &
                  2*s13**2*(863*s14 + 447*s23 + 329*s24) - &
                  s12**2*(95*s13 + 95*s14 + 549*(s23 + s24)) - &
                  s13*(1726*s14**2 + 401*s23**2 + 694*s23*s24 + &
                     153*s24**2 + 1672*s14*(s23 + s24)) - &
                  2*s12*(455*s13**2 + 455*s14**2 + 740*s14*s23 + &
                     103*s23**2 + 624*s14*s24 + 340*s23*s24 + &
                     103*s24**2 + s13*(952*s14 + 624*s23 + 740*s24)))) - &
            2*(2*m**2 - s12 - s13 - s14)*&
             (768*m**10 - 2*s12**5 - 2*s13**5 - 6*s13**4*s14 - &
               8*s13**3*s14**2 - 8*s13**2*s14**3 - 6*s13*s14**4 - &
               2*s14**5 - 7*s13**4*s23 - 19*s13**3*s14*s23 - &
               19*s13**2*s14**2*s23 - 9*s13*s14**3*s23 - 2*s14**4*s23 - &
               9*s13**3*s23**2 - 23*s13**2*s14*s23**2 - &
               22*s13*s14**2*s23**2 - 8*s14**3*s23**2 - &
               5*s13**2*s23**3 - 11*s13*s14*s23**3 - 9*s14**2*s23**3 - &
               s13*s23**4 - s14*s23**4 - 2*s13**4*s24 - &
               9*s13**3*s14*s24 - 19*s13**2*s14**2*s24 - &
               19*s13*s14**3*s24 - 7*s14**4*s24 - 4*s13**3*s23*s24 - &
               6*s13**2*s14*s23*s24 - 6*s13*s14**2*s23*s24 - &
               4*s14**3*s23*s24 - 4*s13**2*s23**2*s24 - &
               3*s13*s14*s23**2*s24 - 8*s14**2*s23**2*s24 - &
               2*s13*s23**3*s24 - 2*s14*s23**3*s24 - 8*s13**3*s24**2 - &
               22*s13**2*s14*s24**2 - 23*s13*s14**2*s24**2 - &
               9*s14**3*s24**2 - 8*s13**2*s23*s24**2 - &
               3*s13*s14*s23*s24**2 - 4*s14**2*s23*s24**2 - &
               2*s13*s23**2*s24**2 - 2*s14*s23**2*s24**2 - &
               9*s13**2*s24**3 - 11*s13*s14*s24**3 - 5*s14**2*s24**3 - &
               2*s13*s23*s24**3 - 2*s14*s23*s24**3 - s13*s24**4 - &
               s14*s24**4 - 32*m**8*&
                (23*s12 + 35*s13 + 35*s14 + 19*s23 + 19*s24) + &
               s12**4*(-23*s13 - 23*s14 + 7*(s23 + s24)) - &
               s12**3*(44*s13**2 + 44*s14**2 + 37*s14*s23 - &
                  23*s23**2 + 19*s14*s24 - 42*s23*s24 - 23*s24**2 + &
                  s13*(80*s14 + 19*s23 + 37*s24)) + &
               4*m**6*(-8*s12**2 + 163*s13**2 + 163*s14**2 + &
                  182*s14*s23 + 59*s23**2 + 186*s14*s24 + 58*s23*s24 + &
                  59*s24**2 + 8*s12*(45*s13 + 45*s14 + s23 + s24) + &
                  2*s13*(149*s14 + 93*s23 + 91*s24)) - &
               s12**2*(32*s13**3 + 32*s14**3 + &
                  s14**2*(59*s23 + 46*s24) + &
                  s13**2*(80*s14 + 46*s23 + 59*s24) + &
                  s14*(28*s23**2 - 5*s23*s24 - 7*s24**2) - &
                  3*(7*s23**3 + 15*s23**2*s24 + 15*s23*s24**2 + &
                     7*s24**3) + &
                  s13*(80*s14**2 - 7*s23**2 - 5*s23*s24 + 28*s24**2 + &
                     105*s14*(s23 + s24))) + &
               m**4*(192*s12**3 - 189*s13**3 - 189*s14**3 - &
                  307*s14**2*s23 - 255*s14*s23**2 - 41*s23**3 - &
                  359*s14**2*s24 - 198*s14*s23*s24 - 47*s23**2*s24 - &
                  227*s14*s24**2 - 47*s23*s24**2 - 41*s24**3 - &
                  s13**2*(475*s14 + 359*s23 + 307*s24) + &
                  s12**2*(-692*s13 - 692*s14 + 452*(s23 + s24)) - &
                  s13*(475*s14**2 + 227*s23**2 + 198*s23*s24 + &
                     255*s24**2 + 590*s14*(s23 + s24)) - &
                  4*s12*(192*s13**2 + 192*s14**2 + 143*s14*s23 - &
                     29*s23**2 + 115*s14*s24 - 100*s23*s24 - &
                     29*s24**2 + s13*(362*s14 + 115*s23 + 143*s24))) - &
               s12*(11*s13**4 + 11*s14**4 + 5*s14**3*(5*s23 + 6*s24) + &
                  s13**3*(32*s14 + 30*s23 + 25*s24) - &
                  7*(s23 + s24)**2*(s23**2 + s24**2) + &
                  s14**2*(35*s23**2 + 19*s23*s24 + 20*s24**2) + &
                  s13**2*(42*s14**2 + 75*s14*s23 + 20*s23**2 + &
                     70*s14*s24 + 19*s23*s24 + 35*s24**2) + &
                  2*s14*(6*s23**3 - s23**2*s24 - 10*s23*s24**2 - &
                     3*s24**3) + &
                  s13*(32*s14**3 + s14**2*(70*s23 + 75*s24) + &
                     s14*(55*s23**2 + 38*s23*s24 + 55*s24**2) - &
                     2*(3*s23**3 + 10*s23**2*s24 + s23*s24**2 - &
                        6*s24**3))) + &
               m**2*(-40*s12**4 + 29*s13**4 + 29*s14**4 + &
                  47*s14**3*s23 + 89*s14**2*s23**2 + 37*s14*s23**3 + &
                  2*s23**4 + 172*s12**3*(s13 + s14 - s23 - s24) + &
                  79*s14**3*s24 + 58*s14**2*s23*s24 + &
                  35*s14*s23**2*s24 + 4*s23**3*s24 + 77*s14**2*s24**2 + &
                  27*s14*s23*s24**2 + 4*s23**2*s24**2 + 29*s14*s24**3 + &
                  4*s23*s24**3 + 2*s24**4 + &
                  s13**3*(84*s14 + 79*s23 + 47*s24) + &
                  s13**2*(110*s14**2 + 177*s14*s23 + 77*s23**2 + &
                     145*s14*s24 + 58*s23*s24 + 89*s24**2) + &
                  s12**2*(309*s13**2 + 309*s14**2 + 178*s14*s23 - &
                     163*s23**2 + 82*s14*s24 - 342*s23*s24 - &
                     163*s24**2 + 2*s13*(293*s14 + 41*s23 + 89*s24)) + &
                  s13*(84*s14**3 + 29*s23**3 + 27*s23**2*s24 + &
                     35*s23*s24**2 + 37*s24**3 + &
                     s14**2*(145*s23 + 177*s24) + &
                     2*s14*(71*s23**2 + 34*s23*s24 + 71*s24**2)) + &
                  s12*(159*s13**3 + 159*s14**3 + &
                     10*s14**2*(24*s23 + 23*s24) + &
                     s13**2*(409*s14 + 230*s23 + 240*s24) + &
                     s14*(139*s23**2 - 8*s23*s24 + 37*s24**2) - &
                     2*(25*s23**3 + 67*s23**2*s24 + 67*s23*s24**2 + &
                        25*s24**3) + &
                     s13*(409*s14**2 + 37*s23**2 - 8*s23*s24 + &
                        139*s24**2 + 450*s14*(s23 + s24))))) + &
            gm**2*(-1920*m**10 + 25*s12**5 + 8*s13**5 + 64*s13**4*s14 + &
               152*s13**3*s14**2 + 152*s13**2*s14**3 + 64*s13*s14**4 + &
               8*s14**5 + 24*s13**4*s23 + 100*s13**3*s14*s23 + &
               152*s13**2*s14**2*s23 + 100*s13*s14**3*s23 + &
               24*s14**4*s23 + 26*s13**3*s23**2 + 24*s13**2*s14*s23**2 + &
               22*s13*s14**2*s23**2 + 24*s14**3*s23**2 + &
               12*s13**2*s23**3 - 31*s13*s14*s23**3 - 19*s14**2*s23**3 + &
               2*s13*s23**4 - 15*s14*s23**4 + 24*s13**4*s24 + &
               100*s13**3*s14*s24 + 152*s13**2*s14**2*s24 + &
               100*s13*s14**3*s24 + 24*s14**4*s24 + 14*s13**3*s23*s24 - &
               62*s13**2*s14*s23*s24 - 62*s13*s14**2*s23*s24 + &
               14*s14**3*s23*s24 - 9*s13**2*s23**2*s24 - &
               121*s13*s14*s23**2*s24 - 40*s14**2*s23**2*s24 - &
               3*s13*s23**3*s24 - 37*s14*s23**3*s24 + 24*s13**3*s24**2 + &
               22*s13**2*s14*s24**2 + 24*s13*s14**2*s24**2 + &
               26*s14**3*s24**2 - 40*s13**2*s23*s24**2 - &
               121*s13*s14*s23*s24**2 - 9*s14**2*s23*s24**2 - &
               27*s13*s23**2*s24**2 - 27*s14*s23**2*s24**2 - &
               19*s13**2*s24**3 - 31*s13*s14*s24**3 + 12*s14**2*s24**3 - &
               37*s13*s23*s24**3 - 3*s14*s23*s24**3 - 15*s13*s24**4 + &
               2*s14*s24**4 + &
               32*m**8*(109*s12 + 89*s13 + 89*s14 + 43*s23 + 43*s24) + &
               2*s12**4*(59*s13 + 59*s14 + 20*(s23 + s24)) + &
               s12**3*(188*s13**2 + 188*s14**2 + 227*s14*s23 + &
                  4*s23**2 + 178*s14*s24 + 26*s23*s24 + 4*s24**2 + &
                  s13*(344*s14 + 178*s23 + 227*s24)) - &
               8*m**6*(266*s12**2 + 248*s13**2 + 448*s13*s14 + &
                  248*s14**2 + 235*s13*s23 + 185*s14*s23 + 21*s23**2 + &
                  185*s13*s24 + 235*s14*s24 - 2*s23*s24 + 21*s24**2 + &
                  s12*(539*s13 + 539*s14 + 313*(s23 + s24))) + &
               s12**2*(133*s13**3 + 133*s14**3 + &
                  25*s14**2*(13*s23 + 8*s24) + &
                  s13**2*(387*s14 + 200*s23 + 325*s24) + &
                  s14*(38*s23**2 + 117*s23*s24 + 39*s24**2) - &
                  2*(5*s23**3 - 8*s23**2*s24 - 8*s23*s24**2 + &
                     5*s24**3) + &
                  s13*(387*s14**2 + 39*s23**2 + 117*s23*s24 + &
                     38*s24**2 + 483*s14*(s23 + s24))) + &
               s12*(46*s13**4 + 46*s14**4 + 89*s14**3*(2*s23 + s24) + &
                  (s23 + s24)**2*(s23**2 + 10*s23*s24 + s24**2) + &
                  s14**2*(42*s23**2 + 90*s23*s24 + 25*s24**2) + &
                  s13**2*(364*s14**2 + 312*s14*s23 + 25*s23**2 + &
                     401*s14*s24 + 90*s23*s24 + 42*s24**2) - &
                  s14*(45*s23**3 + 61*s23**2*s24 + 33*s23*s24**2 + &
                     17*s24**3) + s13**3*(228*s14 + 89*(s23 + 2*s24)) + &
                  s13*(228*s14**3 - 17*s23**3 - 33*s23**2*s24 - &
                     61*s23*s24**2 - 45*s24**3 + &
                     s14**2*(401*s23 + 312*s24) + &
                     2*s14*(25*s23**2 + 73*s23*s24 + 25*s24**2))) + &
               m**4*(572*s12**3 + &
                  2*s12**2*(1111*s13 + 1111*s14 + 817*(s23 + s24)) + &
                  s12*(2535*s13**2 + 2535*s14**2 + 537*s23**2 + &
                     1382*s23*s24 + 537*s24**2 + &
                     24*s14*(84*s23 + 71*s24) + &
                     2*s13*(2501*s14 + 852*s23 + 1008*s24)) + &
                  2*(352*s13**3 + 352*s14**3 - 37*s23**3 - &
                     115*s23**2*s24 - 115*s23*s24**2 - 37*s24**3 + &
                     7*s14**2*(67*s23 + 77*s24) + &
                     s13**2*(1112*s14 + 539*s23 + 469*s24) + &
                     s14*(-28*s23**2 - 86*s23*s24 + 202*s24**2) + &
                     2*s13*(556*s14**2 + 101*s23**2 - 43*s23*s24 - &
                        14*s24**2 + 332*s14*(s23 + s24)))) - &
               m**2*(120*s12**4 + 120*s13**4 + 120*s14**4 + &
                  266*s14**3*s23 + 65*s14**2*s23**2 - 138*s14*s23**3 - &
                  13*s23**4 + 270*s14**3*s24 + 18*s14**2*s23*s24 - &
                  282*s14*s23**2*s24 - 40*s23**3*s24 + &
                  197*s14**2*s24**2 - 118*s14*s23*s24**2 - &
                  54*s23**2*s24**2 + 26*s14*s24**3 - 40*s23*s24**3 - &
                  13*s24**4 + s13**3*(632*s14 + 270*s23 + 266*s24) + &
                  s13**2*(1024*s14**2 + 614*s14*s23 + 197*s23**2 + &
                     610*s14*s24 + 18*s23*s24 + 65*s24**2) + &
                  s12**3*(625*s13 + 625*s14 + 443*(s23 + s24)) + &
                  s12**2*(971*s13**2 + 971*s14**2 + 1232*s14*s23 + &
                     165*s23**2 + 984*s14*s24 + 502*s23*s24 + &
                     165*s24**2 + 2*s13*(917*s14 + 492*s23 + 616*s24)) + &
                  2*s13*(316*s14**3 + 13*s23**3 - 59*s23**2*s24 - &
                     141*s23*s24**2 - 69*s24**3 + &
                     s14**2*(305*s23 + 307*s24) + &
                     s14*(7*s23**2 - 230*s23*s24 + 7*s24**2)) + &
                  s12*(643*s13**3 + 643*s14**3 + &
                     s14**2*(987*s23 + 597*s24) + &
                     s13**2*(2017*s14 + 597*s23 + 987*s24) + &
                     2*s14*(38*s23**2 + 207*s23*s24 + 77*s24**2) + &
                     2*(7*s23**3 + 83*s23**2*s24 + 83*s23*s24**2 + &
                        7*s24**3) + &
                     s13*(2017*s14**2 + 154*s23**2 + 414*s23*s24 + &
                        76*s24**2 + 1428*s14*(s23 + s24)))))))/&
        (s12*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) + &
       (-2*gm**6*(492*m**6 + s12**3 - 18*s13**3 + 18*s13**2*s14 + &
             38*s13*s14**2 - 27*s13**2*s23 + 15*s13*s14*s23 - &
             37*s14**2*s23 - 9*s13*s23**2 - 39*s14*s23**2 + &
             75*s13**2*s24 + 82*s13*s14*s24 + 75*s13*s23*s24 - &
             37*s14*s23*s24 + 44*s13*s24**2 - &
             m**4*(134*s12 + 513*s13 + 259*s14 + 27*s23 + 5*s24) + &
             m**2*(-19*s12**2 + 102*s13**2 + 103*s13*s14 + 37*s14**2 + &
                6*s13*s23 + 70*s14*s23 + 48*s23**2 + &
                s12*(58*s13 + 26*s14 + 29*s23 - 105*s24) - &
                123*s13*s24 - 29*s14*s24 - 38*s23*s24 - 44*s24**2) + &
             s12**2*(73*s13 + 2*(s14 - 19*s23 + s24)) + &
             s12*(54*s13**2 + s14**2 - 75*s14*s23 - 39*s23**2 + &
                2*s14*s24 - 38*s23*s24 + s24**2 + &
                3*s13*(37*s14 + 8*s23 + 39*s24))) - &
          2*(2*m**2 - s12 - s13 - s14)*(-2*m**2 + s12 + s14 + s24)**2*&
           (96*m**6 + 2*s12**3 - 4*s13**3 - 4*s13**2*s14 - &
             4*s13*s14**2 - 4*s14**3 - 6*s13**2*s23 - 9*s13*s14*s23 - &
             s14**2*s23 - 2*s13*s23**2 - 6*s14*s23**2 - s13**2*s24 - &
             9*s13*s14*s24 - 6*s14**2*s24 + 8*s13*s23*s24 + &
             8*s14*s23*s24 - 6*s13*s24**2 - 2*s14*s24**2 + &
             s12*(-11*s13**2 - 11*s14**2 - 5*s14*s23 + 10*s23**2 + &
                s13*(-18*s14 + s23 - 5*s24) + s14*s24 + 24*s23*s24 + &
                10*s24**2) + s12**2*(-5*s13 - 5*s14 + 12*(s23 + s24)) + &
             m**2*(-22*s12**2 + 15*s13**2 + 18*s13*s14 + 15*s14**2 + &
                37*s13*s23 + 35*s14*s23 + 8*s23**2 + 35*s13*s24 + &
                37*s14*s24 - 16*s23*s24 + 8*s24**2 + &
                4*s12*(11*s13 + 11*s14 - 9*(s23 + s24))) - &
             4*m**4*(3*s12 + 2*(8*s13 + 8*s14 + 7*(s23 + s24)))) + &
          gm**4*(-24*m**8 + 36*s12**4 - 24*s13**4 + 26*s13**3*s14 + &
             90*s13**2*s14**2 + 56*s13*s14**3 + 8*s14**4 - &
             36*s13**3*s23 - 12*s13**2*s14*s23 - 34*s13*s14**2*s23 - &
             40*s14**3*s23 - 12*s13**2*s23**2 + 37*s13*s14*s23**2 + &
             31*s14**2*s23**2 + 48*s14*s23**3 + 32*s13**3*s24 + &
             42*s13**2*s14*s24 + 62*s13*s14**2*s24 + 38*s14**3*s24 + &
             75*s13**2*s23*s24 - 130*s13*s14*s23*s24 + &
             25*s14**2*s23*s24 + 22*s13*s23**2*s24 + &
             91*s14*s23**2*s24 - 105*s13**2*s24**2 - &
             45*s13*s14*s24**2 + 52*s14**2*s24**2 - &
             165*s13*s23*s24**2 + 65*s14*s23*s24**2 - 51*s13*s24**3 + &
             22*s14*s24**3 + &
             s12**3*(66*s13 + 124*s14 - 21*s23 + 79*s24) - &
             2*m**6*(354*s12 - 549*s13 + 707*s14 + 423*s23 + 235*s24) + &
             s12**2*(74*s13**2 + 148*s14**2 - 74*s14*s23 - 9*s23**2 + &
                212*s14*s24 + 43*s23*s24 + 50*s24**2 + &
                2*s13*(105*s14 + 5*s23 + 14*s24)) + &
             m**4*(1044*s12**2 - 92*s13**2 + 920*s14**2 + &
                1561*s14*s23 + 105*s23**2 + 1545*s14*s24 + &
                484*s23*s24 - 101*s24**2 + &
                2*s12*(-125*s13 + 854*s14 + 975*s23 + 518*s24) - &
                s13*(112*s14 + 13*s23 + 793*s24)) - &
             m**2*(284*s12**3 + 88*s13**3 + 176*s14**3 + &
                345*s14**2*s23 + 262*s14*s23**2 + 48*s23**3 + &
                s13**2*(126*s14 - 65*s23 - 193*s24) + 565*s14**2*s24 + &
                516*s14*s23*s24 + 113*s23**2*s24 + 290*s14*s24**2 - &
                100*s23*s24**2 - 29*s24**3 + &
                s12**2*(336*s13 + 792*s14 + 641*s23 + 479*s24) + &
                s13*(142*s14**2 + 300*s14*s23 - 101*s23**2 + &
                   84*s14*s24 - 62*s23*s24 - 489*s24**2) + &
                2*s12*(18*s13**2 + 326*s14**2 + 493*s14*s23 + &
                   123*s23**2 + s13*(194*s14 + 375*s23 - 35*s24) + &
                   537*s14*s24 + 278*s23*s24 + 49*s24**2)) + &
             s12*(20*s13**3 + 68*s14**3 + 48*s23**3 + &
                s13**2*(140*s14 + 69*s23 - 67*s24) + 99*s23**2*s24 + &
                64*s23*s24**2 + 7*s24**3 + s14**2*(-93*s23 + 171*s24) + &
                2*s14*(11*s23**2 + 38*s23*s24 + 55*s24**2) + &
                s13*(200*s14**2 + 85*s23**2 - 86*s23*s24 - 89*s24**2 + &
                   8*s14*(3*s23 + 14*s24)))) + &
          gm**2*(576*m**10 + 4*m**8*&
              (154*s12 - 383*s13 - 413*s14 + 59*s23 - 199*s24) - &
             2*m**6*(918*s12**2 - 202*s13**2 - 1109*s14**2 + &
                588*s14*s23 + 11*s23**2 - 413*s14*s24 + 103*s23*s24 - &
                182*s24**2 + &
                s12*(-744*s13 - 566*s14 + 1006*s23 + 680*s24) - &
                s13*(1357*s14 + 433*s23 + 1422*s24)) + &
             m**4*(1086*s12**3 - 100*s13**3 - 1194*s14**3 + &
                815*s14**2*s23 + 225*s14*s23**2 + 72*s23**3 - &
                941*s14**2*s24 + 999*s14*s23*s24 + 129*s23**2*s24 + &
                136*s14*s24**2 + 140*s23*s24**2 - 101*s24**3 - &
                8*s13**2*(77*s14 + 55*s23 + 115*s24) + &
                s12**2*(-271*s13 + 239*s14 + 1883*s23 + 1937*s24) + &
                s12*(-788*s13**2 - 2049*s14**2 + 2770*s14*s23 + &
                   489*s23**2 + s13*(-2591*s14 + 111*s23 - 1864*s24) + &
                   347*s14*s24 + 1769*s23*s24 + 622*s24**2) - &
                s13*(1730*s14**2 + 679*s14*s23 + 240*s23**2 + &
                   3003*s14*s24 + 695*s23*s24 + 1649*s24**2)) - &
             (s12 + s14 + s24)*&
              (32*s13**4 + s12**3*(7*s13 - s14 - 32*s23 - 7*s24) + &
                s13**2*(22*s14**2 + 96*s14*s23 + 16*s23**2 + &
                   77*s14*s24 - 46*s23*s24 + 81*s24**2) + &
                4*s13**3*(11*s14 + 3*(4*s23 + s24)) + &
                s14*(6*s14**3 - 36*s23**3 - 61*s23**2*s24 - &
                   21*s23*s24**2 - 16*s24**3 + &
                   s14*s23*(8*s23 + 5*s24) + s14**2*(-19*s23 + 22*s24)) &
+ s12**2*(51*s13**2 + 16*s14**2 - 119*s14*s23 - 68*s23**2 + &
                   5*s14*s24 - 68*s23*s24 - 10*s24**2 + &
                   s13*(75*s14 - 75*s23 + 73*s24)) + &
                s13*(16*s14**3 + s14**2*(33*s23 + 91*s24) + &
                   s24*(-4*s23**2 + 45*s23*s24 + 29*s24**2) + &
                   s14*(6*s23**2 - 49*s23*s24 + 91*s24**2)) + &
                s12*(76*s13**3 + 23*s14**3 + &
                   s14**2*(-106*s23 + 46*s24) + &
                   s13**2*(133*s14 + 10*s23 + 124*s24) - &
                   s14*(60*s23**2 + 47*s23*s24 + 6*s24**2) + &
                   s13*(96*s14**2 - 58*s14*s23 - 86*s23**2 + &
                      176*s14*s24 - 116*s23*s24 + 71*s24**2) - &
                   3*(12*s23**3 + 19*s23**2*s24 + 8*s23*s24**2 + s24**3)&
)) + m**2*(-197*s12**4 + 56*s13**4 + 225*s14**4 - 181*s14**3*s23 - &
                91*s14**2*s23**2 - 108*s14*s23**3 + 367*s14**3*s24 - &
                344*s14**2*s23*s24 - 286*s14*s23**2*s24 - &
                36*s23**3*s24 + 12*s14**2*s24**2 - 277*s14*s23*s24**2 - &
                65*s23**2*s24**2 - 101*s14*s24**3 + 24*s23*s24**3 + &
                13*s24**4 + 2*s13**3*(65*s14 + 42*s23 + 47*s24) - &
                s12**3*(31*s13 + 198*s14 + 532*s23 + 543*s24) + &
                s13**2*(207*s14**2 + 446*s14*s23 + 28*s23**2 + &
                   718*s14*s24 + 218*s23*s24 + 495*s24**2) + &
                s12**2*(399*s13**2 + 448*s14**2 - 1353*s14*s23 - &
                   375*s23**2 - 482*s14*s24 - 913*s23*s24 - &
                   396*s24**2 + s13*(813*s14 - 502*s23 + 325*s24)) + &
                s13*(414*s14**3 + 11*s14**2*(17*s23 + 103*s24) + &
                   s24*(122*s23**2 + 71*s23*s24 + 387*s24**2) + &
                   2*s14*(65*s23**2 + 48*s23*s24 + 508*s24**2)) + &
                s12*(202*s13**3 + 674*s14**3 - 108*s23**3 - &
                   442*s23**2*s24 - 389*s23*s24**2 - 49*s24**3 + &
                   s14**2*(-1002*s23 + 488*s24) - &
                   s14*(466*s23**2 + 1261*s23*s24 + 303*s24**2) + &
                   s13*(1250*s14**2 - 347*s14*s23 - 22*s23**2 + &
                      1853*s14*s24 - 523*s23*s24 + 715*s24**2) + &
                   42*s13**2*(17*s14 + 7*(s23 + 3*s24))))))/&
        (s12*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
          (gm**2 - 2*m**2 + s12 + s14 + s24)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) - &
       (-16*gm**6*s12*(24*m**4 + &
             3*(s13 + s23)*(s12 + s13 + s14 + s23 + s24) - &
             2*m**2*(3*s12 + 2*(5*s13 + s14 + 5*s23 + s24))) - &
          gm**4*(7248*m**6*s12 + 164*s12**4 + &
             s12**3*(333*s13 + 479*s14 + 333*s23 + 479*s24) + &
             s12**2*(103*s13**2 + 466*s14**2 + 555*s14*s23 + &
                103*s23**2 + 932*s14*s24 + 455*s23*s24 + 466*s24**2 + &
                s13*(455*s14 + 206*s23 + 555*s24)) - &
             2*m**4*(700*s12**2 + &
                s12*(964*s13 + 696*s14 + 964*s23 + 696*s24) - &
                35*(s13**2 + 5*s14**2 + 6*s14*s23 + s23**2 - &
                   2*s13*(3*s14 + s23 - 3*s24) - 10*s14*s24 - &
                   6*s23*s24 + 5*s24**2)) + &
             s12*(-66*s13**3 + 151*s14**3 - 66*s23**3 + 7*s23**2*s24 + &
                122*s23*s24**2 + 151*s24**3 + &
                s13**2*(7*s14 - 198*s23 + 42*s24) + &
                s14**2*(287*s23 + 453*s24) + &
                3*s14*(14*s23**2 + 93*s23*s24 + 151*s24**2) + &
                s13*(122*s14**2 + 99*s14*s23 - 198*s23**2 + &
                   279*s14*s24 + 99*s23*s24 + 287*s24**2)) + &
             5*(6*s13**3*s24 + &
                s14*s23*(13*s14**2 + 7*s14*s23 + 6*s23**2 - &
                   17*s23*s24 - 13*s24**2) + &
                s13**2*(-6*s14*s23 - 17*s14*s24 + 7*s24**2) + &
                s13*(s14**2*(17*s23 - 13*s24) - 14*s14*s23*s24 + &
                   s24*(-6*s23**2 + 17*s23*s24 + 13*s24**2))) - &
             m**2*(968*s12**3 + &
                2*s12**2*(121*s13 + 811*s14 + 121*s23 + 811*s24) + &
                s12*(-213*s13**2 + 777*s14**2 + 496*s14*s23 - &
                   213*s23**2 + 1134*s14*s24 + 136*s23*s24 + &
                   777*s24**2 + 2*s13*(68*s14 - 283*s23 + 248*s24)) + &
                5*(6*s13**3 + 13*s14**3 + 6*s23**3 + &
                   s14**2*(90*s23 - 13*s24) - 23*s23**2*s24 + &
                   4*s23*s24**2 + 13*s24**3 + &
                   s13**2*(-23*s14 - 6*s23 + 27*s24) + &
                   s14*(27*s23**2 - 94*s23*s24 - 13*s24**2) + &
                   s13*(4*s14**2 - 4*s14*s23 - 6*s23**2 - 94*s14*s24 - &
                      4*s23*s24 + 90*s24**2)))) - &
          2*(-2*m**2 + s12 + s14 + s24)**2*&
           (1024*m**6*s12 - 12*s12**4 - &
             24*s12**3*(s13 + s14 + s23 + s24) - &
             s12**2*(23*s13**2 + 23*s14**2 - 6*s14*s23 + 23*s23**2 + &
                s13*(34*s14 + 46*s23 - 6*s24) + 46*s14*s24 + &
                34*s23*s24 + 23*s24**2) - &
             4*m**4*(268*s12**2 - 5*(s13 - s14 - s23 + s24)**2 + &
                140*s12*(s13 + s14 + s23 + s24)) + &
             5*(s13**3*s24 + &
                s14*s23*(s14**2 + 2*s14*s23 + s23**2 - s24**2) - &
                s13*s24*(s14**2 + 4*s14*s23 + s23**2 - s24**2) + &
                s13**2*(-(s14*s23) + 2*s24**2)) - &
             s12*(11*s13**3 + 11*s14**3 + 11*s23**3 + &
                s13**2*(21*s14 + 33*s23 - 19*s24) + 21*s23**2*s24 + &
                21*s23*s24**2 + 11*s24**3 + &
                s14**2*(-19*s23 + 33*s24) + &
                s14*(-19*s23**2 + 2*s23*s24 + 33*s24**2) + &
                s13*(21*s14**2 + 33*s23**2 + 2*s23*s24 - 19*s24**2 + &
                   2*s14*(s23 + s24))) + &
             m**2*(304*s12**3 + 328*s12**2*(s13 + s14 + s23 + s24) + &
                4*s12*(25*s13**2 + 25*s14**2 + 18*s14*s23 + &
                   25*s23**2 + 70*s14*s24 + 38*s23*s24 + 25*s24**2 + &
                   2*s13*(19*s14 + 35*s23 + 9*s24)) - &
                5*(s13**3 + s14**3 - s13**2*(s14 + s23 - 7*s24) + &
                   s14**2*(7*s23 - s24) + (s23 - s24)**2*(s23 + s24) + &
                   s14*(7*s23**2 - 6*s23*s24 - s24**2) - &
                   s13*(s14**2 + s23**2 + 6*s23*s24 - 7*s24**2 + &
                      6*s14*(s23 + s24))))) + &
          2*gm**2*(3264*m**8*s12 - &
             4*m**6*(1102*s12**2 + &
                2*s12*(227*s13 + 615*s14 + 227*s23 + 615*s24) - &
                5*(s13**2 + 3*s14**2 + 4*s14*s23 + s23**2 - &
                   2*s13*(2*s14 + s23 - 2*s24) - 6*s14*s24 - &
                   4*s23*s24 + 3*s24**2)) + &
             2*m**4*(1026*s12**3 + &
                2*s12**2*(564*s13 + 1091*s14 + 564*s23 + 1091*s24) + &
                s12*(283*s13**2 + 1057*s14**2 + 976*s14*s23 + &
                   283*s23**2 + 2354*s14*s24 + 1056*s23*s24 + &
                   1057*s24**2 + 2*s13*(528*s14 + 243*s23 + 488*s24)) - &
                5*(4*s13**3 + 5*s14**3 + 4*s23**3 + &
                   s14**2*(14*s23 - 5*s24) + s23**2*s24 - &
                   10*s23*s24**2 + 5*s24**3 + &
                   s13**2*(s14 - 4*s23 + 9*s24) - &
                   2*s13*(5*s14**2 + 5*s14*s23 + 2*s23**2 + &
                      2*s14*s24 + 5*s23*s24 - 7*s24**2) + &
                   s14*(9*s23**2 - 4*s23*s24 - 5*s24**2))) + &
             (s12 + s14 + s24)*&
              (23*s12**4 + 4*s12**3*(6*s13 + 23*s14 + 6*s23 + 23*s24) + &
                3*s12**2*(15*s13**2 + 26*s14**2 + 15*s23**2 + &
                   22*s23*s24 + 26*s24**2 + 8*s14*(4*s23 + 9*s24) + &
                   s13*(22*s14 + 30*s23 + 32*s24)) + &
                s12*(44*s13**3 + 9*s14**3 + 44*s23**3 + &
                   s13**2*(28*s14 + 132*s23 - 7*s24) + 28*s23**2*s24 + &
                   5*s23*s24**2 + 9*s24**3 + &
                   s14**2*(40*s23 + 87*s24) + &
                   s13*(5*s14**2 + 71*s14*s23 + 132*s23**2 + &
                      95*s14*s24 + 71*s23*s24 + 40*s24**2) + &
                   s14*(-7*s23**2 + 95*s23*s24 + 87*s24**2)) - &
                10*(2*s13**3*s24 + s14*s23**2*(2*s14 + 2*s23 + s24) + &
                   s13**2*(2*s24**2 + s14*(-2*s23 + s24)) - &
                   s13*s23*(s14**2 + 4*s14*s24 + s24*(2*s23 + s24)))) - &
             2*m**2*(189*s12**4 + &
                s12**3*(361*s13 + 591*s14 + 361*s23 + 591*s24) + &
                s12**2*(221*s13**2 + 568*s14**2 + 640*s14*s23 + &
                   221*s23**2 + 1306*s14*s24 + 610*s23*s24 + &
                   568*s24**2 + s13*(610*s14 + 412*s23 + 640*s24)) + &
                s12*(26*s13**3 + 158*s14**3 + 26*s23**3 + &
                   197*s23**2*s24 + 225*s23*s24**2 + 158*s24**3 + &
                   s13**2*(197*s14 + 128*s23 + 162*s24) + &
                   s14**2*(220*s23 + 654*s24) + &
                   s13*(225*s14**2 + 429*s14*s23 + 128*s23**2 + &
                      545*s14*s24 + 429*s23*s24 + 220*s24**2) + &
                   s14*(162*s23**2 + 545*s23*s24 + 654*s24**2)) - &
                5*(2*s13**3*(s14 + 3*s24) - &
                   s13**2*(s14**2 + 6*s14*s23 - 8*s14*s24 + 2*s23*s24 - &
                      7*s24**2) - &
                   s13*(s14**3 + s14**2*(8*s23 + 7*s24) + &
                      s24*(6*s23**2 + 8*s23*s24 - 7*s24**2) + &
                      s14*(2*s23**2 + 12*s23*s24 - s24**2)) + &
                   s23*(7*s14**3 + s14**2*(7*s23 + s24) + &
                      s14*(6*s23**2 + 8*s23*s24 - 7*s24**2) - &
                      s24*(-2*s23**2 + s23*s24 + s24**2))))))/&
        (s12**2*(gm**2 - 2*m**2 + s12 + s14 + s24)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) - &
       (16*gm**6*s12*(24*m**4 + &
             3*(s14 + s24)*(s12 + s13 + s14 + s23 + s24) - &
             2*m**2*(3*s12 + 2*(s13 + 5*s14 + s23 + 5*s24))) + &
          gm**4*(-2864*m**6*s12 + 164*s12**4 + &
             s12**3*(479*s13 + 333*s14 + 479*s23 + 333*s24) + &
             s12**2*(466*s13**2 + 103*s14**2 + 555*s14*s23 + &
                466*s23**2 + 206*s14*s24 + 455*s23*s24 + 103*s24**2 + &
                s13*(455*s14 + 932*s23 + 555*s24)) + &
             s12*(151*s13**3 - 66*s14**3 + 151*s23**3 + &
                6*s14**2*(7*s23 - 33*s24) + 122*s23**2*s24 + &
                7*s23*s24**2 - 66*s24**3 + &
                s13**2*(122*s14 + 453*s23 + 287*s24) + &
                s14*(287*s23**2 + 99*s23*s24 - 198*s24**2) + &
                s13*(7*s14**2 + 279*s14*s23 + 453*s23**2 + &
                   99*s14*s24 + 279*s23*s24 + 42*s24**2)) - &
             2*m**4*(500*s12**2 + &
                s12*(412*s13 - 608*s14 + 412*s23 - 608*s24) - &
                5*(15*s13**2 + 23*s14**2 + 38*s14*s23 + 15*s23**2 - &
                   46*s14*s24 - 38*s23*s24 + 23*s24**2 + &
                   s13*(-38*s14 - 30*s23 + 38*s24))) - &
             m**2*(504*s12**3 + &
                2*s12**2*(309*s13 - 61*s14 + 309*s23 - 61*s24) + &
                s12*(237*s13**2 - 49*s14**2 + 120*s14*s23 + &
                   237*s23**2 - 478*s14*s24 + 40*s23*s24 - &
                   49*s24**2 + 2*s13*(20*s14 + 27*s23 + 60*s24)) + &
                5*(13*s13**3 + 6*s14**3 + 13*s23**3 + &
                   s14**2*(59*s23 - 6*s24) + 4*s23**2*s24 - &
                   23*s23*s24**2 + 6*s24**3 + &
                   s13**2*(4*s14 - 13*s23 + 50*s24) - &
                   s13*(23*s14**2 + 54*s14*s23 + 13*s23**2 + &
                      36*s14*s24 + 54*s23*s24 - 59*s24**2) + &
                   s14*(50*s23**2 - 36*s23*s24 - 6*s24**2))) + &
             5*(13*s13**3*s24 + &
                s14*s23*(6*s14**2 + 7*s14*s23 + 13*s23**2 + &
                   17*s23*s24 - 6*s24**2) + &
                s13**2*(-13*s14*s23 + 17*s14*s24 + 7*s24**2) - &
                s13*(14*s14*s23*s24 + s14**2*(17*s23 + 6*s24) + &
                   s24*(13*s23**2 + 17*s23*s24 - 6*s24**2)))) + &
          2*(2*m**2 - s12 - s13 - s23)*&
           (640*m**8*s12 - 8*m**6*&
              (132*s12**2 + 8*s12*(17*s13 + s14 + 17*s23 + s24) - &
                5*(3*s13**2 - s14**2 + 3*s23**2 - &
                   2*s13*(s14 + 3*s23 - s24) - 2*s23*s24 - s24**2 + &
                   2*s14*(s23 + s24))) + &
             2*m**4*(312*s12**3 + &
                8*s12**2*(77*s13 + 10*s14 + 77*s23 + 10*s24) + &
                2*s12*(89*s13**2 - 11*s14**2 + 54*s14*s23 + &
                   89*s23**2 - 2*s14*s24 + 74*s23*s24 - 11*s24**2 + &
                   s13*(74*s14 + 358*s23 + 54*s24)) - &
                5*(5*s13**3 - s14**3 + 5*s23**3 - 3*s23**2*s24 - &
                   s23*s24**2 - s24**3 + s14**2*(-s23 + s24) + &
                   s13**2*(-3*s14 - 5*s23 + 21*s24) + &
                   s14*(21*s23**2 + 2*s23*s24 + s24**2) - &
                   s13*(s14**2 + 18*s14*s23 + 5*s23**2 - 2*s14*s24 + &
                      18*s23*s24 + s24**2))) + &
             (s12 + s13 + s23)*&
              (12*s12**4 + 24*s12**3*(s13 + s14 + s23 + s24) + &
                s12**2*(23*s13**2 + 23*s14**2 - 6*s14*s23 + &
                   23*s23**2 + s13*(34*s14 + 46*s23 - 6*s24) + &
                   46*s14*s24 + 34*s23*s24 + 23*s24**2) - &
                5*(s13**3*s24 + &
                   s14*s23*(s14**2 + 2*s14*s23 + s23**2 - s24**2) - &
                   s13*s24*(s14**2 + 4*s14*s23 + s23**2 - s24**2) + &
                   s13**2*(-(s14*s23) + 2*s24**2)) + &
                s12*(11*s13**3 + 11*s14**3 + 11*s23**3 + &
                   s13**2*(21*s14 + 33*s23 - 19*s24) + 21*s23**2*s24 + &
                   21*s23*s24**2 + 11*s24**3 + &
                   s14**2*(-19*s23 + 33*s24) + &
                   s14*(-19*s23**2 + 2*s23*s24 + 33*s24**2) + &
                   s13*(21*s14**2 + 33*s23**2 + 2*s23*s24 - &
                      19*s24**2 + 2*s14*(s23 + s24)))) - &
             m**2*(152*s12**4 + &
                16*s12**3*(26*s13 + 7*s14 + 26*s23 + 7*s24) + &
                2*s12**2*(151*s13**2 + 7*s14**2 + 82*s14*s23 + &
                   151*s23**2 + 54*s14*s24 + 122*s23*s24 + 7*s24**2 + &
                   2*s13*(61*s14 + 211*s23 + 41*s24)) + &
                s12*(65*s13**3 + 5*s14**3 + 65*s23**3 + &
                   s13**2*(83*s14 + 415*s23 - 77*s24) + &
                   83*s23**2*s24 + 71*s23*s24**2 + 5*s24**3 - &
                   s14**2*(9*s23 + 5*s24) + &
                   s14*(-77*s23**2 + 162*s23*s24 - 5*s24**2) + &
                   s13*(71*s14**2 + 415*s23**2 + 186*s23*s24 - &
                      9*s24**2 + 6*s14*(31*s23 + 27*s24))) - &
                5*(s13**4 - s13**3*(s14 - 13*s24) + &
                   s13**2*(-s14**2 - 13*s14*s23 - 2*s23**2 + &
                      2*s14*s24 + s23*s24 + 11*s24**2) + &
                   s23*(-s14**3 + s14**2*(11*s23 - s24) + &
                      (s23 - s24)**2*(s23 + s24) + &
                      s14*(13*s23**2 + 2*s23*s24 + s24**2)) + &
                   s13*(s14**3 + s14**2*(-2*s23 + s24) + &
                      s14*(s23**2 - 20*s23*s24 - s24**2) - &
                      s24*(13*s23**2 + 2*s23*s24 + s24**2))))) - &
          2*gm**2*(1280*m**8*s12 - &
             4*m**6*(126*s12**2 + 26*s12*(s13 + 5*s14 + s23 + 5*s24) - &
                5*(15*s13**2 - 7*s14**2 + 8*s14*s23 + 15*s23**2 + &
                   14*s14*s24 - 8*s23*s24 - 7*s24**2 + &
                   s13*(-8*s14 - 30*s23 + 8*s24))) - &
             2*m**4*(182*s12**3 + &
                10*s12**2*(22*s13 - s14 + 22*s23 - s24) + &
                2*s12*(43*s13**2 - 55*s14**2 + 50*s14*s23 + &
                   43*s23**2 - 2*s13*(5*s14 + 92*s23 - 25*s24) - &
                   40*s14*s24 - 10*s23*s24 - 55*s24**2) + &
                5*(10*s13**3 - s14**3 + 10*s23**3 - 5*s23**2*s24 - &
                   4*s23*s24**2 - s24**3 + s14**2*(-8*s23 + s24) + &
                   s13**2*(-5*s14 - 10*s23 + 47*s24) + &
                   s14*(47*s23**2 + 12*s23*s24 + s24**2) - &
                   2*s13*(2*s14**2 + 21*s14*s23 + 5*s23**2 - &
                      6*s14*s24 + 21*s23*s24 + 4*s24**2))) + &
             (s12 + s13 + s23)*&
              (23*s12**4 + 4*s12**3*(23*s13 + 6*s14 + 23*s23 + 6*s24) + &
                3*s12**2*(26*s13**2 + 15*s14**2 + 32*s14*s23 + &
                   26*s23**2 + 30*s14*s24 + 22*s23*s24 + 15*s24**2 + &
                   s13*(22*s14 + 72*s23 + 32*s24)) + &
                s12*(9*s13**3 + 44*s14**3 + 9*s23**3 + 5*s23**2*s24 + &
                   28*s23*s24**2 + 44*s24**3 + &
                   s13**2*(5*s14 + 87*s23 + 40*s24) + &
                   s14**2*(-7*s23 + 132*s24) + &
                   s13*(28*s14**2 + 95*s14*s23 + 87*s23**2 + &
                      71*s14*s24 + 95*s23*s24 - 7*s24**2) + &
                   s14*(40*s23**2 + 71*s23*s24 + 132*s24**2)) + &
                10*(s13**2*(s14 - 2*s24)*s24 + &
                   s14*s23*(-2*s14**2 - 2*s14*s23 + &
                      s24*(s23 + 2*s24)) - &
                   s13*(s14**2*(s23 - 2*s24) - 4*s14*s23*s24 + &
                      s24**2*(s23 + 2*s24)))) + &
             2*m**2*(51*s12**4 + &
                4*s12**3*(2*s13 + 9*s14 + 2*s23 + 9*s24) - &
                s12**2*(97*s13**2 + 66*s14**2 - 26*s14*s23 + &
                   97*s23**2 + s13*(54*s14 + 284*s23 - 26*s24) + &
                   42*s14*s24 + 54*s23*s24 + 66*s24**2) - &
                s12*(46*s13**3 + 19*s14**3 + 46*s23**3 + &
                   2*s13**2*(22*s14 + 119*s23 - 53*s24) + &
                   44*s23**2*s24 + 121*s23*s24**2 + 19*s24**3 + &
                   s14**2*(51*s23 + 47*s24) + &
                   s14*(-106*s23**2 + 112*s23*s24 + 47*s24**2) + &
                   s13*(121*s14**2 + 238*s23**2 + 108*s23*s24 + &
                      51*s24**2 + 4*s14*(27*s23 + 28*s24))) - &
                5*(s13**3*(s14 - 12*s24) + &
                   s13**2*(s14**2 + 2*s14*(6*s23 - s24) - &
                      s24*(s23 + 11*s24)) + &
                   s23*(-s14**3 + s14**2*(-11*s23 + 2*s24) + &
                      s24*(s23**2 + s23*s24 - 2*s24**2) + &
                      s14*(-12*s23**2 - 2*s23*s24 + s24**2)) + &
                   s13*(-2*s14**3 + s14**2*(2*s23 + s24) + &
                      s24*(12*s23**2 + 2*s23*s24 - s24**2) + &
                      s14*(-s23**2 + 20*s23*s24 + 2*s24**2))))))/&
        (s12**2*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)) + &
       (2*(2*gm**6*(48*m**6 + 36*s12**3 - &
               4*m**4*(18*s12 + 5*s13 + 5*s14 + 13*s23 + 13*s24) + &
               s12**2*(43*s13 + 43*s14 + 7*(s23 + s24)) + &
               s12*(7*s13**2 + 7*s14**2 + 32*s14*s23 - 29*s23**2 - &
                  22*s14*s24 - 70*s23*s24 - 29*s24**2 + &
                  s13*(6*s14 - 22*s23 + 32*s24)) + &
               2*m**2*(58*s12**2 - s13**2 + 6*s13*s14 - s14**2 + &
                  7*s13*s23 + 9*s14*s23 + 6*s23**2 + 9*s13*s24 + &
                  7*s14*s24 + 24*s23*s24 + 6*s24**2 + &
                  s12*(-11*s13 - 11*s14 + 51*(s23 + s24))) + &
               2*(s13**2*s24 - &
                  s13*(3*s14*(s23 + s24) + 2*s24*(2*s23 + s24)) + &
                  s23*(s14**2 - 4*s24*(s23 + s24) - 2*s14*(s23 + 2*s24))&
)) - gm**4*(5376*m**8 + 156*s12**4 - &
               16*m**6*(163*s12 + 212*s13 + 212*s14 + 448*s23 + &
                  448*s24) + &
               s12**3*(193*s13 + 193*s14 + 277*(s23 + s24)) + &
               s12**2*(54*s13**2 + 54*s14**2 + 411*s14*s23 + &
                  169*s23**2 + 211*s14*s24 + 390*s23*s24 + &
                  169*s24**2 + s13*(64*s14 + 211*s23 + 411*s24)) + &
               4*m**4*(108*s12**2 + 168*s13**2 + 368*s13*s14 + &
                  168*s14**2 + 871*s13*s23 + 929*s14*s23 + &
                  857*s23**2 + 929*s13*s24 + 871*s14*s24 + &
                  1758*s23*s24 + 857*s24**2 + &
                  s12*(434*s13 + 434*s14 + 748*(s23 + s24))) + &
               s12*(17*s13**3 + 17*s14**3 + 92*s23**3 + &
                  404*s23**2*s24 + 404*s23*s24**2 + 92*s24**3 + &
                  4*s14**2*(37*s23 + 23*s24) + &
                  s13**2*(39*s14 + 92*s23 + 148*s24) + &
                  s14*(325*s23**2 + 532*s23*s24 + 167*s24**2) + &
                  s13*(39*s14**2 + 167*s23**2 + 532*s23*s24 + &
                     325*s24**2 + 304*s14*(s23 + s24))) - &
               2*m**2*(70*s12**3 + 16*s13**3 + 16*s14**3 + &
                  279*s14**2*s23 + 667*s14*s23**2 + 330*s23**3 + &
                  257*s14**2*s24 + 1192*s14*s23*s24 + &
                  1126*s23**2*s24 + 573*s14*s24**2 + 1126*s23*s24**2 + &
                  330*s24**3 + s13**2*(80*s14 + 257*s23 + 279*s24) + &
                  s12**2*(285*s13 + 285*s14 + 359*(s23 + s24)) + &
                  s13*(80*s14**2 + 573*s23**2 + 1192*s23*s24 + &
                     667*s24**2 + 568*s14*(s23 + s24)) + &
                  s12*(197*s13**2 + 197*s14**2 + 691*s14*s23 + &
                     550*s23**2 + 477*s14*s24 + 1268*s23*s24 + &
                     550*s24**2 + s13*(446*s14 + 477*s23 + 691*s24))) + &
               2*(s13**3*(11*s23 + 5*s24) + s14**3*(5*s23 + 11*s24) + &
                  2*(s23 + s24)**2*&
                   (11*s23**2 + 34*s23*s24 + 11*s24**2) + &
                  s14**2*(67*s23**2 + 89*s23*s24 + 44*s24**2) + &
                  s13**2*(43*s14*s23 + 44*s23**2 + 37*s14*s24 + &
                     89*s23*s24 + 67*s24**2) + &
                  s14*(67*s23**3 + 209*s23**2*s24 + 197*s23*s24**2 + &
                     55*s24**3) + &
                  s13*(55*s23**3 + 197*s23**2*s24 + 209*s23*s24**2 + &
                     67*s24**3 + s14**2*(37*s23 + 43*s24) + &
                     s14*(111*s23**2 + 178*s23*s24 + 111*s24**2)))) - &
            2*(2*m**2 - s12 - s23 - s24)*&
             (1536*m**10 - 28*s12**5 - 2*s13**4*s23 - &
               7*s13**3*s14*s23 - 7*s13**2*s14**2*s23 - &
               s13*s14**3*s23 + s14**4*s23 - 10*s13**3*s23**2 - &
               20*s13**2*s14*s23**2 - 16*s13*s14**2*s23**2 - &
               6*s14**3*s23**2 - 18*s13**2*s23**3 - 23*s13*s14*s23**3 - &
               13*s14**2*s23**3 - 14*s13*s23**4 - 10*s14*s23**4 - &
               4*s23**5 + s13**4*s24 - s13**3*s14*s24 - &
               7*s13**2*s14**2*s24 - 7*s13*s14**3*s24 - 2*s14**4*s24 - &
               10*s13**3*s23*s24 - 18*s13**2*s14*s23*s24 - &
               18*s13*s14**2*s23*s24 - 10*s14**3*s23*s24 - &
               31*s13**2*s23**2*s24 - 33*s13*s14*s23**2*s24 - &
               26*s14**2*s23**2*s24 - 32*s13*s23**3*s24 - &
               24*s14*s23**3*s24 - 12*s23**4*s24 - 6*s13**3*s24**2 - &
               16*s13**2*s14*s24**2 - 20*s13*s14**2*s24**2 - &
               10*s14**3*s24**2 - 26*s13**2*s23*s24**2 - &
               33*s13*s14*s23*s24**2 - 31*s14**2*s23*s24**2 - &
               32*s13*s23**2*s24**2 - 32*s14*s23**2*s24**2 - &
               16*s23**3*s24**2 - 13*s13**2*s24**3 - &
               23*s13*s14*s24**3 - 18*s14**2*s24**3 - &
               24*s13*s23*s24**3 - 32*s14*s23*s24**3 - &
               16*s23**2*s24**3 - 10*s13*s24**4 - 14*s14*s24**4 - &
               12*s23*s24**4 - 4*s24**5 - &
               76*s12**4*(s13 + s14 + s23 + s24) - &
               64*m**8*(59*s12 + 19*s13 + 19*s14 + 35*s23 + 35*s24) - &
               s12**3*(77*s13**2 + 77*s14**2 + 91*s23**2 + &
                  142*s23*s24 + 91*s24**2 + 4*s14*(38*s23 + 41*s24) + &
                  2*s13*(69*s14 + 82*s23 + 76*s24)) + &
               8*m**6*(448*s12**2 + 47*s13**2 + 82*s13*s14 + &
                  47*s14**2 + 192*s13*s23 + 176*s14*s23 + 169*s23**2 + &
                  176*s13*s24 + 192*s14*s24 + 286*s23*s24 + &
                  169*s24**2 + &
                  16*s12*(23*s13 + 23*s14 + 30*(s23 + s24))) - &
               s12**2*(36*s13**3 + 36*s14**3 + 61*s23**3 + &
                  115*s23**2*s24 + 115*s23*s24**2 + 61*s24**3 + &
                  s13**2*(84*s14 + 127*s23 + 95*s24) + &
                  s14**2*(95*s23 + 127*s24) + &
                  8*s14*(17*s23**2 + 27*s23*s24 + 19*s24**2) + &
                  2*s13*(42*s14**2 + 76*s23**2 + 108*s23*s24 + &
                     68*s24**2 + 97*s14*(s23 + s24))) - &
               2*m**4*(816*s12**3 + 23*s13**3 + 23*s14**3 + &
                  165*s14**2*s23 + 325*s14*s23**2 + 207*s23**3 + &
                  209*s14**2*s24 + 554*s14*s23*s24 + 457*s23**2*s24 + &
                  377*s14*s24**2 + 457*s23*s24**2 + 207*s24**3 + &
                  s13**2*(65*s14 + 209*s23 + 165*s24) + &
                  16*s12**2*(73*s13 + 73*s14 + 77*(s23 + s24)) + &
                  s13*(65*s14**2 + 377*s23**2 + 554*s23*s24 + &
                     325*s24**2 + 306*s14*(s23 + s24)) + &
                  2*s12*(227*s13**2 + 227*s14**2 + 520*s14*s23 + &
                     405*s23**2 + 572*s14*s24 + 658*s23*s24 + &
                     405*s24**2 + s13*(406*s14 + 572*s23 + 520*s24))) - &
               s12*(7*s13**4 + 7*s14**4 + 3*s14**3*(6*s23 + 13*s24) + &
                  s13**3*(20*s14 + 39*s23 + 18*s24) + &
                  2*(s23 + s24)**2*&
                   (11*s23**2 + 4*s23*s24 + 11*s24**2) + &
                  s13**2*(26*s14**2 + 74*s14*s23 + 79*s23**2 + &
                     53*s14*s24 + 92*s23*s24 + 55*s24**2) + &
                  s14**2*(55*s23**2 + 92*s23*s24 + 79*s24**2) + &
                  s14*(62*s23**3 + 119*s23**2*s24 + 126*s23*s24**2 + &
                     69*s24**3) + &
                  s13*(20*s14**3 + 69*s23**3 + 126*s23**2*s24 + &
                     119*s23*s24**2 + 62*s24**3 + &
                     s14**2*(53*s23 + 74*s24) + &
                     4*s14*(29*s23**2 + 37*s23*s24 + 29*s24**2))) + &
               m**2*(352*s12**4 + s13**4 + s14**4 + 23*s14**3*s23 + &
                  115*s14**2*s23**2 + 133*s14*s23**3 + 64*s23**4 + &
                  49*s14**3*s24 + 194*s14**2*s23*s24 + &
                  281*s14*s23**2*s24 + 168*s23**3*s24 + &
                  151*s14**2*s24**2 + 315*s14*s23*s24**2 + &
                  208*s23**2*s24**2 + 167*s14*s24**3 + 168*s23*s24**3 + &
                  64*s24**4 + s13**3*(8*s14 + 49*s23 + 23*s24) + &
                  s13**2*(14*s14**2 + 105*s14*s23 + 151*s23**2 + &
                     79*s14*s24 + 194*s23*s24 + 115*s24**2) + &
                  32*s12**3*(23*s13 + 23*s14 + 22*(s23 + s24)) + &
                  2*s12**2*(257*s13**2 + 257*s14**2 + 496*s14*s23 + &
                     327*s23**2 + 544*s14*s24 + 514*s23*s24 + &
                     327*s24**2 + s13*(462*s14 + 544*s23 + 496*s24)) + &
                  s13*(8*s14**3 + 167*s23**3 + 315*s23**2*s24 + &
                     281*s23*s24**2 + 133*s24**3 + &
                     s14**2*(79*s23 + 105*s24) + &
                     s14*(206*s23**2 + 268*s23*s24 + 206*s24**2)) + &
                  s12*(125*s13**3 + 125*s14**3 + 315*s23**3 + &
                     653*s23**2*s24 + 653*s23*s24**2 + 315*s24**3 + &
                     s13**2*(299*s14 + 509*s23 + 377*s24) + &
                     s14**2*(377*s23 + 509*s24) + &
                     s14*(591*s23**2 + 942*s23*s24 + 667*s24**2) + &
                     s13*(299*s14**2 + 667*s23**2 + 942*s23*s24 + &
                        591*s24**2 + 770*s14*(s23 + s24))))) + &
            gm**2*(-3840*m**10 + 164*s12**5 + 4*s13**4*s23 + &
               21*s13**3*s14*s23 + 45*s13**2*s14**2*s23 + &
               43*s13*s14**3*s23 + 15*s14**4*s23 + 24*s13**3*s23**2 + &
               105*s13**2*s14*s23**2 + 136*s13*s14**2*s23**2 + &
               55*s14**3*s23**2 + 52*s13**2*s23**3 + &
               148*s13*s14*s23**3 + 96*s14**2*s23**3 + 48*s13*s23**4 + &
               72*s14*s23**4 + 16*s23**5 + 15*s13**4*s24 + &
               43*s13**3*s14*s24 + 45*s13**2*s14**2*s24 + &
               21*s13*s14**3*s24 + 4*s14**4*s24 + 103*s13**3*s23*s24 + &
               313*s13**2*s14*s23*s24 + 313*s13*s14**2*s23*s24 + &
               103*s14**3*s23*s24 + 288*s13**2*s23**2*s24 + &
               620*s13*s14*s23**2*s24 + 332*s14**2*s23**2*s24 + &
               320*s13*s23**3*s24 + 368*s14*s23**3*s24 + &
               128*s23**4*s24 + 55*s13**3*s24**2 + &
               136*s13**2*s14*s24**2 + 105*s13*s14**2*s24**2 + &
               24*s14**3*s24**2 + 332*s13**2*s23*s24**2 + &
               620*s13*s14*s23*s24**2 + 288*s14**2*s23*s24**2 + &
               568*s13*s23**2*s24**2 + 568*s14*s23**2*s24**2 + &
               304*s23**3*s24**2 + 96*s13**2*s24**3 + &
               148*s13*s14*s24**3 + 52*s14**2*s24**3 + &
               368*s13*s23*s24**3 + 320*s14*s23*s24**3 + &
               304*s23**2*s24**3 + 72*s13*s24**4 + 48*s14*s24**4 + &
               128*s23*s24**4 + 16*s24**5 + &
               128*m**8*(89*s12 + 35*s13 + 35*s14 + 58*s23 + 58*s24) + &
               s12**4*(341*s13 + 341*s14 + 551*(s23 + s24)) + &
               s12**3*(239*s13**2 + 239*s14**2 + 976*s14*s23 + &
                  703*s23**2 + 908*s14*s24 + 1402*s23*s24 + &
                  703*s24**2 + s13*(418*s14 + 908*s23 + 976*s24)) - &
               8*m**6*(1492*s12**2 + 219*s13**2 + 434*s13*s14 + &
                  219*s14**2 + 797*s13*s23 + 907*s14*s23 + 640*s23**2 + &
                  907*s13*s24 + 797*s14*s24 + 1544*s23*s24 + &
                  640*s24**2 + &
                  4*s12*(299*s13 + 299*s14 + 511*(s23 + s24))) + &
               s12**2*(61*s13**3 + 61*s14**3 + &
                  s14**2*(568*s23 + 513*s24) + &
                  s13**2*(143*s14 + 513*s23 + 568*s24) + &
                  s14*(1031*s23**2 + 1983*s23*s24 + 898*s24**2) + &
                  2*(205*s23**3 + 669*s23**2*s24 + 669*s23*s24**2 + &
                     205*s24**3) + &
                  s13*(143*s14**2 + 898*s23**2 + 1983*s23*s24 + &
                     1031*s24**2 + 975*s14*(s23 + s24))) + &
               2*m**4*(2984*s12**3 + 145*s13**3 + 145*s14**3 + &
                  1156*s14**2*s23 + 1931*s14*s23**2 + 836*s23**3 + &
                  878*s14**2*s24 + 4184*s14*s23*s24 + 3388*s23**2*s24 + &
                  1549*s14*s24**2 + 3388*s23*s24**2 + 836*s24**3 + &
                  s13**2*(415*s14 + 878*s23 + 1156*s24) + &
                  s12**2*(3710*s13 + 3710*s14 + 6218*(s23 + s24)) + &
                  s13*(415*s14**2 + 1549*s23**2 + 4184*s23*s24 + &
                     1931*s24**2 + 2030*s14*(s23 + s24)) + &
                  s12*(1233*s13**2 + 1233*s14**2 + 3969*s23**2 + &
                     8710*s23*s24 + 3969*s24**2 + &
                     6*s14*(959*s23 + 897*s24) + &
                     s13*(2198*s14 + 5382*s23 + 5754*s24))) + &
               s12*(-s13**4 - s14**4 + 22*s14**3*(6*s23 + 5*s24) + &
                  22*s13**3*(5*s23 + 6*s24) + &
                  10*(s23 + s24)**2*&
                   (11*s23**2 + 38*s23*s24 + 11*s24**2) + &
                  s14**2*(441*s23**2 + 844*s23*s24 + 365*s24**2) + &
                  s13**2*(2*s14**2 + 288*s14*s23 + 365*s23**2 + &
                     310*s14*s24 + 844*s23*s24 + 441*s24**2) + &
                  4*s14*(113*s23**3 + 364*s23**2*s24 + &
                     342*s23*s24**2 + 91*s24**3) + &
                  2*s13*(182*s23**3 + 684*s23**2*s24 + 728*s23*s24**2 + &
                     226*s24**3 + s14**2*(155*s23 + 144*s24) + &
                     s14*(366*s23**2 + 770*s23*s24 + 366*s24**2))) - &
               m**2*(1512*s12**4 + 19*s13**4 + 19*s14**4 + &
                  300*s14**3*s23 + 841*s14**2*s23**2 + 868*s14*s23**3 + &
                  264*s23**4 + 172*s14**3*s24 + 1702*s14**2*s23*s24 + &
                  3140*s14*s23**2*s24 + 1552*s23**3*s24 + &
                  541*s14**2*s24**2 + 2908*s14*s23*s24**2 + &
                  2576*s23**2*s24**2 + 636*s14*s24**3 + &
                  1552*s23*s24**3 + 264*s24**4 + &
                  4*s13**3*(16*s14 + 43*s23 + 75*s24) + &
                  s13**2*(90*s14**2 + 628*s14*s23 + 541*s23**2 + &
                     756*s14*s24 + 1702*s23*s24 + 841*s24**2) + &
                  320*s12**3*(8*s13 + 8*s14 + 13*(s23 + s24)) + &
                  s12**2*(1347*s13**2 + 1347*s14**2 + 5668*s14*s23 + &
                     4069*s23**2 + 5292*s14*s24 + 8462*s23*s24 + &
                     4069*s24**2 + s13*(2402*s14 + 5292*s23 + 5668*s24)) &
+ 2*s13*(32*s14**3 + s14**2*(378*s23 + 314*s24) + &
                     s14*(693*s23**2 + 1706*s23*s24 + 693*s24**2) + &
                     2*(159*s23**3 + 727*s23**2*s24 + 785*s23*s24**2 + &
                        217*s24**3)) + &
                  2*s12*(95*s13**3 + 95*s14**3 + &
                     2*s14**2*(581*s23 + 521*s24) + &
                     s13**2*(229*s14 + 1042*s23 + 1162*s24) + &
                     3*s14*(677*s23**2 + 1358*s23*s24 + 593*s24**2) + &
                     4*(199*s23**3 + 724*s23**2*s24 + 724*s23*s24**2 + &
                        199*s24**3) + &
                     s13*(229*s14**2 + 1992*s14*(s23 + s24) + &
                        3*(593*s23**2 + 1358*s23*s24 + 677*s24**2)))))))/&
        (s12*(-gm**2 - 2*m**2 + s12 + s23 + s24)*&
          (-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2) + &
       (2*(16*gm**6*s12*(4*m**4 + 4*s12**2 + (s13 + s23)*(s14 + s24) + &
               4*s12*(s13 + s14 + s23 + s24) - &
               2*m**2*(6*s12 + s13 + s14 + s23 + s24)) - &
            2*gm**4*(1056*m**6*s12 + 43*s12**4 + &
               76*s12**3*(s13 + s14 + s23 + s24) + &
               5*(s14*s23 - s13*s24)**2 + &
               m**4*(268*s12**2 + 5*(s13 - s14 - s23 + s24)**2 - &
                  740*s12*(s13 + s14 + s23 + s24)) + &
               s12**2*(17*s13**2 + 17*s14**2 + 57*s14*s23 + 17*s23**2 + &
                  54*s14*s24 - 3*s23*s24 + 17*s24**2 + &
                  s13*(-3*s14 + 54*s23 + 57*s24)) - &
               s12*(16*s13**3 + 16*s14**3 + &
                  s13**2*(72*s14 + 28*s23 + 27*s24) + &
                  s14**2*(27*s23 + 28*s24) + &
                  s14*(27*s23**2 + 69*s23*s24 + 28*s24**2) + &
                  8*(2*s23**3 + 9*s23**2*s24 + 9*s23*s24**2 + &
                     2*s24**3) + &
                  s13*(72*s14**2 + 28*s23**2 + 69*s23*s24 + 27*s24**2 + &
                     69*s14*(s23 + s24))) + &
               m**2*(-292*s12**3 - 138*s12**2*(s13 + s14 + s23 + s24) + &
                  s12*(183*s13**2 + 183*s14**2 + 282*s14*s23 + &
                     183*s23**2 + 286*s14*s24 + 442*s23*s24 + &
                     183*s24**2 + s13*(442*s14 + 286*s23 + 282*s24)) - &
                  10*(s14*s23*(s14 + s23 - s24) + s13**2*s24 - &
                     s13*((s23 - s24)*s24 + s14*(s23 + s24))))) - &
            gm**2*(3072*m**8*s12 + 2*s12**5 + &
               82*s12**4*(s13 + s14 + s23 + s24) - &
               20*(s13 + s14 + s23 + s24)*(s14*s23 - s13*s24)**2 - &
               16*m**6*(366*s12**2 - 5*(s13 - s14 - s23 + s24)**2 + &
                  206*s12*(s13 + s14 + s23 + s24)) + &
               s12**3*(151*s13**2 + 151*s14**2 + 151*s23**2 + &
                  368*s23*s24 + 151*s24**2 + 94*s14*(2*s23 + 3*s24) + &
                  2*s13*(184*s14 + 141*s23 + 94*s24)) + &
               s12**2*(87*s13**3 + 87*s14**3 + 87*s23**3 + &
                  391*s23**2*s24 + 391*s23*s24**2 + 87*s24**3 + &
                  s13**2*(391*s14 + 221*s23 + 141*s24) + &
                  s14**2*(141*s23 + 221*s24) + &
                  s14*(141*s23**2 + 472*s23*s24 + 221*s24**2) + &
                  s13*(391*s14**2 + 221*s23**2 + 472*s23*s24 + &
                     141*s24**2 + 472*s14*(s23 + s24))) + &
               2*s12*(8*s13**4 + 8*s14**4 + 11*s14**3*(s23 + 2*s24) + &
                  8*(s23 + s24)**2*(s23**2 + 5*s23*s24 + s24**2) + &
                  s13**2*(96*s14**2 + 113*s14*s23 + 28*s23**2 + &
                     102*s14*s24 + 68*s23*s24 + 6*s24**2) + &
                  s14**2*(6*s23**2 + 68*s23*s24 + 28*s24**2) + &
                  s14*(11*s23**3 + 102*s23**2*s24 + 113*s23*s24**2 + &
                     22*s24**3) + s13**3*(56*s14 + 11*(2*s23 + s24)) + &
                  s13*(56*s14**3 + 22*s23**3 + 113*s23**2*s24 + &
                     102*s23*s24**2 + 11*s24**3 + &
                     s14**2*(102*s23 + 113*s24) + &
                     68*s14*(s23**2 + 3*s23*s24 + s24**2))) + &
               4*m**4*(890*s12**3 + &
                  1060*s12**2*(s13 + s14 + s23 + s24) + &
                  8*s12*(34*s13**2 + 34*s14**2 + 77*s14*s23 + &
                     34*s23**2 + 88*s14*s24 + 97*s23*s24 + 34*s24**2 + &
                     s13*(97*s14 + 88*s23 + 77*s24)) - &
                  5*(s13**3 + s14**3 - s13**2*(s14 + s23 - 11*s24) + &
                     s14**2*(11*s23 - s24) + &
                     (s23 - s24)**2*(s23 + s24) + &
                     s14*(11*s23**2 - 10*s23*s24 - s24**2) - &
                     s13*(s14**2 + s23**2 + 10*s23*s24 - 11*s24**2 + &
                        10*s14*(s23 + s24)))) - &
               2*m**2*(352*s12**4 + 730*s12**3*(s13 + s14 + s23 + s24) + &
                  2*s12**2*(253*s13**2 + 253*s14**2 + 416*s14*s23 + &
                     253*s23**2 + 496*s14*s24 + 626*s23*s24 + &
                     253*s24**2 + s13*(626*s14 + 496*s23 + 416*s24)) - &
                  20*(s13**3*s24 + &
                     s14*s23*(s14**2 + 4*s14*s23 + s23**2 - s24**2) - &
                     s13*s24*(s14**2 + 8*s14*s23 + s23**2 - s24**2) + &
                     s13**2*(-(s14*s23) + 4*s24**2)) + &
                  s12*(89*s13**3 + 89*s14**3 + 89*s23**3 + &
                     479*s23**2*s24 + 479*s23*s24**2 + 89*s24**3 + &
                     s13**2*(479*s14 + 307*s23 + 219*s24) + &
                     s14**2*(219*s23 + 307*s24) + &
                     s14*(219*s23**2 + 778*s23*s24 + 307*s24**2) + &
                     s13*(479*s14**2 + 307*s23**2 + 778*s23*s24 + &
                        219*s24**2 + 778*s14*(s23 + s24))))) - &
            2*(4096*m**10*s12 - 12*s12**6 - &
               36*s12**5*(s13 + s14 + s23 + s24) - &
               16*m**8*(524*s12**2 - 5*(s13 - s14 - s23 + s24)**2 + &
                  268*s12*(s13 + s14 + s23 + s24)) - &
               2*s12**4*(25*s13**2 + 25*s14**2 + 24*s14*s23 + &
                  25*s23**2 + 50*s14*s24 + 44*s23*s24 + 25*s24**2 + &
                  s13*(44*s14 + 50*s23 + 24*s24)) - &
               s12*(s13 + s14 + s23 + s24)**2*&
                (4*s13**3 + 4*s14**3 + s13**2*(4*s14 + 7*s23 - 11*s24) + &
                  s14**2*(-11*s23 + 7*s24) + &
                  s14*(-11*s23**2 + 8*s23*s24 + 7*s24**2) + &
                  4*(s23**3 + s23**2*s24 + s23*s24**2 + s24**3) + &
                  s13*(4*s14**2 + 7*s23**2 + 8*s23*s24 - 11*s24**2 + &
                     8*s14*(s23 + s24))) - &
               8*s12**3*(5*s13**3 + 5*s14**3 + 5*s23**3 + &
                  12*s23**2*s24 + 12*s23*s24**2 + 5*s24**3 + &
                  s13**2*(12*s14 + 15*s23 + 2*s24) + &
                  s14**2*(2*s23 + 15*s24) + &
                  s14*(2*s23**2 + 14*s23*s24 + 15*s24**2) + &
                  s13*(12*s14**2 + 15*s23**2 + 14*s23*s24 + 2*s24**2 + &
                     14*s14*(s23 + s24))) + &
               5*(s13**2*s24 - s14*s23*(s14 + s23 + s24) + &
                   s13*(s14*(-s23 + s24) + s24*(s23 + s24)))**2 - &
               s12**2*(18*s13**4 + 18*s14**4 + &
                  s13**3*(52*s14 + 67*s23 - 3*s24) + &
                  s14**3*(-3*s23 + 67*s24) + &
                  s13**2*(68*s14**2 + 111*s14*s23 + 98*s23**2 + &
                     41*s14*s24 + 56*s23*s24 - 42*s24**2) + &
                  2*(s23 + s24)**2*(9*s23**2 + 8*s23*s24 + 9*s24**2) + &
                  s14**2*(-42*s23**2 + 56*s23*s24 + 98*s24**2) + &
                  s14*(-3*s23**3 + 41*s23**2*s24 + 111*s23*s24**2 + &
                     67*s24**3) + &
                  s13*(52*s14**3 + 67*s23**3 + 111*s23**2*s24 + &
                     41*s23*s24**2 - 3*s24**3 + 56*s14*(s23 + s24)**2 + &
                     s14**2*(41*s23 + 111*s24))) + &
               8*m**6*(816*s12**3 + 840*s12**2*(s13 + s14 + s23 + s24) + &
                  4*s12*(53*s13**2 + 53*s14**2 + 53*s23**2 + &
                     110*s23*s24 + 53*s24**2 + 18*s14*(5*s23 + 7*s24) + &
                     2*s13*(55*s14 + 63*s23 + 45*s24)) - &
                  5*(s13**3 + s14**3 - s13**2*(s14 + s23 - 7*s24) + &
                     s14**2*(7*s23 - s24) + (s23 - s24)**2*(s23 + s24) + &
                     s14*(7*s23**2 - 6*s23*s24 - s24**2) - &
                     s13*(s14**2 + s23**2 + 6*s23*s24 - 7*s24**2 + &
                        6*s14*(s23 + s24)))) - &
               m**4*(2336*s12**4 + 3648*s12**3*(s13 + s14 + s23 + s24) + &
                  4*s12**2*(489*s13**2 + 489*s14**2 + 489*s23**2 + &
                     938*s23*s24 + 489*s24**2 + &
                     14*s13*(67*s14 + 77*s23 + 57*s24) + &
                     14*s14*(57*s23 + 77*s24)) - &
                  5*(s13**4 + s14**4 + 20*s14**3*s23 + 20*s13**3*s24 - &
                     2*s13**2*&
                      (s14**2 + 10*s14*s23 + s23**2 - 27*s24**2) - &
                     4*s13*s24*&
                      (5*s14**2 + 26*s14*s23 + 5*s23**2 - 5*s24**2) + &
                     s14**2*(54*s23**2 - 2*s24**2) + &
                     (s23**2 - s24**2)**2 + 20*s14*(s23**3 - s23*s24**2)&
) + 4*s12*(91*s13**3 + 91*s14**3 + 91*s23**3 + 257*s23**2*s24 + &
                     257*s23*s24**2 + 91*s24**3 + &
                     9*s14**2*(13*s23 + 37*s24) + &
                     s13**2*(257*s14 + 333*s23 + 117*s24) + &
                     s14*(117*s23**2 + 514*s23*s24 + 333*s24**2) + &
                     s13*(257*s14**2 + 333*s23**2 + 514*s23*s24 + &
                        117*s24**2 + 514*s14*(s23 + s24)))) + &
               2*m**2*(176*s12**5 + 376*s12**4*(s13 + s14 + s23 + s24) + &
                  s12**3*(322*s13**2 + 322*s14**2 + 476*s14*s23 + &
                     322*s23**2 + 684*s14*s24 + 596*s23*s24 + &
                     322*s24**2 + s13*(596*s14 + 684*s23 + 476*s24)) + &
                  4*s12**2*(34*s13**3 + 34*s14**3 + 34*s23**3 + &
                     87*s23**2*s24 + 87*s23*s24**2 + 34*s24**3 + &
                     14*s14**2*(3*s23 + 8*s24) + &
                     s13**2*(87*s14 + 112*s23 + 42*s24) + &
                     s14*(42*s23**2 + 149*s23*s24 + 112*s24**2) + &
                     s13*(87*s14**2 + 112*s23**2 + 149*s23*s24 + &
                        42*s24**2 + 149*s14*(s23 + s24))) + &
                  2*s12*(13*s13**4 + 13*s14**4 - &
                     2*s14**3*(s23 - 26*s24) + &
                     s13**3*(38*s14 + 52*s23 - 2*s24) + &
                     2*s13**2*&
                      (25*s14**2 + 57*s14*s23 + 39*s23**2 + &
                        30*s14*s24 + 37*s23*s24 - 15*s24**2) + &
                     (s23 + s24)**2*&
                      (13*s23**2 + 12*s23*s24 + 13*s24**2) + &
                     s14**2*(-30*s23**2 + 74*s23*s24 + 78*s24**2) + &
                     s14*(-2*s23**3 + 60*s23**2*s24 + 114*s23*s24**2 + &
                        52*s24**3) + &
                     2*s13*(19*s14**3 + 26*s23**3 + 57*s23**2*s24 + &
                        30*s23*s24**2 - s24**3 + &
                        s14**2*(30*s23 + 57*s24) + &
                        s14*(37*s23**2 + 100*s23*s24 + 37*s24**2))) - &
                  5*(s13**4*s24 + &
                     s13**3*(s14*(-s23 + s24) + s24*(s23 + 7*s24)) - &
                     s13**2*(s14**2*(s23 + s24) + &
                        s24*(s23**2 - 6*s23*s24 - 7*s24**2) + &
                        s14*(s23**2 + 13*s23*s24 - 6*s24**2)) + &
                     s14*s23*(s14**3 + (s23 - s24)*(s23 + s24)**2 + &
                        s14**2*(7*s23 + s24) + &
                        s14*(7*s23**2 + 6*s23*s24 - s24**2)) + &
                     s13*(s14**3*(s23 - s24) - &
                        (s23 - s24)*s24*(s23 + s24)**2 + &
                        s14**2*(6*s23**2 - 13*s23*s24 - s24**2) + &
                        s14*(s23**3 - 13*s23**2*s24 - 13*s23*s24**2 + &
                         s24**3)))))))/&
        (s12**2*(-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2))*SUNN*&
     (-1 + SUNN**2))/(6.*gm**4) + &
  ((-((160*gm**2*(8*m**6 - s12**2*s13 - s12*s13**2 - s12**2*s14 - &
                4*s12*s13*s14 - 2*s13**2*s14 - s12*s14**2 - &
                2*s13*s14**2 + s12**2*s23 - s13*s14*s23 - s14**2*s23 + &
                s12*s23**2 + s14*s23**2 + s12**2*s24 - s13**2*s24 - &
                s13*s14*s24 + 4*s12*s23*s24 + s13*s23*s24 + &
                s14*s23*s24 + 2*s23**2*s24 + s12*s24**2 + s13*s24**2 + &
                2*s23*s24**2 - 4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                m**2*(2*s12**2 - s13**2 + 14*s13*s14 - s14**2 + &
                   4*s12*(s13 + s14) - 6*s13*s23 + 6*s14*s23 - &
                   3*s23**2 + 6*s13*s24 - 6*s14*s24 + 2*s23*s24 - &
                   3*s24**2) + &
                2*gm**2*(8*m**4 - &
                   (s12 + s23 + s24)*(s12 + s13 + s14 + s23 + s24))))/&
            ((m**2 - s13)*(m**2 - s14)) + &
           (32*(4*gm**2*m**2 - (-2*m**2 + s12 + s13 + s23)**2)*&
              (gm**4*(54*m**4 + &
                   m**2*(-4*s12 + s13 - 2*s14 + s23 - 2*s24) - &
                   (s12 + s13 + s23)*(s12 + s13 + s14 + s23 + s24)) + &
                gm**2*(-100*m**6 + &
                   m**2*(7*s12**2 + 6*s12*(s13 + s23) - &
                      (s13 + s23)**2) + &
                   4*m**4*(2*s12 - 3*s13 - s14 - 3*s23 - s24) + &
                   (s12 + s13 + s23)**2*&
                    (s12 + 4*s13 + s14 + 4*s23 + s24)) - &
                2*(-2*m**2 + s12 + s13 + s23)**2*&
                 (2*m**4 - (s12 + s13 + s23)*&
                    (s12 + s13 + s14 + s23 + s24) - &
                   m**2*(2*s12 + s13 + 2*s14 + s23 + 2*s24))))/&
            ((-m**2 + s13)*(gm**2 - m**2 + s23)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)**2) - &
           (160*gm**2*((2*m**2 - s12 - s13 - s23)*&
                 (2*m**4 + s13*(s12 + s13 + s14) - &
                   m**2*(s12 + 5*s13 + s14 - 2*s24)) + &
                gm**2*(m**4 + s13*s14 + &
                   m**2*(2*s12 - 5*s13 - s14 + 2*s23 + 2*s24))))/&
            (m**2 - s13)**2 + &
           (32*(-2*(-2*m**2 + s12 + s13 + s23)**2 + &
                gm**2*(18*m**2 - 5*(s12 + s13 + s23)))*&
              (-((2*m**2 - s12 - s13 - s23)*&
                   (2*m**4 + s13*(s12 + s13 + s14) - &
                     m**2*(s12 + 5*s13 + s14 - 2*s24))) + &
                2*gm**2*(7*m**4 + s13*s14 + &
                   m**2*(2*s12 + s13 - s14 + 2*s23 + 2*s24))))/&
            ((m**2 - s13)**2*(gm**2 - 2*m**2 + s12 + s13 + s23)) + &
           (160*gm**2*(gm**4*(10*m**2 - s12 - s13 - s14 - s23 - s24) - &
                (2*m**2 - s12 - s14 - s24)*&
                 (2*m**4 + s24*(s12 + s23 + s24) - &
                   m**2*(s12 + 2*s13 + s23 + s24)) + &
                gm**2*(-17*m**4 + s12**2 + s13*s14 + s14*s23 + &
                   s13*s24 + 2*s14*s24 + 2*s24**2 + &
                   m**2*(2*s14 - s23 + s24) + &
                   s12*(s13 + s14 + s23 + 3*s24))))/&
            (gm**2 - m**2 + s24)**2 - &
           (32*(-2*(-2*m**2 + s12 + s14 + s24)**2 + &
                gm**2*(18*m**2 - 5*(s12 + s14 + s24)))*&
              (2*gm**4*(2*m**2 + s12 + s13 + s14 + s23 + s24) - &
                (2*m**2 - s12 - s14 - s24)*&
                 (2*m**4 + s24*(s12 + s23 + s24) - &
                   m**2*(s12 + 2*s13 + s23 + s24)) + &
                gm**2*(-2*m**4 + s12**2 + s13*s14 + s14*s23 + s13*s24 + &
                   2*s14*s24 + 3*s23*s24 + 2*s24**2 - &
                   2*m**2*(3*s12 + 3*s13 + 2*s14 + 2*s23 + s24) + &
                   s12*(s13 + s14 + s23 + 3*s24))))/&
            ((gm**2 - m**2 + s24)**2*(gm**2 - 2*m**2 + s12 + s14 + s24)) &
- (32*(4*gm**2*m**2 - (-2*m**2 + s12 + s14 + s24)**2)*&
              (gm**4*(54*m**4 + &
                   m**2*(-4*s12 - 2*s13 + s14 - 2*s23 + s24) - &
                   (s12 + s14 + s24)*(s12 + s13 + s14 + s23 + s24)) - &
                2*(-2*m**2 + s12 + s14 + s24)**2*&
                 (2*m**4 - (s12 + s14 + s24)*&
                    (s12 + s13 + s14 + s23 + s24) - &
                   m**2*(2*s12 + 2*s13 + s14 + 2*s23 + s24)) + &
                gm**2*(-100*m**6 + &
                   4*m**4*(2*s12 - s13 - 3*s14 - s23 - 3*s24) + &
                   (s12 + s14 + s24)**2*&
                    (s12 + s13 + 4*s14 + s23 + 4*s24) + &
                   m**2*(7*s12**2 + 6*s12*(s14 + s24) - (s14 + s24)**2))&
))/((m**2 - s14)*(gm**2 - m**2 + s24)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)**2) + &
           (160*gm**2*(8*m**6 + s12**2*s13 + s12*s13**2 + s12**2*s14 + &
                4*s12*s13*s14 + 2*s13**2*s14 + s12*s14**2 + &
                2*s13*s14**2 - s12**2*s23 + s13*s14*s23 + s14**2*s23 - &
                s12*s23**2 - s14*s23**2 - s12**2*s24 + s13**2*s24 + &
                s13*s14*s24 - 4*s12*s23*s24 - s13*s23*s24 - &
                s14*s23*s24 - 2*s23**2*s24 - s12*s24**2 - s13*s24**2 - &
                2*s23*s24**2 + &
                6*gm**4*(2*m**2 + s12 + s13 + s14 + s23 + s24) - &
                4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                m**2*(2*s12**2 + s13**2 + s14**2 - 2*s14*s23 + &
                   3*s23**2 + 2*s14*s24 + 6*s23*s24 + 3*s24**2 - &
                   2*s13*(3*s14 - s23 + s24) + 4*s12*(s23 + s24)) - &
                2*gm**2*(3*s12**2 + 2*s13**2 + 4*s13*s14 + 2*s14**2 + &
                   3*s13*s23 + 3*s14*s23 + s23**2 + &
                   2*m**2*(s13 + s14 - s23 - s24) + 3*s13*s24 + &
                   3*s14*s24 + 2*s23*s24 + s24**2 + &
                   s12*(5*s13 + 5*s14 + 4*(s23 + s24)))))/&
            ((gm**2 - m**2 + s23)*(gm**2 - m**2 + s24)) + &
           (16*(4*gm**2*m**2 - (-2*m**2 + s12 + s13 + s23)**2)*&
              (gm**4*(13*m**4 - s13*s14 + &
                   m**2*(-2*s12 + 19*s13 + s14 - 2*s23 - 2*s24)) + &
                2*(-2*m**2 + s12 + s13 + s23)**2*&
                 (3*m**4 + s13*s14 + &
                   m**2*(2*s12 - 3*s13 - s14 + 2*s23 + 2*s24)) + &
                gm**2*(-52*m**6 - &
                   s13*(3*s12 + 3*s13 - s14)*(s12 + s13 + s23) - &
                   2*m**4*(12*s12 + 16*s13 - s14 + 5*s23 + 2*s24) + &
                   m**2*(11*s12**2 + 33*s13**2 + &
                      s23*(-s14 + 8*s23 + 2*s24) + &
                      s12*(44*s13 - s14 + 19*s23 + 2*s24) + &
                      s13*(-3*s14 + 27*s23 + 2*s24)))))/&
            ((m**2 - s13)**2*(gm**2 - 2*m**2 + s12 + s13 + s23)**2) - &
           (32*(-2*(2*m**2 - s12 - s13 - s23)*(s14 - s23)*(s13 - s24)*&
                 (-2*m**2 + s12 + s14 + s24) + &
                gm**4*(78*m**4 - 3*s12**2 - 8*s13*s14 + 2*s13*s23 - &
                   3*s14*s23 + 2*s23**2 + &
                   m**2*(12*s12 + 13*s13 - 7*s14 + 17*s23 - 3*s24) - &
                   3*s13*s24 + 2*s14*s24 + 4*s23*s24 + 2*s24**2 - &
                   s12*(3*s13 + 3*s14 + s23 + s24)) + &
                gm**2*(8*m**6 + 3*s12**3 + 3*s13**2*s14 - &
                   2*s13*s14**2 + s13**2*s23 + 6*s13*s14*s23 - &
                   3*s14**2*s23 + s13*s23**2 + 6*s14*s23**2 + &
                   2*s13**2*s24 - 4*s13*s14*s24 + s14**2*s24 + &
                   6*s13*s23*s24 - 4*s14*s23*s24 + 7*s23**2*s24 + &
                   s13*s24**2 + s14*s24**2 + 2*s23*s24**2 + &
                   s12**2*(5*s13 + 9*s23 + 4*s24) + &
                   4*m**4*(s12 - 3*s13 - 8*s14 + 9*s23 + 4*s24) - &
                   2*m**2*(5*s12**2 + 2*s13**2 - 3*s14**2 - &
                      2*s14*s23 + 10*s23**2 + 4*s14*s24 + 4*s23*s24 + &
                      5*s24**2 - 2*s13*(6*s14 - 7*s23 + s24) + &
                      2*s12*(s13 - 4*s14 + 9*s23 + 4*s24)) + &
                   s12*(2*s13**2 - 3*s14**2 + 6*s14*s23 + 6*s23**2 - &
                      s14*s24 + 9*s23*s24 + s24**2 + &
                      s13*(s14 + 9*s23 + 6*s24)))))/&
            ((m**2 - s14)*(gm**2 - m**2 + s24)) - &
           (32*(-2*(2*m**2 - s12 - s13 - s23)*(s14 - s23)*(s13 - s24)*&
                 (-2*m**2 + s12 + s14 + s24) + &
                gm**4*(78*m**4 - 3*s12**2 - 8*s13*s14 + 2*s13*s23 - &
                   3*s14*s23 + 2*s23**2 - 3*s13*s24 + 2*s14*s24 + &
                   4*s23*s24 + 2*s24**2 - &
                   s12*(3*s13 + 3*s14 + s23 + s24) + &
                   m**2*(12*s12 - 7*s13 + 13*s14 - 3*s23 + 17*s24)) + &
                gm**2*(8*m**6 + 3*s12**3 - 2*s13**2*s14 + &
                   3*s13*s14**2 + s13**2*s23 - 4*s13*s14*s23 + &
                   2*s14**2*s23 + s13*s23**2 + s14*s23**2 - &
                   3*s13**2*s24 + 6*s13*s14*s24 + s14**2*s24 - &
                   4*s13*s23*s24 + 6*s14*s23*s24 + 2*s23**2*s24 + &
                   6*s13*s24**2 + s14*s24**2 + 7*s23*s24**2 + &
                   4*m**4*(s12 - 8*s13 - 3*s14 + 4*s23 + 9*s24) + &
                   s12**2*(5*s14 + 4*s23 + 9*s24) + &
                   s12*(-3*s13**2 + 2*s14**2 + 6*s14*s23 + s23**2 + &
                      9*s14*s24 + 9*s23*s24 + 6*s24**2 + &
                      s13*(s14 - s23 + 6*s24)) - &
                   2*m**2*(5*s12**2 - 3*s13**2 + 2*s14**2 - 2*s14*s23 + &
                      5*s23**2 + 14*s14*s24 + 4*s23*s24 + 10*s24**2 - &
                      2*s13*(6*s14 - 2*s23 + s24) + &
                      2*s12*(-4*s13 + s14 + 4*s23 + 9*s24)))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s23)) - &
           (20*gm**2*((2*m**2 - s12 - s13 - s14)*&
                 (16*m**6 + 2*s12**3 + 4*s13**2*s14 + 6*s13*s14**2 + &
                   2*s14**3 + 3*s13*s14*s23 + 4*s14**2*s23 - &
                   s14*s23**2 + 3*s13**2*s24 + 8*s13*s14*s24 + &
                   6*s14**2*s24 - s13*s23*s24 + 2*s14*s23*s24 - &
                   4*s23**2*s24 + 4*s14*s24**2 - 4*s23*s24**2 + &
                   s12**2*(5*s13 + 8*s14 + s23 + 2*s24) - &
                   2*m**4*(10*s12 + 7*s13 + 5*s14 + 7*s23 + 5*s24) + &
                   m**2*(2*s12**2 + 5*s13**2 - 2*s14**2 - 5*s14*s23 + &
                      5*s23**2 + s12*(4*s13 - 6*s14 + 6*s23) + &
                      s13*(-7*s14 + 8*s23 - 3*s24) - 8*s14*s24 + &
                      7*s23*s24) + &
                   s12*(3*s13**2 + 8*s14**2 + 5*s14*(s23 + 2*s24) - &
                      s23*(s23 + 5*s24) + s13*(13*s14 + 2*s23 + 5*s24))&
) + 2*gm**2*(12*m**6 + 5*s12**3 + 3*s13**2*s14 + 6*s13*s14**2 + &
                   3*s14**3 + 2*s13**2*s23 + 6*s13*s14*s23 + &
                   5*s14**2*s23 + 2*s13*s23**2 + 2*s14*s23**2 + &
                   5*s13**2*s24 + 11*s13*s14*s24 + 7*s14**2*s24 + &
                   6*s13*s23*s24 + 6*s14*s23*s24 + 4*s13*s24**2 + &
                   4*s14*s24**2 - &
                   m**4*(14*s12 + 21*s13 + 15*s14 + 7*s23 + 5*s24) + &
                   s12**2*(10*s13 + 14*s14 + 7*s23 + 9*s24) + &
                   s12*(5*s13**2 + 17*s13*s14 + 12*s14**2 + &
                      9*s13*s23 + 12*s14*s23 + 2*s23**2 + 14*s13*s24 + &
                      17*s14*s24 + 6*s23*s24 + 4*s24**2) - &
                   m**2*(6*s12**2 - 8*s13**2 - 5*s13*s14 + s14**2 + &
                      6*s14*s23 + 4*s23**2 + 7*s13*s24 + 11*s14*s24 + &
                      12*s23*s24 + 8*s24**2 + &
                      s12*(-2*s13 + 10*s14 + 11*s23 + 17*s24)))))/&
            ((-gm**2 - 2*m**2 + s12 + s13 + s14)*(gm**2 - m**2 + s23)*&
              (gm**2 - m**2 + s24)) + &
           (16*(4*gm**2*m**2 - (-2*m**2 + s12 + s14 + s24)**2)*&
              (gm**6*(38*m**2 - s12 - s13 - s14 - s23 - s24) + &
                2*(-2*m**2 + s12 + s14 + s24)**2*&
                 (11*m**4 + s23*s24 - &
                   m**2*(2*s12 + 2*s13 + 2*s14 + s23 + 3*s24)) + &
                gm**4*(-27*m**4 + s12**2 + s13*s14 + 4*s14**2 + &
                   s14*s23 + s12*(s13 + 5*s14 + s23 - s24) + s13*s24 + &
                   2*s14*s24 - 2*s24**2 + &
                   m**2*(8*s12 - 6*s14 - s23 + 39*s24)) + &
                gm**2*(-100*m**6 + &
                   2*m**4*(32*s12 + 6*s13 + 39*s14 + 5*s23 + 24*s24) + &
                   (s12 + s14 + s24)*&
                    (2*s12**2 + 2*s14**2 + 2*s14*s23 + 4*s14*s24 + &
                      3*s23*s24 - s24**2 + 2*s13*(s14 + s24) + &
                      s12*(2*s13 + 4*s14 + 2*s23 + s24)) - &
                   m**2*(25*s12**2 + 28*s14**2 + 9*s14*s23 + &
                      41*s14*s24 + 11*s23*s24 - s24**2 + &
                      10*s13*(s14 + s24) + &
                      s12*(10*s13 + 53*s14 + 9*s23 + 24*s24)))))/&
            ((gm**2 - m**2 + s24)**2*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)**2) - &
           (2*(2*gm**6*(2*m**4 + s12*s13 - m**2*(3*s12 + 2*s23))*&
                 (m**2 - s24) + &
                gm**2*(-2*m**2 + s12 + s23 + s24)**2*&
                 (34*m**6 - m**4*&
                    (15*s12 + 47*s13 + 11*s14 + 9*s23 - 15*s24) - &
                   s13*(4*s12**2 + 3*s13**2 + 3*s13*s14 + 3*s13*s23 + &
                      6*s14*s23 + &
                      s12*(7*s13 + 6*s14 + 4*s23 - 2*s24) - s13*s24 + &
                      2*s14*s24) + &
                   2*m**2*(10*s13**2 + 7*s13*s14 + 12*s13*s23 + &
                      3*s14*s23 - 2*s23**2 + &
                      s12*(17*s13 + 3*s14 - 2*s23 - 11*s24) - &
                      2*s13*s24 + s14*s24 - 10*s23*s24 - 2*s24**2)) + &
                (-2*m**2 + s12 + s23 + s24)**3*&
                 (6*m**6 + m**4*&
                    (-9*s12 + 7*s13 + s14 - 8*s23 - 2*s24) + &
                   s13*(-s12**2 - s12*(s13 + s23 - s24) + &
                      (s13 + s14)*s24) + &
                   m**2*(3*s12**2 - s13**2 + 2*s23**2 + &
                      s12*(2*s13 + 5*s23 - s24) - s14*s24 + 2*s24**2 - &
                      s13*(s14 + 7*s24))) - &
                gm**4*(2*m**2 - s12 - s23 - s24)*&
                 (16*m**6 + m**4*&
                    (-42*s12 + 37*s13 + 7*s14 - 33*s23 - 27*s24) - &
                   s13*(s12**2 - 3*s14*s23 - s13*s24 - 4*s14*s24 + &
                      s12*(s13 - 3*s14 + s23 + 7*s24)) + &
                   m**2*(9*s12**2 - s13**2 - 3*s14*s23 + 8*s23**2 - &
                      4*s14*s24 + 28*s23*s24 + 8*s24**2 - &
                      s13*(7*s14 + 15*s23 + 22*s24) + &
                      s12*(-5*s13 - 3*s14 + 17*s23 + 35*s24)))))/&
            ((m**2 - s13)**2*(-gm**2 - 2*m**2 + s12 + s23 + s24)**2) - &
           (2*(2*gm**6*(m**2 - s14)*&
                 (4*m**4 + s13**2 + 2*s13*s14 + s14**2 + &
                   s12*(s13 + s14) + s13*s23 + 2*s13*s24 + s14*s24 - &
                   m**2*(2*s12 + 3*s13 + 5*s14 + s23 + 3*s24)) + &
                (-2*m**2 + s12 + s13 + s14)**3*&
                 (8*m**6 + 2*s12**3 + 2*s13*s14**2 + 2*s14**3 + &
                   s13*s14*s23 + s14*s23**2 + s13**2*s24 + &
                   4*s13*s14*s24 + 2*s14**2*s24 + s13*s23*s24 + &
                   2*s13*s24**2 - &
                   12*m**4*(s12 + s13 + s14 + s23 + s24) + &
                   s12**2*(3*s13 + 4*s14 + 3*s23 + 4*s24) + &
                   m**2*(3*s13**2 + 11*s13*s14 - 2*s14**2 + &
                      4*s13*s23 + 7*s14*s23 - s23**2 + &
                      s12*(6*s13 + 4*s14 - 2*s24) + 3*s13*s24 + &
                      2*s14*s24 - s23*s24 - 2*s24**2) + &
                   s12*(s13**2 + 3*s13*s14 + 4*s14**2 + 2*s13*s23 + &
                      3*s14*s23 + s23**2 + 5*s13*s24 + 4*s14*s24 + &
                      3*s23*s24 + 2*s24**2)) - &
                gm**2*(-2*m**2 + s12 + s13 + s14)**2*&
                 (32*m**6 + 4*s12**3 + 14*s13**2*s14 + 20*s13*s14**2 + &
                   6*s14**3 + 10*s13*s14*s23 + 12*s14**2*s23 - &
                   4*s14*s23**2 + 8*s13**2*s24 + 18*s13*s14*s24 + &
                   12*s14**2*s24 + 2*s13*s23*s24 + 3*s14*s23*s24 - &
                   6*s23**2*s24 + s13*s24**2 + 6*s14*s24**2 - &
                   6*s23*s24**2 - &
                   m**4*(38*s12 + 27*s13 + 9*s14 + 19*s23 + 9*s24) + &
                   s12**2*(12*s13 + 5*(4*s14 + s24)) + &
                   m**2*(3*s12**2 + 10*s13**2 - 10*s14**2 - &
                      21*s14*s23 + 10*s23**2 + &
                      s12*(s13 - 25*s14 + 9*s23 - 7*s24) - &
                      19*s14*s24 + 7*s23*s24 - s24**2 - &
                      4*s13*(9*s14 - 3*s23 + 4*s24)) + &
                   s12*(8*s13**2 + 22*s14**2 + 12*s14*s23 - 4*s23**2 + &
                      23*s14*s24 - 9*s23*s24 + s24**2 + &
                      s13*(38*s14 + 4*s23 + 13*s24))) - &
                gm**4*(2*m**2 - s12 - s13 - s14)*&
                 (40*m**6 + 17*s12**3 + 10*s13**2*s14 + 22*s13*s14**2 + &
                   12*s14**3 + 6*s13**2*s23 + 20*s13*s14*s23 + &
                   21*s14**2*s23 + 6*s13*s23**2 + 7*s14*s23**2 + &
                   16*s13**2*s24 + 33*s13*s14*s24 + 24*s14**2*s24 + &
                   19*s13*s23*s24 + 18*s14*s23*s24 + 14*s13*s24**2 + &
                   12*s14*s24**2 - &
                   2*m**4*(20*s12 + 33*s13 + 27*s14 + 13*s23 + &
                      15*s24) + &
                   s12**2*(33*s13 + 52*s14 + 24*s23 + 31*s24) + &
                   s12*(16*s13**2 + 61*s13*s14 + 47*s14**2 + &
                      29*s13*s23 + 45*s14*s23 + 7*s23**2 + &
                      47*s13*s24 + 61*s14*s24 + 21*s23*s24 + 14*s24**2) &
- m**2*(24*s12**2 - 26*s13**2 - 15*s13*s14 + 5*s14**2 - 3*s13*s23 + &
                      24*s14*s23 + 13*s23**2 + 14*s13*s24 + &
                      29*s14*s24 + 37*s23*s24 + 26*s24**2 + &
                      s12*(-5*s13 + 47*s14 + 39*s23 + 59*s24)))))/&
            ((-gm**2 - 2*m**2 + s12 + s13 + s14)**2*(gm**2 - m**2 + s23)*&
              (gm**2 - m**2 + s24)) - &
           (40*gm**2*(2*gm**4*&
                 (21*m**4 + s12**2 + s13**2 + 3*s13*s14 + s14**2 + &
                   s13*s23 + s14*s23 + s13*s24 + s14*s24 + &
                   s12*(2*s13 + 2*s14 + s23 + s24) - &
                   m**2*(12*s12 + 13*s13 + 13*s14 + 2*s23 + 2*s24)) - &
                (2*m**2 - s12 - s13 - s14)*&
                 (30*m**6 - m**4*&
                    (23*s12 + 23*s13 + 19*s14 + 6*s23 + 14*s24) - &
                   s24*(2*s12**2 + s13*s23 + 3*s14*s23 + 2*s14*s24 + &
                      2*s23*s24 + 2*s24**2 + &
                      s12*(2*s14 + 3*s23 + 4*s24)) + &
                   m**2*(4*s12**2 + 2*s13**2 + 2*s14**2 + 3*s14*s23 + &
                      5*s14*s24 + 8*s23*s24 + 6*s24**2 + &
                      s13*(8*s14 + s23 + 7*s24) + &
                      s12*(8*s13 + 6*s14 + 3*s23 + 11*s24))) - &
                gm**2*(48*m**6 + 3*s12**3 - &
                   2*m**4*(4*s12 + 5*s13 + 9*s14 - 4*s23) + &
                   s12**2*(7*s13 + 7*s14 + 3*s23 + 7*s24) + &
                   s12*(5*s13**2 + 5*s14**2 + 4*s24**2 + &
                      6*s14*(s23 + 2*s24) + 4*s13*(3*s14 + s23 + 3*s24)&
) + (s13 + s14)*(s13**2 + s14**2 + 3*s14*s23 + 5*s14*s24 + 4*s24**2 + &
                      s13*(4*s14 + s23 + 3*s24)) - &
                   2*m**2*(7*s12**2 + 5*s13**2 + 3*s14**2 + 5*s14*s23 + &
                      5*s14*s24 + 4*s24**2 + &
                      s12*(11*s13 + 10*s14 + 5*s23 + 8*s24) + &
                      s13*(8*s14 + 3*(s23 + s24))))))/&
            ((-gm**2 - 2*m**2 + s12 + s13 + s14)*(gm**2 - m**2 + s24)**2) &
- (20*gm**2*(12*gm**4*(2*m**2 - s12 - s13 - s14)*&
                 (2*m**2 + s12 + s13 + s14 + s23 + s24) + &
                (2*m**2 - s12 - s13 - s14)*&
                 (24*m**6 + 2*s12**3 + 2*s13**3 + 10*s13**2*s14 + &
                   10*s13*s14**2 + 2*s14**3 + 2*s13**2*s23 + &
                   6*s13*s14*s23 + 4*s14**2*s23 - 3*s14*s23**2 + &
                   4*s13**2*s24 + 6*s13*s14*s24 + 2*s14**2*s24 - &
                   s13*s23*s24 - 3*s14*s23*s24 - 4*s23**2*s24 - &
                   s13*s24**2 - 4*s23*s24**2 + &
                   s12**2*(8*s13 + 8*s14 - s23 + s24) - &
                   2*m**4*(14*s12 + 11*s13 + 9*s14 + 7*s23 + 5*s24) + &
                   s12*(8*s13**2 + 20*s13*s14 + 8*s14**2 + &
                      3*s13*s23 + 3*s14*s23 - 3*s23**2 + 5*s13*s24 + &
                      5*s14*s24 - 8*s23*s24 - s24**2) + &
                   m**2*(4*s12**2 + 2*s13**2 - 12*s13*s14 + 2*s14**2 + &
                      3*s13*s23 - 5*s14*s23 + 7*s23**2 - 7*s13*s24 + &
                      s14*s24 + 12*s23*s24 + 5*s24**2 + &
                      4*s12*(2*s23 + s24))) + &
                2*gm**2*(12*m**6 + 8*s12**3 - &
                   2*m**4*(s12 + 4*s13 + 6*s14 - 10*s23 - 8*s24) + &
                   s12**2*(23*s13 + 23*s14 + 10*(s23 + s24)) + &
                   s12*(21*s13**2 + 21*s14**2 + 2*(s23 + s24)**2 + &
                      s13*(44*s14 + 19*s23 + 18*s24) + &
                      s14*(20*s23 + 19*s24)) - &
                   m**2*(18*s12**2 + 10*s13**2 + 8*s14**2 + &
                      30*s14*s23 + 4*s23**2 + 24*s14*s24 + 8*s23*s24 + &
                      4*s24**2 + s13*(26*s14 + 26*s23 + 24*s24) + &
                      s12*(31*s13 + 29*s14 + 31*s23 + 29*s24)) + &
                   2*(s13 + s14)*&
                    (3*s13**2 + 3*s14**2 + (s23 + s24)**2 + &
                      s14*(5*s23 + 4*s24) + s13*(7*s14 + 4*(s23 + s24)))&
)))/((-gm**2 - 2*m**2 + s12 + s13 + s14)*(gm**2 - m**2 + s23)*&
              (gm**2 - m**2 + s24)) - &
           (20*gm**2*((2*m**2 - s12 - s23 - s24)*&
                 (24*m**6 + 2*s12**3 - 4*s13**2*s14 - 4*s13*s14**2 - &
                   s13*s14*s23 - s14**2*s23 + 2*s13*s23**2 + &
                   4*s14*s23**2 + 2*s23**3 - 3*s13**2*s24 - &
                   3*s13*s14*s24 + 6*s13*s23*s24 + 6*s14*s23*s24 + &
                   10*s23**2*s24 + 4*s13*s24**2 + 2*s14*s24**2 + &
                   10*s23*s24**2 + 2*s24**3 - &
                   2*m**4*(14*s12 + 7*s13 + 5*s14 + 11*s23 + 9*s24) + &
                   s12**2*(-s13 + s14 + 8*(s23 + s24)) + &
                   m**2*(4*s12**2 - s13**2 - 3*s14**2 + &
                      4*s12*(2*s13 + s14) + 9*s14*s23 - 6*s23**2 - &
                      15*s14*s24 + 4*s23*s24 - 6*s24**2 + &
                      s13*(28*s14 - 13*s23 + 11*s24)) + &
                   s12*(-3*s13**2 - s14**2 + 8*s23**2 + 20*s23*s24 + &
                      8*s24**2 + 5*s14*(s23 + s24) + &
                      s13*(-8*s14 + 3*(s23 + s24)))) + &
                2*gm**2*(36*m**6 + 2*s12**3 - &
                   2*m**4*(9*s12 - s13 - s14 + 9*s23 + 9*s24) + &
                   (s23 + s24)*&
                    (2*s13*s23 + 3*s14*s23 + 2*s23**2 + 3*s13*s24 + &
                      2*s14*s24 + 6*s23*s24 + 2*s24**2) + &
                   s12**2*(2*s13 + 2*s14 + 7*(s23 + s24)) + &
                   s12*(7*s23**2 + 16*s23*s24 + 7*s24**2 + &
                      5*s13*(s23 + s24) + 5*s14*(s23 + s24)) - &
                   m**2*(4*s12**2 + 5*s13*s23 + 7*s14*s23 + 7*s23**2 + &
                      7*s13*s24 + 5*s14*s24 + 6*s23*s24 + 7*s24**2 + &
                      2*s12*(3*s13 + 3*s14 + 5*(s23 + s24))))))/&
            ((m**2 - s13)*(m**2 - s14)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (20*gm**2*((2*m**2 - s12 - s23 - s24)*&
                 (24*m**6 + 2*s12**3 - 4*s13**2*s14 - 4*s13*s14**2 - &
                   3*s13*s14*s23 - 3*s14**2*s23 + 2*s13*s23**2 + &
                   4*s14*s23**2 + 2*s23**3 - s13**2*s24 - &
                   s13*s14*s24 + 6*s13*s23*s24 + 6*s14*s23*s24 + &
                   10*s23**2*s24 + 4*s13*s24**2 + 2*s14*s24**2 + &
                   10*s23*s24**2 + 2*s24**3 - &
                   2*m**4*(14*s12 + 5*s13 + 7*s14 + 9*s23 + 11*s24) + &
                   s12**2*(s13 - s14 + 8*(s23 + s24)) + &
                   m**2*(4*s12**2 - 3*s13**2 - s14**2 + &
                      4*s12*(s13 + 2*s14) + 11*s14*s23 - 6*s23**2 - &
                      13*s14*s24 + 4*s23*s24 - 6*s24**2 + &
                      s13*(28*s14 - 15*s23 + 9*s24)) + &
                   s12*(-s13**2 - 3*s14**2 + 8*s23**2 + 20*s23*s24 + &
                      8*s24**2 + 3*s14*(s23 + s24) + &
                      s13*(-8*s14 + 5*(s23 + s24)))) + &
                2*gm**2*(36*m**6 + 2*s12**3 - &
                   2*m**4*(9*s12 - s13 - s14 + 9*s23 + 9*s24) + &
                   (s23 + s24)*&
                    (2*s13*s23 + 3*s14*s23 + 2*s23**2 + 3*s13*s24 + &
                      2*s14*s24 + 6*s23*s24 + 2*s24**2) + &
                   s12**2*(2*s13 + 2*s14 + 7*(s23 + s24)) + &
                   s12*(7*s23**2 + 16*s23*s24 + 7*s24**2 + &
                      5*s13*(s23 + s24) + 5*s14*(s23 + s24)) - &
                   m**2*(4*s12**2 + 5*s13*s23 + 7*s14*s23 + 7*s23**2 + &
                      7*s13*s24 + 5*s14*s24 + 6*s23*s24 + 7*s24**2 + &
                      2*s12*(3*s13 + 3*s14 + 5*(s23 + s24))))))/&
            ((m**2 - s13)*(m**2 - s14)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (2*(2*gm**8*(m**2 - s13)*(m**2 - s14) - &
                (-2*m**2 + s12 + s13 + s14)**3*&
                 (18*m**6 - m**4*&
                    (11*s12 + 10*s13 + 12*s14 + s23 + 7*s24) + &
                   s24*(s12**2 + s12*(-s13 + s14 + s24) - &
                      s13*(s23 + s24)) + &
                   m**2*(s12**2 + 2*s13**2 + 2*s14**2 + s13*s23 + &
                      3*s13*s24 + 4*s14*s24 + s23*s24 + s24**2 + &
                      s12*(s13 + 3*s14 + 2*s24))) + &
                gm**2*(-2*m**2 + s12 + s13 + s14)**2*&
                 (42*m**6 + s13**3 + s13**2*s14 + s13*s14**2 + &
                   s14**3 + s13**2*s23 + s13*s14*s23 + &
                   s12**2*(s13 + s14 - 4*s24) + 2*s13**2*s24 + &
                   3*s13*s14*s24 + s14**2*s24 - 2*s13*s23*s24 - &
                   6*s14*s23*s24 + s13*s24**2 - 3*s14*s24**2 - &
                   3*s23*s24**2 - 3*s24**3 - &
                   m**4*(25*s12 + 29*s13 + 17*s14 + 9*s23 + 17*s24) + &
                   s12*(2*s13**2 + 2*s14**2 - 3*s14*s24 - 6*s23*s24 - &
                      7*s24**2 + s13*(2*s14 + s23 + 4*s24)) + &
                   m**2*(2*s12**2 - 3*s13**2 + 8*s13*s14 - 5*s14**2 - &
                      s13*s23 + 5*s14*s23 + 5*s13*s24 + 3*s14*s24 + &
                      14*s23*s24 + 8*s24**2 + &
                      s12*(5*s13 - 3*s14 + 5*s23 + 15*s24))) + &
                gm**4*(2*m**2 - s12 - s13 - s14)*&
                 (82*m**6 + 6*s12**3 + 2*s13**3 + 12*s13**2*s14 + &
                   12*s13*s14**2 + 2*s14**3 + 2*s13**2*s23 + &
                   8*s13*s14*s23 + 6*s14**2*s23 + 4*s13**2*s24 + &
                   12*s13*s14*s24 + 8*s14**2*s24 - s13*s23*s24 + &
                   5*s13*s24**2 + 6*s14*s24**2 - &
                   m**4*(7*s12 + 10*s13 + 28*s14 - 15*s23 + 7*s24) + &
                   s12**2*(14*s13 + 14*s14 + 6*s23 + 13*s24) + &
                   s12*(10*s13**2 + 26*s13*s14 + 10*s14**2 + &
                      8*s13*s23 + 12*s14*s23 + 23*s13*s24 + &
                      21*s14*s24 + 7*s24**2) - &
                   m**2*(29*s12**2 + 22*s13**2 + 36*s13*s14 + &
                      14*s14**2 + 11*s13*s23 + 20*s14*s23 + &
                      5*s13*s24 + 12*s14*s24 - s23*s24 + 11*s24**2 + &
                      s12*(45*s13 + 43*s14 + 20*s23 + 30*s24))) + &
                gm**6*(-160*m**6 + 3*s12**3 + &
                   2*m**4*(82*s12 + 90*s13 + 92*s14 + 7*s23 + 9*s24) + &
                   s12**2*(10*s13 + 10*s14 + 3*(s23 + s24)) + &
                   (s13 + s14)*&
                    (4*s13**2 + s14*(4*s14 + 3*s23 + 4*s24) + &
                      s13*(14*s14 + 4*s23 + 5*s24)) + &
                   s12*(11*s13**2 + s13*(28*s14 + 7*s23 + 6*s24) + &
                      s14*(11*s14 + 6*s23 + 7*s24)) - &
                   m**2*(48*s12**2 + 57*s13**2 + 132*s13*s14 + &
                      59*s14**2 + 15*s13*s23 + 13*s14*s23 + &
                      19*s13*s24 + 17*s14*s24 + &
                      s12*(107*s13 + 107*s14 + 13*(s23 + s24))))))/&
            ((-gm**2 - 2*m**2 + s12 + s13 + s14)**2*&
              (gm**2 - m**2 + s24)**2) - &
           (2*(2*gm**6*(4*m**6 + s12**2*(s23 + s24) - &
                   2*m**4*(s12 - s13 - s14 + s23 + s24) + &
                   (s23 + s24)*(s14*s23 + (s13 + 2*s23)*s24) + &
                   s12*(s23**2 + 4*s23*s24 + s24**2 + &
                      s13*(s23 + s24) + s14*(s23 + s24)) - &
                   m**2*(3*s14*s23 + 3*s23**2 + s14*s24 - 2*s23*s24 + &
                      3*s24**2 + 2*s12*(s13 + s14 + s23 + s24) + &
                      s13*(s23 + 3*s24))) - &
                2*gm**2*(-2*m**2 + s12 + s23 + s24)**2*&
                 (10*m**6 + 2*s12**3 - 3*s13**2*s14 - 3*s13*s14**2 - &
                   s13*s14*s23 - 2*s14**2*s23 + 2*s13*s23**2 + &
                   5*s14*s23**2 + 2*s23**3 - 2*s13**2*s24 - &
                   s13*s14*s24 + 7*s13*s23*s24 + 7*s14*s23*s24 + &
                   12*s23**2*s24 + 5*s13*s24**2 + 2*s14*s24**2 + &
                   12*s23*s24**2 + 2*s24**3 + 9*s12**2*(s23 + s24) + &
                   s12*(-2*s13**2 - 2*s14**2 + 9*s23**2 + &
                      24*s23*s24 + 9*s24**2 + 5*s14*(s23 + s24) + &
                      s13*(-7*s14 + 5*(s23 + s24))) + &
                   m**2*(8*s12**2 - s13**2 - s14**2 + 10*s14*s23 - &
                      5*s23**2 - 12*s14*s24 + 14*s23*s24 - 5*s24**2 + &
                      2*s13*(10*s14 - 6*s23 + 5*s24) + &
                      s12*(7*s13 + 7*s14 + 6*(s23 + s24))) - &
                   m**4*(29*s12 + 3*(5*s13 + 5*s14 + 7*(s23 + s24)))) + &
                (-2*m**2 + s12 + s23 + s24)**3*&
                 (32*m**6 + 2*s12**3 - s13*s14*s23 + s14**2*s23 + &
                   2*s13*s23**2 + 2*s23**3 - &
                   4*m**4*(s12 - 2*(s13 + s14 - s23 - s24)) + &
                   s13**2*s24 - s13*s14*s24 + 2*s13*s23*s24 + &
                   2*s14*s23*s24 + 2*s23**2*s24 + 2*s14*s24**2 + &
                   2*s23*s24**2 + 2*s24**3 + &
                   s12**2*(3*s13 + 3*s14 + 4*(s23 + s24)) + &
                   s12*(s13**2 + s14**2 + 3*s14*(s23 + s24) + &
                      4*(s23**2 + s23*s24 + s24**2) + &
                      s13*(2*s14 + 3*(s23 + s24))) - &
                   m**2*(10*s12**2 + s13**2 + s14**2 + 11*s14*s23 + &
                      2*s23**2 + s14*s24 + 20*s23*s24 + 2*s24**2 + &
                      s13*(-2*s14 + s23 + 11*s24) + &
                      2*s12*(5*s13 + 5*s14 + 7*(s23 + s24)))) - &
                gm**4*(2*m**2 - s12 - s23 - s24)*&
                 (160*m**6 + 8*s12**3 - s13*s14*s23 + s14**2*s23 + &
                   8*s13*s23**2 + 14*s14*s23**2 + 8*s23**3 + &
                   s13**2*s24 - s13*s14*s24 + 22*s13*s23*s24 + &
                   22*s14*s23*s24 + 36*s23**2*s24 + 14*s13*s24**2 + &
                   8*s14*s24**2 + 36*s23*s24**2 + 8*s24**3 + &
                   s12**2*(9*s13 + 9*s14 + 30*(s23 + s24)) - &
                   4*m**4*(17*s12 - 6*(s13 + s14 - 3*(s23 + s24))) + &
                   s12*(s13**2 + s14**2 + 23*s14*(s23 + s24) + &
                      6*(5*s23**2 + 12*s23*s24 + 5*s24**2) + &
                      s13*(2*s14 + 23*(s23 + s24))) - &
                   m**2*(22*s12**2 + s13**2 - 2*s13*s14 + s14**2 + &
                      21*s13*s23 + 47*s14*s23 + 38*s23**2 + &
                      47*s13*s24 + 21*s14*s24 + 28*s23*s24 + &
                      38*s24**2 + s12*(38*s13 + 38*s14 + 54*(s23 + s24))&
))))/((m**2 - s13)*(m**2 - s14)*(-gm**2 - 2*m**2 + s12 + s23 + s24)**2) + &
           (16*(40*gm**6*m**2*(3*m**2 + s12 + s14 + s23 + s24) - &
                2*(s14 - s23)**2*&
                 (8*m**6 + 2*s13**2*s14 + 2*s13*s14**2 + s13*s14*s23 + &
                   s14**2*s23 - s14*s23**2 + &
                   s12**2*(s13 + s14 - s23 - s24) + s13**2*s24 + &
                   s13*s14*s24 - s13*s23*s24 - s14*s23*s24 - &
                   2*s23**2*s24 - s13*s24**2 - 2*s23*s24**2 - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   s12*(s13**2 + 4*s13*s14 + s14**2 - s23**2 - &
                      4*s23*s24 - s24**2) + &
                   m**2*(2*s12**2 + s13**2 + s14**2 - 2*s14*s23 + &
                      3*s23**2 + 2*s14*s24 + 6*s23*s24 + 3*s24**2 - &
                      2*s13*(3*s14 - s23 + s24) + 4*s12*(s23 + s24))) + &
                gm**2*(-6*s13**2*s14**2 - 10*s13*s14**3 - 4*s14**4 - &
                   6*s12**3*(s14 - s23) + 8*s13**2*s14*s23 + &
                   6*s13*s14**2*s23 - 2*s14**3*s23 + &
                   3*s13*s14*s23**2 + 5*s14**2*s23**2 + 4*s13*s23**3 - &
                   3*s14*s23**3 + 4*s23**4 + &
                   8*m**6*(5*s13 - 10*s14 + 6*s23 - 5*s24) - &
                   4*s13**2*s14*s24 - 10*s13*s14**2*s24 - &
                   6*s14**3*s24 + 5*s13**2*s23*s24 + &
                   5*s13*s14*s23*s24 + 2*s14**2*s23*s24 + &
                   5*s13*s23**2*s24 - s14*s23**2*s24 + 2*s23**3*s24 - &
                   2*s13*s14*s24**2 - 2*s14**2*s24**2 + &
                   s13*s23*s24**2 + 2*s14*s23*s24**2 - &
                   2*s23**2*s24**2 + &
                   s12**2*(-10*s13*s14 - 16*s14**2 + 11*s13*s23 + &
                      5*s14*s23 + 11*s23**2 - 8*s14*s24 + 7*s23*s24) - &
                   m**4*(15*s13**2 - 115*s14**2 + 68*s14*s23 + &
                      15*s23**2 + 2*s13*(8*s14 - s23 - 10*s24) + &
                      2*s12*(5*s13 - 45*s14 + 29*s23 - 5*s24) - &
                      86*s14*s24 + 40*s23*s24 + 5*s24**2) + &
                   s12*(-14*s14**3 + s13**2*(-4*s14 + 5*s23) + &
                      s14**2*(s23 - 14*s24) - &
                      2*s13*&
                       (10*s14**2 - 7*s14*s23 - 5*s23**2 + &
                        6*s14*s24 - 6*s23*s24) + &
                      s14*(4*s23**2 + 6*s23*s24 - 2*s24**2) + &
                      s23*(9*s23**2 + 4*s23*s24 + s24**2)) + &
                   m**2*(-8*s14**3 + 14*s14**2*s23 - 35*s14*s23**2 + &
                      21*s23**3 + 8*s14**2*s24 - 29*s14*s23*s24 + &
                      14*s23**2*s24 + 18*s14*s24**2 - 15*s23*s24**2 + &
                      s12*(-5*s13**2 - 11*s14**2 - 22*s14*s23 + &
                        17*s23**2 + 10*s13*(-2*s14 + s23) + &
                        4*s14*s24 - 10*s23*s24 + 5*s24**2) + &
                      s13*(2*s14**2 - 37*s14*s23 + 26*s23**2 - &
                        27*s14*s24 + 15*s23*s24 + 5*s24**2) + &
                      s13**2*(6*s14 - 5*(s23 + s24)) + &
                      s12**2*(-5*s13 - 13*s14 + 5*(s23 + s24)))) + &
                gm**4*(80*m**6 - 15*s12**3 + 10*s13**2*s14 - &
                   4*s13*s14**2 - 14*s14**3 - 2*s13*s14*s23 - &
                   2*s14**2*s23 - 10*s13*s23**2 - 17*s14*s23**2 - &
                   10*s23**3 - 12*s13*s14*s24 - 12*s14**2*s24 - &
                   25*s13*s23*s24 - 15*s14*s23*s24 - 30*s23**2*s24 - &
                   15*s13*s24**2 + 2*s14*s24**2 - 20*s23*s24**2 - &
                   s12**2*(15*s13 + 27*s14 + 40*s23 + 30*s24) + &
                   m**4*(-60*s13 + 52*s14 + 40*s24) - &
                   s12*(26*s14**2 + 34*s14*s23 + 35*s23**2 + &
                      25*s14*s24 + 60*s23*s24 + 15*s24**2 + &
                      s13*(2*s14 + 25*s23 + 30*s24)) - &
                   m**2*(64*s12**2 + 114*s13*s14 - 34*s14**2 + &
                      55*s13*s23 + 51*s14*s23 + 29*s23**2 + &
                      75*s13*s24 + 3*s14*s24 + 28*s23*s24 - s24**2 + &
                      s12*(75*s13 + 75*s14 + 63*(s23 + s24))))))/&
            ((m**2 - s14)*(gm**2 - m**2 + s23)*(gm**2 - m**2 + s24)) + &
           (40*gm**2*(28*m**8 - &
                4*m**6*(7*s12 + 15*s13 + 3*s14 + 5*s23 - s24) + &
                m**4*(7*s12**2 + 28*s13**2 + 16*s13*s14 + 56*s13*s23 + &
                   12*s14*s23 - s23**2 + &
                   2*s12*(34*s13 + 6*s14 + 3*s23 - 9*s24) + &
                   28*s13*s24 + 8*s14*s24 - 22*s23*s24 - 13*s24**2 + &
                   2*gm**2*(6*s12 - 10*s13 - 2*s14 + 5*s23 + 5*s24)) + &
                s13*(2*s12**3 + &
                   s12**2*(4*s13 + 3*s14 + 4*s23 + 2*s24) + &
                   (s23 + s24)*&
                    (2*s13**2 + 2*s13*(s14 + s23) + &
                      s14*(-2*gm**2 + 3*s23 + s24)) + &
                   2*s12*(s13**2 + 3*s14*s23 + s23**2 + 2*s14*s24 + &
                      s23*s24 + gm**2*(-s14 + s24) + &
                      s13*(s14 + 3*s23 + 2*s24))) - &
                m**2*(4*s13**3 + 4*s13**2*s14 + 18*s13**2*s23 + &
                   14*s13*s14*s23 + 13*s13*s23**2 + 3*s14*s23**2 - &
                   2*s23**3 + 14*s13**2*s24 + 10*s13*s14*s24 + &
                   12*s13*s23*s24 + 4*s14*s23*s24 - 10*s23**2*s24 - &
                   s13*s24**2 + s14*s24**2 - 10*s23*s24**2 - 2*s24**3 + &
                   s12**2*(23*s13 + 3*s14 - 2*(s23 + 4*s24)) + &
                   2*gm**2*(2*s12**2 - s14*s23 + 2*s23**2 - &
                      s12*(4*s13 + s14 - 4*s23 - 7*s24) - s14*s24 + &
                      6*s23*s24 + 2*s24**2 - &
                      s13*(2*s14 + 5*(s23 + s24))) + &
                   2*s12*(11*s13**2 + 3*s14*s23 - 2*s23**2 + &
                      2*s14*s24 - 9*s23*s24 - 5*s24**2 + &
                      s13*(7*s14 + 9*(2*s23 + s24))))))/&
            ((m**2 - s13)**2*(-gm**2 - 2*m**2 + s12 + s23 + s24)) + &
           (16*(2*gm**6*(16*m**4 + &
                   3*(s12 + s14 + s23 + s24)*&
                    (s12 + s13 + s14 + s23 + s24) + &
                   m**2*(15*s12 + 9*s13 + 13*s14 + 15*s23 + 15*s24)) - &
                2*(-2*m**2 + s12 + s14 + s24)**2*&
                 (8*m**6 - 2*s13**2*s14 - 2*s13*s14**2 - s13*s14*s23 - &
                   s14**2*s23 + s14*s23**2 - s13**2*s24 - &
                   s13*s14*s24 + s13*s23*s24 + s14*s23*s24 + &
                   2*s23**2*s24 + s13*s24**2 + 2*s23*s24**2 + &
                   s12**2*(-s13 - s14 + s23 + s24) - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   m**2*(2*s12**2 - s13**2 + 14*s13*s14 - s14**2 + &
                      4*s12*(s13 + s14) - 6*s13*s23 + 6*s14*s23 - &
                      3*s23**2 + 6*s13*s24 - 6*s14*s24 + 2*s23*s24 - &
                      3*s24**2) + &
                   s12*(-s13**2 - 4*s13*s14 - s14**2 + s23**2 + &
                      4*s23*s24 + s24**2)) + &
                gm**4*(624*m**6 - 4*s12**3 - 6*s13**2*s14 - &
                   8*s13*s14**2 - 14*s14**3 - 7*s13*s14*s23 - &
                   16*s14**2*s23 - s14*s23**2 - 3*s13**2*s24 - &
                   12*s13*s14*s24 - 42*s14**2*s24 - s13*s23*s24 - &
                   28*s14*s23*s24 + 2*s23**2*s24 - 4*s13*s24**2 - &
                   42*s14*s24**2 - 12*s23*s24**2 - 14*s24**3 - &
                   s12**2*(7*s13 + 22*s14 + 5*s23 + 22*s24) + &
                   2*m**4*(70*s12 + 89*s13 + 111*s14 + 125*s23 + &
                      131*s24) - &
                   s12*(3*s13**2 + 15*s13*s14 + 32*s14**2 + &
                      4*s13*s23 + 21*s14*s23 + s23**2 + 11*s13*s24 + &
                      64*s14*s24 + 17*s23*s24 + 32*s24**2) - &
                   m**2*(52*s12**2 + 13*s13**2 + 17*s13*s14 + &
                      26*s14**2 + 8*s13*s23 - s14*s23 - s23**2 + &
                      29*s13*s24 + 60*s14*s24 - 9*s23*s24 + &
                      34*s24**2 + &
                      2*s12*(9*s13 + 39*s14 + 23*s23 + 43*s24))) + &
                2*gm**2*(136*m**8 - &
                   4*m**6*(41*s12 + 56*s13 - 13*s14 + 44*s23 + 3*s24) + &
                   2*m**4*(27*s12**2 + 5*s13**2 - 35*s14**2 + &
                      45*s14*s23 - 9*s23**2 - 21*s14*s24 + &
                      50*s23*s24 + 7*s24**2 + &
                      2*s12*(28*s13 - 9*s14 + 23*s23 + 16*s24) + &
                      s13*(42*s14 - 9*s23 + 49*s24)) - &
                   (s12 + s14 + s24)*&
                    (2*s12**3 - 2*s14**3 + 4*s14**2*s23 + &
                      3*s14*s23**2 + 15*s14*s23*s24 + 4*s23**2*s24 + &
                      6*s14*s24**2 + 11*s23*s24**2 + 4*s24**3 - &
                      s13**2*(2*s14 + s24) + &
                      s12**2*(s13 + 4*s14 + 5*s23 + 6*s24) + &
                      s13*(-7*s14**2 + s14*s23 - 7*s14*s24 + &
                        3*s23*s24) + &
                      s12*(-s13**2 + 9*s14*s23 + 3*s23**2 + &
                        8*s14*s24 + 14*s23*s24 + 8*s24**2 + &
                        s13*(-4*s14 + 2*s23 + s24))) + &
                   m**2*(s12**3 + &
                      s12**2*(2*s13 + 17*s14 + 8*s23 - 13*s24) + &
                      s12*(-4*s13**2 + 18*s14**2 + 19*s13*s23 + &
                        13*s14*s23 + 16*s23**2 + 3*s13*s24 - &
                        11*s14*s24 + 14*s23*s24 - 24*s24**2) + &
                      (s14 + s24)*&
                       (-4*s13**2 + 2*s14**2 + 5*s14*s23 + 16*s23**2 - &
                         13*s14*s24 + 12*s23*s24 - 10*s24**2 + &
                         s13*(-8*s14 + 19*s23 + s24))))))/&
            ((m**2 - s14)*(gm**2 - m**2 + s24)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)) - &
           (32*(-2*(2*m**2 - s12 - s13 - s23)*(s13 - s24)**2*&
                 (2*m**2 - s12 - s14 - s24) + &
                2*gm**4*(23*m**4 + 2*s12*s13 + 2*s13**2 + s13*s14 + &
                   2*s13*s23 - 5*s12*s24 - 3*s13*s24 - 5*s14*s24 - &
                   5*s23*s24 - 5*s24**2 + &
                   m**2*(11*s12 + 16*s13 + 10*s14 + 11*s23 + s24)) + &
                gm**2*(40*m**6 - 4*s13**3 - s13**2*s14 - 4*s13**2*s23 + &
                   2*s13*s14*s23 + 2*s12**2*(s13 - 3*s24) + &
                   6*s13**2*s24 + s13*s14*s24 + 9*s13*s23*s24 - &
                   6*s14*s23*s24 - 2*s13*s24**2 - 4*s14*s24**2 - &
                   9*s23*s24**2 - 4*s24**3 - &
                   4*m**4*(10*s12 + 5*s13 + 5*s14 + 5*s23 + 9*s24) - &
                   2*s12*(s13**2 - s13*(s14 + s23 + 2*s24) + &
                      s24*(3*s14 + 3*s23 + 5*s24)) + &
                   m**2*(10*s12**2 - 9*s13**2 + 11*s13*s14 - &
                      5*s13*s23 + 10*s14*s23 + 32*s13*s24 + 7*s14*s24 + &
                      23*s23*s24 + 3*s24**2 + &
                      2*s12*(3*s13 + 5*(s14 + s23 + 3*s24))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s24)) + &
           (16*(4*(s13 - s24)**2*(-2*m**2 + s12 + s14 + s24)*&
                 (-2*m**4 - s24*(s12 + s23 + s24) + &
                   m**2*(s12 + 2*s13 + s23 + s24)) + &
                gm**6*(62*m**4 - &
                   2*s13*(s12 + s13 - 2*s14 + s23 + s24) - &
                   2*m**2*(3*s12 - 32*s13 + 3*(s23 + s24))) - &
                gm**4*(102*m**6 + 8*s13**3 + 2*s13**2*s14 + &
                   8*s13**2*s23 + s13*s14*s23 + s12**2*(s13 - 3*s24) + &
                   7*s13**2*s24 - 6*s13*s14*s24 - 6*s13*s23*s24 - &
                   3*s14*s23*s24 - 19*s13*s24**2 - 2*s14*s24**2 - &
                   2*s23*s24**2 - 2*s24**3 - &
                   6*m**4*(s12 - 26*s13 + s23 + 16*s24) + &
                   m**2*(-24*s12*s13 + 3*s13**2 - 23*s13*s14 + &
                      3*s13*s23 + 36*s12*s24 - 58*s13*s24 + &
                      31*s14*s24 + 5*s23*s24 + 25*s24**2) + &
                   s12*(9*s13**2 + s13*(s14 + s23 - 6*s24) - &
                      s24*(3*s14 + 3*s23 + 5*s24))) + &
                gm**2*(-4*s13**3*s14 - 4*s13**2*s14*s23 + &
                   m**6*(80*s13 - 88*s24) - 4*s13**3*s24 - &
                   12*s13**2*s23*s24 + 7*s13*s14*s23*s24 - &
                   7*s13**2*s24**2 + 14*s13*s14*s24**2 + &
                   16*s13*s23*s24**2 - s14*s23*s24**2 + 21*s13*s24**3 - &
                   8*s14*s24**3 - 2*s23*s24**3 - 8*s24**4 - &
                   s12**2*(4*s13**2 - 7*s13*s24 + s24**2) - &
                   s12*(4*s13**3 - 7*s13*s24*(s14 + s23 + 4*s24) + &
                      s24**2*(s14 + s23 + 9*s24) + &
                      s13**2*(4*s14 + 4*s23 + 11*s24)) - &
                   m**4*(3*s13**2 + s12*(42*s13 - 50*s24) + &
                      (-51*s14 + s23 - 79*s24)*s24 + &
                      s13*(47*s14 - 5*s23 + 60*s24)) + &
                   m**2*(24*s13**3 + 2*s13**2*(2*s14 + 8*s23 - 5*s24) + &
                      s12**2*(s13 - 3*s24) + &
                      s12*(19*s13**2 + s13*(s14 + s23 - 22*s24) - &
                        3*s24*(s14 + s23 + 3*s24)) + &
                      s13*(-29*s24*(s23 + s24) + s14*(s23 + 5*s24)) + &
                      s24*(-3*s14*(s23 + 5*s24) + s24*(7*s23 + 5*s24))))&
))/((m**2 - s13)*(gm**2 - m**2 + s24)**2) - &
           (16*(2*(s14 - s23)**2*&
                 (-8*m**6 + 2*s13**2*s14 + 2*s13*s14**2 + &
                   s13*s14*s23 + s14**2*s23 - s14*s23**2 + &
                   s12**2*(s13 + s14 - s23 - s24) + s13**2*s24 + &
                   s13*s14*s24 - s13*s23*s24 - s14*s23*s24 - &
                   2*s23**2*s24 - s13*s24**2 - 2*s23*s24**2 + &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   s12*(s13**2 + 4*s13*s14 + s14**2 - s23**2 - &
                      4*s23*s24 - s24**2) + &
                   m**2*(-2*s12**2 + s13**2 - 14*s13*s14 + s14**2 - &
                      4*s12*(s13 + s14) + 6*s13*s23 - 6*s14*s23 + &
                      3*s23**2 - 6*s13*s24 + 6*s14*s24 - 2*s23*s24 + &
                      3*s24**2)) + &
                gm**4*(320*m**6 - 3*s12**3 + 2*s13**2*s14 + &
                   2*s13*s14**2 - 8*s13*s14*s23 - 8*s14**2*s23 + &
                   2*s13*s23**2 - 5*s14*s23**2 + 2*s23**3 - &
                   8*s13*s14*s24 - 8*s14**2*s24 - s13*s23*s24 - &
                   13*s14*s23*s24 + 4*s23**2*s24 - 3*s13*s24**2 - &
                   8*s14*s24**2 + 2*s23*s24**2 - &
                   s12**2*(3*s13 + 11*s14 + 4*s23 + 6*s24) + &
                   4*m**4*(72*s12 + s13 + 21*s14 + 70*s23 + 76*s24) - &
                   s12*(8*s14**2 + 16*s14*s23 - s23**2 + 19*s14*s24 + &
                      2*s23*s24 + 3*s24**2 + s13*(6*s14 + s23 + 6*s24)&
) + m**2*(36*s12**2 + 8*s14**2 + 17*s14*s23 + 49*s23**2 + 11*s14*s24 + &
                      106*s23*s24 + 57*s24**2 - &
                      s13*(28*s14 + s23 + 11*s24) + &
                      s12*(-11*s13 + 21*s14 + 85*s23 + 93*s24))) + &
                gm**2*(-6*s13**2*s14**2 - 6*s13*s14**3 + &
                   6*s12**3*(s14 - s23) - 2*s13**2*s14*s23 + &
                   s13*s14**2*s23 + 3*s14**3*s23 + 6*s13**2*s23**2 + &
                   4*s13*s14*s23**2 + s14**2*s23**2 - 2*s13*s23**3 + &
                   4*s14*s23**3 - 8*s23**4 - &
                   8*m**6*(5*s13 + 10*s14 - 6*s23 - 5*s24) - &
                   5*s13**2*s14*s24 + 3*s13*s14**2*s24 + 8*s14**3*s24 + &
                   4*s13**2*s23*s24 + 9*s13*s14*s23*s24 + &
                   5*s14**2*s23*s24 - 12*s13*s23**2*s24 + &
                   8*s14*s23**2*s24 - 18*s23**3*s24 + &
                   11*s13*s14*s24**2 + 8*s14**2*s24**2 - &
                   10*s13*s23*s24**2 + 4*s14*s23*s24**2 - &
                   10*s23**2*s24**2 + &
                   m**4*(15*s13**2 - 99*s14**2 + 132*s14*s23 - &
                      s23**2 + 2*s13*(76*s14 - 53*s23 - 10*s24) + &
                      2*s12*(5*s13 - 13*s14 + 29*s23 - 5*s24) - &
                      158*s14*s24 + 144*s23*s24 + 5*s24**2) + &
                   s12**2*(9*s14**2 + s13*(s14 - 2*s23) - &
                      2*s23*(9*s23 + 8*s24) + s14*(9*s23 + 17*s24)) + &
                   m**2*(-5*s14**3 - 13*s14**2*s23 + 64*s14*s23**2 - &
                      54*s23**3 + &
                      s12**2*(5*s13 + 21*s14 - 29*s23 - 5*s24) - &
                      58*s14**2*s24 + 63*s14*s23*s24 - 14*s23**2*s24 - &
                      47*s14*s24**2 + 44*s23*s24**2 + &
                      s13**2*(-13*s14 + 12*s23 + 5*s24) + &
                      s13*(30*s14**2 + 39*s14*s23 - 76*s23**2 + &
                        71*s14*s24 - 75*s23*s24 - 5*s24**2) + &
                      s12*(5*s13**2 + 50*s13*s14 - 27*s14**2 - &
                        56*s13*s23 + 98*s14*s23 - 87*s23**2 - &
                        18*s14*s24 + 8*s23*s24 - 5*s24**2)) + &
                   s12*(3*s14**3 + s13**2*(-5*s14 + 4*s23) + &
                      2*s14**2*(5*s23 + 11*s24) - &
                      2*s23*(10*s23**2 + 16*s23*s24 + 5*s24**2) + &
                      s14*(7*s23**2 + 14*s23*s24 + 11*s24**2) - &
                      2*s13*(4*s14**2 - 3*s14*(s23 + 2*s24) + &
                         s23*(s23 + 6*s24))))))/&
            ((m**2 - s13)*(m**2 - s14)*(gm**2 - m**2 + s23)) + &
           (16*(-2*(-2*m**2 + s12 + s13 + s23)**2*&
                 (8*m**6 - 2*s13**2*s14 - 2*s13*s14**2 - s13*s14*s23 - &
                   s14**2*s23 + s14*s23**2 - s13**2*s24 - &
                   s13*s14*s24 + s13*s23*s24 + s14*s23*s24 + &
                   2*s23**2*s24 + s13*s24**2 + 2*s23*s24**2 + &
                   s12**2*(-s13 - s14 + s23 + s24) - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   m**2*(2*s12**2 - s13**2 + 14*s13*s14 - s14**2 + &
                      4*s12*(s13 + s14) - 6*s13*s23 + 6*s14*s23 - &
                      3*s23**2 + 6*s13*s24 - 6*s14*s24 + 2*s23*s24 - &
                      3*s24**2) + &
                   s12*(-s13**2 - 4*s13*s14 - s14**2 + s23**2 + &
                      4*s23*s24 + s24**2)) + &
                gm**4*(320*m**6 + &
                   4*m**4*(42*s12 + 10*s13 + 92*s14 + 27*s23 + &
                      67*s24) + &
                   m**2*(12*s12**2 + 9*s13**2 + s14**2 + 22*s14*s23 - &
                      63*s23**2 + 102*s14*s24 - 6*s23*s24 + &
                      57*s24**2 + s13*(34*s14 - 54*s23 + 26*s24) + &
                      s12*(11*s13 + 47*s14 - 51*s23 + 69*s24)) - &
                   5*(s12**3 + 2*s12**2*(s13 - s14 + 3*s23 + s24) + &
                      s13**2*(-6*s14 + 4*s23 + s24) + &
                      s13*(-6*s14**2 + 8*s23**2 + 9*s23*s24 + &
                        s24**2 - 5*s14*(s23 + s24)) + &
                      s23*(-3*s14**2 + s14*(s23 + s24) + &
                        4*(s23 + s24)**2) + &
                      s12*(s13**2 - 3*s14**2 + 9*s23**2 + 10*s23*s24 + &
                        s24**2 - s14*(s23 + 2*s24) + &
                        s13*(-8*s14 + 10*s23 + 3*s24)))) + &
                gm**2*(208*m**8 - &
                   8*m**6*(31*s12 + s13 + 48*s14 + s23 + 24*s24) + &
                   2*m**4*(42*s12**2 - 21*s13**2 + 3*s14**2 + &
                      102*s14*s23 + 5*s23**2 - 70*s14*s24 + &
                      62*s23*s24 - 43*s24**2 + &
                      2*s12*(21*s13 + 51*s14 + 25*s23 + 7*s24) + &
                      2*s13*(77*s14 - 11*s23 + 39*s24)) - &
                   m**2*(2*s12**3 + s13**3 + &
                      2*s12**2*(19*s13 + 12*s14 + 5*s23 - 26*s24) + &
                      s13**2*(118*s14 - s23 + 40*s24) + &
                      s23*(19*s14**2 + 4*s14*s23 + 7*s23**2 - &
                        92*s14*s24 - 30*s23*s24 - 77*s24**2) + &
                      s12*(37*s13**2 + 19*s14**2 + 28*s14*s23 + &
                        15*s23**2 + 2*s13*(74*s14 + 21*s23 - 6*s24) - &
                        74*s14*s24 - 88*s23*s24 - 59*s24**2) + &
                      s13*(37*s14**2 + 122*s14*s23 + 5*s23**2 - &
                        56*s14*s24 + 10*s23*s24 - 59*s24**2)) - &
                   (s12 + s13 + s23)*&
                    (2*s12**3 - s12**2*(s13 + 9*s14 - 17*s23 - 9*s24) + &
                      s13**2*(-22*s14 + 8*s23 - 3*s24) + &
                      s13*(-22*s14**2 + 16*s23**2 + 23*s23*s24 + &
                        7*s24**2 - 15*s14*(s23 + s24)) + &
                      s23*(-11*s14**2 + 8*s23**2 + 26*s23*s24 + &
                        18*s24**2 + 7*s14*(s23 + s24)) + &
                      s12*(-3*s13**2 - 11*s14**2 + 23*s23**2 + &
                         40*s23*s24 + 7*s24**2 - 2*s14*(s23 + 2*s24) + &
                         s13*(-36*s14 + 20*s23 + 6*s24))))))/&
            ((m**2 - s13)*(m**2 - s14)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)) + &
           (16*(40*gm**6*m**2*(3*m**2 + s12 + s13 + s23 + s24) - &
                2*(s13 - s24)**2*&
                 (8*m**6 + 2*s13**2*s14 + 2*s13*s14**2 + s13*s14*s23 + &
                   s14**2*s23 - s14*s23**2 + &
                   s12**2*(s13 + s14 - s23 - s24) + s13**2*s24 + &
                   s13*s14*s24 - s13*s23*s24 - s14*s23*s24 - &
                   2*s23**2*s24 - s13*s24**2 - 2*s23*s24**2 - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   s12*(s13**2 + 4*s13*s14 + s14**2 - s23**2 - &
                      4*s23*s24 - s24**2) + &
                   m**2*(2*s12**2 + s13**2 + s14**2 - 2*s14*s23 + &
                      3*s23**2 + 2*s14*s24 + 6*s23*s24 + 3*s24**2 - &
                      2*s13*(3*s14 - s23 + s24) + 4*s12*(s23 + s24))) - &
                gm**4*(304*m**6 + 3*s12**3 - 6*s13**3 - 8*s13**2*s14 - &
                   2*s13*s14**2 - 2*s13**2*s23 - 2*s13*s14*s23 + &
                   4*s13*s23**2 + 3*s14*s23**2 + 8*s13**2*s24 + &
                   8*s13*s14*s24 + 9*s13*s23*s24 + 11*s14*s23*s24 - &
                   2*s23**2*s24 + 5*s13*s24**2 + 8*s14*s24**2 + &
                   6*s23*s24**2 + 8*s24**3 + &
                   4*m**4*(7*s13 - 21*s14 + 26*s23 + 12*s24) + &
                   s12**2*(s13 + 3*s14 + 6*s23 + 14*s24) + &
                   s12*(-8*s13**2 + 6*s14*s23 + 3*s23**2 + &
                      11*s14*s24 + 12*s23*s24 + 19*s24**2 + &
                      s13*(-4*s14 + 5*s23 + 16*s24)) - &
                   m**2*(8*s12**2 - 22*s13**2 + 9*s14*s23 - &
                      11*s23**2 - 11*s14*s24 + 20*s23*s24 - 9*s24**2 + &
                      s12*(29*s13 + 9*s14 - 3*s23 + 9*s24) + &
                      s13*(-2*s14 + s23 + 89*s24))) - &
                gm**2*(4*s13**4 + 2*s13**3*s14 - 2*s13**2*s14**2 + &
                   3*s13**2*s14*s23 + 3*s13*s14**2*s23 - &
                   4*s13**2*s23**2 + 3*s13*s14*s23**2 + &
                   8*m**6*(10*s13 - 5*s14 + 5*s23 - 6*s24) + &
                   6*s12**3*(s13 - s24) - 5*s13**3*s24 + &
                   s13**2*s14*s24 + 6*s13*s14**2*s24 + &
                   5*s13**2*s23*s24 + 9*s13*s14*s23*s24 - &
                   4*s14**2*s23*s24 + 12*s13*s23**2*s24 - &
                   2*s14*s23**2*s24 + 9*s13**2*s24**2 + &
                   4*s13*s14*s24**2 - 6*s14**2*s24**2 + &
                   8*s13*s23*s24**2 - 12*s14*s23*s24**2 - &
                   6*s23**2*s24**2 - 4*s13*s24**3 - 10*s14*s24**3 - &
                   10*s23*s24**3 - 4*s24**4 + &
                   s12**2*(9*s13**2 + 9*s13*(s14 + s23 + s24) - &
                      2*s24*(5*s14 + 4*s23 + 9*s24)) + &
                   m**4*(-139*s13**2 + 15*s14**2 - 20*s14*s23 + &
                      5*s23**2 - &
                      2*s12*(45*s13 - 5*s14 + 5*s23 - 29*s24) - &
                      10*s14*s24 + 48*s23*s24 - 9*s24**2 + &
                      2*s13*(12*s14 - 47*s23 + 58*s24)) + &
                   m**2*(7*s13**3 + 5*s14**2*s23 - 5*s14*s23**2 + &
                      s12**2*(13*s13 + 5*s14 - 5*s23 - 5*s24) + &
                      8*s14**2*s24 - 19*s14*s23*s24 + 16*s23**2*s24 - &
                      4*s14*s24**2 + 18*s23*s24**2 + 6*s24**3 + &
                      s13**2*(22*s14 + 22*s23 + 15*s24) + &
                      s12*(37*s13**2 + 5*s14**2 - 5*s23**2 + &
                        2*s13*(9*s14 - s23 - 15*s24) - 8*s14*s24 + &
                        8*s23*s24 + 9*s24**2) - &
                      s13*(9*s14**2 - 31*s14*s23 + 19*s23**2 + &
                        9*s14*s24 + 33*s23*s24 + 20*s24**2)) + &
                   s12*(7*s13**3 + 2*s13**2*(2*s14 + s23 + 3*s24) - &
                      2*s24*(2*s14**2 + 6*s14*s23 + s23**2 + &
                        11*s14*s24 + 10*s23*s24 + 8*s24**2) + &
                      s13*(3*s14**2 + 3*s23**2 + 22*s23*s24 + &
                         3*s24**2 + 2*s14*(6*s23 + 7*s24))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s23)*(gm**2 - m**2 + s24)) - &
           (16*(2*gm**6*(16*m**4 + &
                   3*(s12 + s13 + s23 + s24)*&
                    (s12 + s13 + s14 + s23 + s24) + &
                   m**2*(15*s12 + 13*s13 + 9*s14 + 15*s23 + 15*s24)) - &
                2*(-2*m**2 + s12 + s13 + s23)**2*&
                 (8*m**6 - 2*s13**2*s14 - 2*s13*s14**2 - s13*s14*s23 - &
                   s14**2*s23 + s14*s23**2 - s13**2*s24 - &
                   s13*s14*s24 + s13*s23*s24 + s14*s23*s24 + &
                   2*s23**2*s24 + s13*s24**2 + 2*s23*s24**2 + &
                   s12**2*(-s13 - s14 + s23 + s24) - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   m**2*(2*s12**2 - s13**2 + 14*s13*s14 - s14**2 + &
                      4*s12*(s13 + s14) - 6*s13*s23 + 6*s14*s23 - &
                      3*s23**2 + 6*s13*s24 - 6*s14*s24 + 2*s23*s24 - &
                      3*s24**2) + &
                   s12*(-s13**2 - 4*s13*s14 - s14**2 + s23**2 + &
                      4*s23*s24 + s24**2)) + &
                gm**4*(624*m**6 - 4*s12**3 - 14*s13**3 - &
                   8*s13**2*s14 - 6*s13*s14**2 - 42*s13**2*s23 - &
                   12*s13*s14*s23 - 3*s14**2*s23 - 42*s13*s23**2 - &
                   4*s14*s23**2 - 14*s23**3 - 16*s13**2*s24 - &
                   7*s13*s14*s24 - 28*s13*s23*s24 - s14*s23*s24 - &
                   12*s23**2*s24 - s13*s24**2 + 2*s23*s24**2 - &
                   s12**2*(22*s13 + 7*s14 + 22*s23 + 5*s24) + &
                   2*m**4*(70*s12 + 111*s13 + 89*s14 + 131*s23 + &
                      125*s24) - &
                   s12*(32*s13**2 + 15*s13*s14 + 3*s14**2 + &
                      64*s13*s23 + 11*s14*s23 + 32*s23**2 + &
                      21*s13*s24 + 4*s14*s24 + 17*s23*s24 + s24**2) - &
                   m**2*(52*s12**2 + 26*s13**2 + 17*s13*s14 + &
                      13*s14**2 + 60*s13*s23 + 29*s14*s23 + &
                      34*s23**2 - s13*s24 + 8*s14*s24 - 9*s23*s24 - &
                      s24**2 + 2*s12*(39*s13 + 9*s14 + 43*s23 + 23*s24)&
)) + 2*gm**2*(136*m**8 - 4*m**6*&
                    (41*s12 - 13*s13 + 56*s14 + 3*s23 + 44*s24) + &
                   2*m**4*(27*s12**2 - 35*s13**2 + 5*s14**2 + &
                      49*s14*s23 + 7*s23**2 - 9*s14*s24 + 50*s23*s24 - &
                      9*s24**2 + 3*s13*(14*s14 - 7*s23 + 15*s24) + &
                      s12*(-18*s13 + 56*s14 + 32*s23 + 46*s24)) + &
                   m**2*(s12**3 + &
                      s12**2*(17*s13 + 2*s14 - 13*s23 + 8*s24) + &
                      s12*(18*s13**2 - 4*s14**2 - 11*s13*s23 + &
                        3*s14*s23 - 24*s23**2 + 13*s13*s24 + &
                        19*s14*s24 + 14*s23*s24 + 16*s24**2) + &
                      (s13 + s23)*&
                       (2*s13**2 - 4*s14**2 + s14*s23 - 10*s23**2 + &
                        19*s14*s24 + 12*s23*s24 + 16*s24**2 + &
                        s13*(-8*s14 - 13*s23 + 5*s24))) - &
                   (s12 + s13 + s23)*&
                    (2*s12**3 - 2*s13**3 + s13**2*(-7*s14 + 4*s24) + &
                      s12**2*(4*s13 + s14 + 6*s23 + 5*s24) + &
                      s13*(-2*s14**2 - 7*s14*s23 + 6*s23**2 + &
                        s14*s24 + 15*s23*s24 + 3*s24**2) + &
                      s23*(-s14**2 + 4*s23**2 + 3*s14*s24 + &
                        11*s23*s24 + 4*s24**2) + &
                      s12*(-s14**2 + s14*s23 + 8*s23**2 + 2*s14*s24 + &
                         14*s23*s24 + 3*s24**2 + &
                         s13*(-4*s14 + 8*s23 + 9*s24))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s23)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)) - &
           (16*(-2*(-2*m**2 + s12 + s14 + s24)**2*&
                 (8*m**6 - 2*s13**2*s14 - 2*s13*s14**2 - s13*s14*s23 - &
                   s14**2*s23 + s14*s23**2 - s13**2*s24 - &
                   s13*s14*s24 + s13*s23*s24 + s14*s23*s24 + &
                   2*s23**2*s24 + s13*s24**2 + 2*s23*s24**2 + &
                   s12**2*(-s13 - s14 + s23 + s24) - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   m**2*(2*s12**2 - s13**2 + 14*s13*s14 - s14**2 + &
                      4*s12*(s13 + s14) - 6*s13*s23 + 6*s14*s23 - &
                      3*s23**2 + 6*s13*s24 - 6*s14*s24 + 2*s23*s24 - &
                      3*s24**2) + &
                   s12*(-s13**2 - 4*s13*s14 - s14**2 + s23**2 + &
                      4*s23*s24 + s24**2)) + &
                gm**4*(320*m**6 + &
                   4*m**4*(42*s12 + 92*s13 + 10*s14 + 67*s23 + &
                      27*s24) + &
                   m**2*(12*s12**2 + s13**2 + 9*s14**2 + 26*s14*s23 + &
                      57*s23**2 + &
                      s12*(47*s13 + 11*s14 + 69*s23 - 51*s24) - &
                      54*s14*s24 - 6*s23*s24 - 63*s24**2 + &
                      2*s13*(17*s14 + 51*s23 + 11*s24)) - &
                   5*(s12**3 + s14**2*s23 + s14*s23**2 + &
                      4*s14**2*s24 + 9*s14*s23*s24 + 4*s23**2*s24 + &
                      8*s14*s24**2 + 8*s23*s24**2 + 4*s24**3 - &
                      3*s13**2*(2*s14 + s24) + &
                      2*s12**2*(-s13 + s14 + s23 + 3*s24) + &
                      s13*(-6*s14**2 - 5*s14*(s23 + s24) + &
                        s24*(s23 + s24)) + &
                      s12*(-3*s13**2 + s14**2 + 3*s14*s23 + s23**2 + &
                        10*s14*s24 + 10*s23*s24 + 9*s24**2 - &
                        s13*(8*s14 + 2*s23 + s24)))) + &
                gm**2*(208*m**8 - &
                   8*m**6*(31*s12 + 48*s13 + s14 + 24*s23 + s24) + &
                   2*m**4*(42*s12**2 + 3*s13**2 - 21*s14**2 + &
                      78*s14*s23 - 43*s23**2 - 22*s14*s24 + &
                      62*s23*s24 + 5*s24**2 + &
                      2*s12*(51*s13 + 21*s14 + 7*s23 + 25*s24) + &
                      2*s13*(77*s14 - 35*s23 + 51*s24)) - &
                   (s12 + s14 + s24)*&
                    (2*s12**3 - 3*s14**2*s23 + 7*s14*s23**2 - &
                      s12**2*(9*s13 + s14 - 9*s23 - 17*s24) + &
                      8*s14**2*s24 + 23*s14*s23*s24 + 18*s23**2*s24 + &
                      16*s14*s24**2 + 26*s23*s24**2 + 8*s24**3 - &
                      11*s13**2*(2*s14 + s24) + &
                      s13*(-22*s14**2 - 15*s14*(s23 + s24) + &
                        7*s24*(s23 + s24)) + &
                      s12*(-11*s13**2 - 3*s14**2 + 6*s14*s23 + &
                        7*s23**2 + 20*s14*s24 + 40*s23*s24 + &
                        23*s24**2 - 2*s13*(18*s14 + 2*s23 + s24))) - &
                   m**2*(2*s12**3 + s14**3 + 40*s14**2*s23 - &
                      59*s14*s23**2 - s14**2*s24 + 10*s14*s23*s24 - &
                      77*s23**2*s24 + 5*s14*s24**2 - 30*s23*s24**2 + &
                      7*s24**3 + &
                      2*s12**2*(12*s13 + 19*s14 - 26*s23 + 5*s24) + &
                      s13**2*(37*s14 + 19*s24) + &
                      2*s13*(59*s14**2 - 28*s14*s23 + 61*s14*s24 - &
                        46*s23*s24 + 2*s24**2) + &
                      s12*(19*s13**2 + 37*s14**2 - 12*s14*s23 - &
                         59*s23**2 + 42*s14*s24 - 88*s23*s24 + &
                         15*s24**2 + 2*s13*(74*s14 - 37*s23 + 14*s24))))&
))/((m**2 - s13)*(m**2 - s14)*(gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (16*(2*gm**6*(84*m**4 - &
                   3*(s12 + s14 + s23 + s24)*&
                    (s12 + s13 + s14 + s23 + s24) + &
                   m**2*(25*s12 + 11*s13 + 27*s14 + 25*s23 + 25*s24)) - &
                2*(-2*m**2 + s12 + s14 + s24)**2*&
                 (8*m**6 + 2*s13**2*s14 + 2*s13*s14**2 + s13*s14*s23 + &
                   s14**2*s23 - s14*s23**2 + &
                   s12**2*(s13 + s14 - s23 - s24) + s13**2*s24 + &
                   s13*s14*s24 - s13*s23*s24 - s14*s23*s24 - &
                   2*s23**2*s24 - s13*s24**2 - 2*s23*s24**2 - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   s12*(s13**2 + 4*s13*s14 + s14**2 - s23**2 - &
                      4*s23*s24 - s24**2) + &
                   m**2*(2*s12**2 + s13**2 + s14**2 - 2*s14*s23 + &
                      3*s23**2 + 2*s14*s24 + 6*s23*s24 + 3*s24**2 - &
                      2*s13*(3*s14 - s23 + s24) + 4*s12*(s23 + s24))) + &
                gm**4*(-400*m**6 + 4*s12**3 + 6*s13**2*s14 + &
                   8*s13*s14**2 + 14*s14**3 + 7*s13*s14*s23 + &
                   16*s14**2*s23 + s14*s23**2 + 3*s13**2*s24 + &
                   12*s13*s14*s24 + 42*s14**2*s24 + s13*s23*s24 + &
                   28*s14*s23*s24 - 2*s23**2*s24 + 4*s13*s24**2 + &
                   42*s14*s24**2 + 12*s23*s24**2 + 14*s24**3 + &
                   s12**2*(7*s13 + 22*s14 + 5*s23 + 22*s24) - &
                   2*m**4*(50*s12 - 5*s13 + 45*s14 + 95*s23 + &
                      81*s24) + &
                   s12*(3*s13**2 + 15*s13*s14 + 32*s14**2 + &
                      4*s13*s23 + 21*s14*s23 + s23**2 + 11*s13*s24 + &
                      64*s14*s24 + 17*s23*s24 + 32*s24**2) + &
                   m**2*(52*s12**2 + 13*s13**2 + 65*s13*s14 - &
                      14*s14**2 + 16*s13*s23 + 19*s14*s23 - s23**2 + &
                      57*s13*s24 + 20*s14*s24 + 31*s23*s24 + &
                      34*s24**2 + &
                      s12*(46*s13 + 38*s14 + 66*s23 + 86*s24))) + &
                2*gm**2*(8*m**8 - &
                   4*m**6*(9*s12 - 12*s13 + 43*s14 - 16*s23 + 11*s24) + &
                   2*m**4*(19*s12**2 - 5*s13**2 + 55*s14**2 - &
                      3*s14*s23 + 9*s23**2 + 67*s14*s24 - 10*s23*s24 + &
                      5*s24**2 + s13*(6*s14 - s23 + s24) + &
                      s12*(-6*s13 + 84*s14 - 4*s23 + 26*s24)) + &
                   (s12 + s14 + s24)*&
                    (2*s12**3 - 2*s14**3 + 4*s14**2*s23 + &
                      3*s14*s23**2 + 15*s14*s23*s24 + 4*s23**2*s24 + &
                      6*s14*s24**2 + 11*s23*s24**2 + 4*s24**3 - &
                      s13**2*(2*s14 + s24) + &
                      s12**2*(s13 + 4*s14 + 5*s23 + 6*s24) + &
                      s13*(-7*s14**2 + s14*s23 - 7*s14*s24 + &
                        3*s23*s24) + &
                      s12*(-s13**2 + 9*s14*s23 + 3*s23**2 + &
                        8*s14*s24 + 14*s23*s24 + 8*s24**2 + &
                        s13*(-4*s14 + 2*s23 + s24))) - &
                   m**2*(15*s12**3 + &
                      s12**2*(8*s13 + 53*s14 + 22*s23 + 31*s24) + &
                      (s14 + s24)*&
                       (-4*s13**2 + 10*s14**2 + 5*s13*s23 + &
                        19*s14*s23 + 16*s23**2 + 7*s13*s24 + &
                        21*s14*s24 + 28*s23*s24 + 6*s24**2) + &
                      s12*(-4*s13**2 + 48*s14**2 + 41*s14*s23 + &
                         16*s23**2 + 75*s14*s24 + 44*s23*s24 + &
                         22*s24**2 + s13*(14*s14 + 5*s23 + 15*s24))))))/&
            ((m**2 - s14)*(gm**2 - m**2 + s24)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (4*(2*gm**6*(9*m**4 - s12**2 + 3*s13*s23 - s14*s23 + &
                   3*s23**2 + &
                   m**2*(-5*s12 - 4*s13 + s14 - 13*s23 - 2*s24) + &
                   s13*s24 + 3*s23*s24 - s12*(s13 + s14 - 2*s23 + s24)) &
+ 4*(2*m**2 - s12 - s14 - s24)*(2*m**2 - s12 - s23 - s24)*&
                 (4*m**6 - 4*m**4*(s12 + s23 + 2*s24) - &
                   s24*(s12**2 + 2*s13**2 + 2*s13*s23 + s23**2 + &
                      2*s12*(s13 + s23) - 2*s13*s24 + s24**2) + &
                   m**2*(s12**2 + 2*s13**2 + s23**2 + 6*s23*s24 + &
                      3*s24**2 + 2*s12*(s23 + 3*s24))) + &
                gm**4*(300*m**6 - 3*s12**3 + 6*s13**2*s23 + &
                   6*s13*s14*s23 - 6*s13*s23**2 - 3*s14*s23**2 - &
                   12*s23**3 - &
                   s12**2*(s13 + 3*(s14 + 6*s23 - 8*s24)) - &
                   2*s13**2*s24 + 2*s13*s14*s24 + 17*s13*s23*s24 + &
                   27*s14*s23*s24 + 4*s23**2*s24 + 17*s13*s24**2 + &
                   22*s14*s24**2 + 24*s23*s24**2 + 22*s24**3 - &
                   2*m**4*(6*s12 - 46*s13 - 47*s14 + 79*s23 + &
                      60*s24) + &
                   s12*(2*s13**2 - 6*s14*s23 - 27*s23**2 + &
                      27*s14*s24 + 28*s23*s24 + 49*s24**2 + &
                      s13*(6*s14 - 7*s23 + 20*s24)) - &
                   m**2*(60*s12**2 + 4*s13**2 + 8*s13*s14 + &
                      7*s13*s23 + 47*s14*s23 - 3*s23**2 + &
                      113*s13*s24 + 93*s14*s24 + 20*s23*s24 + &
                      43*s24**2 + &
                      s12*(55*s13 + 47*s14 + 57*s23 + 113*s24))) - &
                gm**2*(32*m**8 + 6*s12**4 - 6*s13**2*s14*s23 + &
                   3*s13*s14*s23**2 + 6*s14*s23**3 - 6*s13**3*s24 - &
                   4*s13**2*s14*s24 + 3*s13**2*s23*s24 + &
                   7*s13*s14*s23*s24 + 20*s13*s23**2*s24 + &
                   5*s14*s23**2*s24 + 16*s23**3*s24 + &
                   11*s13**2*s24**2 + 4*s13*s14*s24**2 + &
                   13*s13*s23*s24**2 + 7*s14*s23*s24**2 + &
                   12*s23**2*s24**2 - s13*s24**3 + 6*s14*s24**3 + &
                   10*s23*s24**3 + 6*s24**4 + &
                   s12**3*(5*s13 + 6*s14 + 18*s23 + 11*s24) - &
                   4*m**6*(20*s12 - 9*s13 + 19*s14 + 9*s23 + 49*s24) + &
                   s12**2*(-7*s13**2 + 18*s14*s23 + 18*s23**2 + &
                      5*s14*s24 + 38*s23*s24 + 12*s24**2 + &
                      s13*(3*s14 + 10*s23 + 19*s24)) + &
                   2*m**4*(40*s12**2 + 17*s13**2 + 33*s14*s23 + &
                      23*s23**2 + 60*s14*s24 + 81*s23*s24 + &
                      118*s24**2 - s13*(3*s14 + 2*s23 + 47*s24) + &
                      s12*(9*s13 + 33*s14 + 63*s23 + 95*s24)) + &
                   s12*(-6*s13**3 + 6*s23**3 + 43*s23**2*s24 + &
                      24*s23*s24**2 + 13*s24**3 + &
                      s13**2*(-6*s14 - 7*s23 + 4*s24) + &
                      s14*(18*s23**2 + 10*s23*s24 + 7*s24**2) + &
                      s13*(6*s14*s23 + 5*s23**2 + 7*s14*s24 + &
                        39*s23*s24 + 13*s24**2)) - &
                   m**2*(36*s12**3 - 6*s13**3 + 26*s14*s23**2 + &
                      18*s23**3 + 55*s14*s23*s24 + 79*s23**2*s24 + &
                      53*s14*s24**2 + 106*s23*s24**2 + 85*s24**3 + &
                      s13**2*(-10*s14 + 21*s23 + 27*s24) + &
                      s12**2*(28*s13 + 26*s14 + 90*s23 + 68*s24) + &
                      s13*(s14*s23 + 9*s23**2 + 7*s14*s24 - &
                        5*s23*s24 - 34*s24**2) + &
                      s12*(-3*s13**2 + 52*s14*s23 + 72*s23**2 + &
                         55*s14*s24 + 147*s23*s24 + 115*s24**2 + &
                         s13*(s14 + 37*s23 + 20*s24))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s24)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (16*(2*(s13 - s24)**2*&
                 (-8*m**6 + 2*s13**2*s14 + 2*s13*s14**2 + &
                   s13*s14*s23 + s14**2*s23 - s14*s23**2 + &
                   s12**2*(s13 + s14 - s23 - s24) + s13**2*s24 + &
                   s13*s14*s24 - s13*s23*s24 - s14*s23*s24 - &
                   2*s23**2*s24 - s13*s24**2 - 2*s23*s24**2 + &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   s12*(s13**2 + 4*s13*s14 + s14**2 - s23**2 - &
                      4*s23*s24 - s24**2) + &
                   m**2*(-2*s12**2 + s13**2 - 14*s13*s14 + s14**2 - &
                      4*s12*(s13 + s14) + 6*s13*s23 - 6*s14*s23 + &
                      3*s23**2 - 6*s13*s24 + 6*s14*s24 - 2*s23*s24 + &
                      3*s24**2)) + &
                gm**4*(704*m**6 - 15*s12**3 + 10*s13**2*s14 + &
                   10*s13*s14**2 - 2*s13**2*s23 - 2*s13*s14*s23 - &
                   2*s13*s23**2 - 15*s14*s23**2 - 2*s13**2*s24 - &
                   2*s13*s14*s24 - 19*s13*s23*s24 - 35*s14*s23*s24 - &
                   20*s23**2*s24 - 17*s13*s24**2 - 20*s14*s24**2 - &
                   40*s23*s24**2 - 20*s24**3 + &
                   4*m**4*(72*s12 + 81*s13 - 35*s14 + 112*s23 + &
                      42*s24) - &
                   s12**2*(17*s13 + 15*s14 + 30*s23 + 50*s24) - &
                   s12*(2*s13**2 - 8*s13*s14 + 19*s13*s23 + &
                      30*s14*s23 + 15*s23**2 + 34*s13*s24 + &
                      35*s14*s24 + 70*s23*s24 + 55*s24**2) - &
                   m**2*(36*s12**2 - 4*s13**2 + 80*s13*s14 - &
                      67*s13*s23 + 95*s14*s23 - 69*s23**2 - &
                      37*s13*s24 + 105*s14*s24 + 2*s23*s24 + &
                      71*s24**2 + &
                      s12*(-37*s13 + 95*s14 - 33*s23 + 107*s24))) - &
                gm**2*(14*s13**3*s14 + 14*s13**2*s14**2 - &
                   2*s13**3*s23 + 4*s13**2*s14*s23 + 6*s13*s14**2*s23 - &
                   2*s13**2*s23**2 - 12*s13*s14*s23**2 + &
                   8*m**6*(10*s13 + 5*s14 - 5*s23 - 6*s24) - &
                   6*s12**3*(s13 - s24) + 4*s13**3*s24 - &
                   8*s13**2*s14*s24 - 12*s13*s14**2*s24 - &
                   12*s13**2*s23*s24 - 23*s13*s14*s23*s24 - &
                   5*s14**2*s23*s24 - 18*s13*s23**2*s24 + &
                   11*s14*s23**2*s24 - 15*s13**2*s24**2 - &
                   11*s13*s14*s24**2 - 15*s13*s23*s24**2 + &
                   19*s14*s23*s24**2 + 18*s23**2*s24**2 + &
                   3*s13*s24**3 + 8*s14*s24**3 + 26*s23*s24**3 + &
                   8*s24**4 + &
                   s12**2*(-2*s13**2 - s13*(18*s23 + 23*s24) + &
                      s24*(s14 + 17*s23 + 25*s24)) + &
                   m**4*(123*s13**2 - 15*s14**2 + 20*s14*s23 - &
                      5*s23**2 + &
                      2*s12*(13*s13 - 5*s14 + 5*s23 - 29*s24) + &
                      114*s14*s24 - 152*s23*s24 + 25*s24**2 - &
                      2*s13*(80*s14 - 83*s23 + 90*s24)) + &
                   s12*(4*s13**3 + s13**2*(24*s14 - 10*s23 - 17*s24) + &
                      2*s13*(3*s14**2 - 6*s14*s23 - 6*s23**2 - &
                        17*s14*s24 - 21*s23*s24 - 7*s24**2) + &
                      s24*(-5*s14**2 + 11*s23**2 + 48*s23*s24 + &
                        27*s24**2 + 2*s14*(6*s23 + 7*s24))) + &
                   m**2*(6*s13**3 - 5*s14**2*s23 + 5*s14*s23**2 - &
                      15*s14**2*s24 + 79*s14*s23*s24 - 45*s23**2*s24 + &
                      14*s14*s24**2 + 22*s23*s24**2 + 27*s24**3 - &
                      2*s13**2*(47*s14 - 34*s23 + 8*s24) + &
                      s12**2*(-21*s13 - 5*s14 + 5*s23 + 29*s24) + &
                      s13*(16*s14**2 - 75*s14*s23 + 48*s23**2 + &
                        87*s14*s24 - 81*s23*s24 - 9*s24**2) + &
                      s12*(s13**2 - 5*s14**2 + 5*s23**2 + 54*s14*s24 - &
                         6*s23*s24 + 61*s24**2 - &
                         2*s13*(24*s14 - 8*s23 + 23*s24))))))/&
            ((m**2 - s13)*(m**2 - s14)*(gm**2 - m**2 + s24)) + &
           (16*(2*(-2*m**2 + s12 + s14 + s24)**2*&
                 (8*m**6 + 2*s13**2*s14 + 2*s13*s14**2 + s13*s14*s23 + &
                   s14**2*s23 - s14*s23**2 + &
                   s12**2*(s13 + s14 - s23 - s24) + s13**2*s24 + &
                   s13*s14*s24 - s13*s23*s24 - s14*s23*s24 - &
                   2*s23**2*s24 - s13*s24**2 - 2*s23*s24**2 - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   s12*(s13**2 + 4*s13*s14 + s14**2 - s23**2 - &
                      4*s23*s24 - s24**2) + &
                   m**2*(2*s12**2 + s13**2 + s14**2 - 2*s14*s23 + &
                      3*s23**2 + 2*s14*s24 + 6*s23*s24 + 3*s24**2 - &
                      2*s13*(3*s14 - s23 + s24) + 4*s12*(s23 + s24))) + &
                10*gm**6*(4*m**4 - &
                   3*(s12 + s13 + s14 + s23 + s24)**2 - &
                   4*m**2*(2*s12 + 3*s13 + 2*(s14 + s23 + s24))) + &
                gm**4*(32*m**6 - 27*s12**3 - 2*s13**2*s14 - &
                   4*s13*s14**2 - 2*s14**3 - 39*s13*s14*s23 - &
                   39*s14**2*s23 - 37*s14*s23**2 - 17*s13**2*s24 - &
                   43*s13*s14*s24 - 26*s14**2*s24 - 69*s13*s23*s24 - &
                   113*s14*s23*s24 - 52*s23**2*s24 - 39*s13*s24**2 - &
                   46*s14*s24**2 - 74*s23*s24**2 - 22*s24**3 - &
                   4*s12**2*(11*s13 + 14*s14 + 16*s23 + 19*s24) + &
                   4*m**4*(50*s12 + 39*s13 + 11*s14 + 46*s23 + &
                      36*s24) + &
                   m**2*(36*s12**2 + 39*s13**2 + 19*s14**2 + &
                      94*s14*s23 + 95*s23**2 + 6*s14*s24 + &
                      82*s23*s24 - 13*s24**2 + &
                      2*s13*(17*s14 + 45*s23 + s24) + &
                      s12*(31*s13 + 55*s14 + 141*s23 + 33*s24)) - &
                   s12*(17*s13**2 + 31*s14**2 + 103*s14*s23 + &
                      37*s23**2 + 102*s14*s24 + 138*s23*s24 + &
                      71*s24**2 + s13*(48*s14 + 54*s23 + 83*s24))) + &
                gm**2*(48*m**8 - &
                   8*m**6*(s12 + 16*s13 - 25*s14 + 8*s23 - 9*s24) - &
                   2*m**4*(26*s12**2 + s13**2 + 73*s14**2 - &
                      10*s14*s23 + 47*s23**2 + 98*s14*s24 + &
                      42*s23*s24 + 31*s24**2 - &
                      2*s13*(17*s14 - 9*s23 + 9*s24) + &
                      s12*(-26*s13 + 90*s14 + 46*s23 + 66*s24)) - &
                   (s12 + s14 + s24)*&
                    (6*s12**3 - 4*s14**3 + s14**2*s23 + &
                      15*s14*s23**2 - 4*s14**2*s24 + 31*s14*s23*s24 + &
                      26*s23**2*s24 + 4*s14*s24**2 + 30*s23*s24**2 + &
                      4*s24**3 - s13**2*(14*s14 + 3*s24) + &
                      3*s12**2*(s13 + s14 + 7*(s23 + s24)) + &
                      s13*(-18*s14**2 + s14*(s23 - 7*s24) + &
                        s24*(23*s23 + 11*s24)) + &
                      s12*(-3*s13**2 - 7*s14**2 + 22*s14*s23 + &
                        15*s23**2 + 12*s14*s24 + 56*s23*s24 + &
                        19*s24**2 + s13*(-20*s14 + 12*s23 + 14*s24))) + &
                   m**2*(34*s12**3 + 11*s14**3 + 4*s14**2*s23 + &
                      79*s14*s23**2 + 33*s14**2*s24 + 122*s14*s23*s24 + &
                      97*s23**2*s24 + 43*s14*s24**2 + 118*s23*s24**2 + &
                      21*s24**3 + s13**2*(-17*s14 + s24) + &
                      2*s12**2*(6*s13 + 29*s14 + 52*s23 + 51*s24) + &
                      s13*(-46*s14**2 + 28*s14*s23 - 22*s14*s24 + &
                        64*s23*s24 + 24*s24**2) + &
                      s12*(s13**2 + 35*s14**2 + 108*s14*s23 + &
                         79*s23**2 + 114*s14*s24 + 228*s23*s24 + &
                         89*s24**2 + s13*(-40*s14 + 46*s23 + 36*s24)))))&
)/((gm**2 - m**2 + s23)*(gm**2 - m**2 + s24)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)) - &
           (16*(2*gm**6*(84*m**4 - &
                   3*(s12 + s13 + s23 + s24)*&
                    (s12 + s13 + s14 + s23 + s24) + &
                   m**2*(25*s12 + 27*s13 + 11*s14 + 25*s23 + 25*s24)) - &
                2*(-2*m**2 + s12 + s13 + s23)**2*&
                 (8*m**6 + 2*s13**2*s14 + 2*s13*s14**2 + s13*s14*s23 + &
                   s14**2*s23 - s14*s23**2 + &
                   s12**2*(s13 + s14 - s23 - s24) + s13**2*s24 + &
                   s13*s14*s24 - s13*s23*s24 - s14*s23*s24 - &
                   2*s23**2*s24 - s13*s24**2 - 2*s23*s24**2 - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   s12*(s13**2 + 4*s13*s14 + s14**2 - s23**2 - &
                      4*s23*s24 - s24**2) + &
                   m**2*(2*s12**2 + s13**2 + s14**2 - 2*s14*s23 + &
                      3*s23**2 + 2*s14*s24 + 6*s23*s24 + 3*s24**2 - &
                      2*s13*(3*s14 - s23 + s24) + 4*s12*(s23 + s24))) + &
                gm**4*(-400*m**6 + 4*s12**3 + 14*s13**3 + &
                   8*s13**2*s14 + 6*s13*s14**2 + 42*s13**2*s23 + &
                   12*s13*s14*s23 + 3*s14**2*s23 + 42*s13*s23**2 + &
                   4*s14*s23**2 + 14*s23**3 + 16*s13**2*s24 + &
                   7*s13*s14*s24 + 28*s13*s23*s24 + s14*s23*s24 + &
                   12*s23**2*s24 + s13*s24**2 - 2*s23*s24**2 + &
                   s12**2*(22*s13 + 7*s14 + 22*s23 + 5*s24) - &
                   2*m**4*(50*s12 + 45*s13 - 5*s14 + 81*s23 + &
                      95*s24) + &
                   s12*(32*s13**2 + 15*s13*s14 + 3*s14**2 + &
                      64*s13*s23 + 11*s14*s23 + 32*s23**2 + &
                      21*s13*s24 + 4*s14*s24 + 17*s23*s24 + s24**2) + &
                   m**2*(52*s12**2 - 14*s13**2 + 65*s13*s14 + &
                      13*s14**2 + 20*s13*s23 + 57*s14*s23 + &
                      34*s23**2 + 19*s13*s24 + 16*s14*s24 + &
                      31*s23*s24 - s24**2 + &
                      s12*(38*s13 + 46*s14 + 86*s23 + 66*s24))) + &
                2*gm**2*(8*m**8 - &
                   4*m**6*(9*s12 + 43*s13 - 12*s14 + 11*s23 - 16*s24) + &
                   2*m**4*(19*s12**2 + 55*s13**2 - 5*s14**2 + &
                      s14*s23 + 5*s23**2 + &
                      s12*(84*s13 - 6*s14 + 26*s23 - 4*s24) + &
                      s13*(6*s14 + 67*s23 - 3*s24) - s14*s24 - &
                      10*s23*s24 + 9*s24**2) + &
                   (s12 + s13 + s23)*&
                    (2*s12**3 - 2*s13**3 + s13**2*(-7*s14 + 4*s24) + &
                      s12**2*(4*s13 + s14 + 6*s23 + 5*s24) + &
                      s13*(-2*s14**2 - 7*s14*s23 + 6*s23**2 + &
                        s14*s24 + 15*s23*s24 + 3*s24**2) + &
                      s23*(-s14**2 + 4*s23**2 + 3*s14*s24 + &
                        11*s23*s24 + 4*s24**2) + &
                      s12*(-s14**2 + s14*s23 + 8*s23**2 + 2*s14*s24 + &
                        14*s23*s24 + 3*s24**2 + &
                        s13*(-4*s14 + 8*s23 + 9*s24))) - &
                   m**2*(15*s12**3 + &
                      s12**2*(53*s13 + 8*s14 + 31*s23 + 22*s24) + &
                      (s13 + s23)*&
                       (10*s13**2 - 4*s14**2 + 21*s13*s23 + &
                        7*s14*s23 + 6*s23**2 + 19*s13*s24 + &
                        5*s14*s24 + 28*s23*s24 + 16*s24**2) + &
                      s12*(48*s13**2 - 4*s14**2 + 22*s23**2 + &
                         44*s23*s24 + 16*s24**2 + 5*s14*(3*s23 + s24) + &
                         s13*(14*s14 + 75*s23 + 41*s24))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s23)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)) + &
           (4*(-2*gm**6*(9*m**4 - s12**2 + s14*s23 + &
                   m**2*(-5*s12 + s13 - 4*s14 - 2*s23 - 13*s24) - &
                   s12*(s13 + s14 + s23 - 2*s24) - s13*s24 + &
                   3*s14*s24 + 3*s23*s24 + 3*s24**2) + &
                gm**4*(204*m**6 - 5*s12**3 + 2*s13*s14*s23 - &
                   2*s14**2*s23 - 4*s13*s23**2 + 3*s14*s23**2 - &
                   4*s23**3 - &
                   s12**2*(7*s13 + 7*s14 + 4*s23 - 18*s24) - &
                   2*s13**2*s24 + 10*s13*s14*s24 - 8*s14**2*s24 + &
                   7*s13*s23*s24 + 15*s14*s23*s24 - 10*s23**2*s24 + &
                   11*s13*s24**2 + 10*s14*s24**2 - 2*s23*s24**2 + &
                   18*s24**3 + &
                   m**4*(44*s12 + 46*s13 - 28*s14 - 30*s23 + 32*s24) + &
                   s12*(-2*s13**2 + 2*s13*s14 - 2*s14**2 - s13*s23 - &
                      4*s14*s23 - 3*s23**2 + 4*s13*s24 + 13*s14*s24 + &
                      4*s23*s24 + 41*s24**2) - &
                   m**2*(78*s12**2 - 2*s13**2 + 12*s13*s14 - &
                      10*s14**2 + 9*s13*s23 + 15*s14*s23 + 23*s23**2 + &
                      51*s13*s24 - 15*s14*s24 + 78*s23*s24 + &
                      107*s24**2 + &
                      s12*(25*s13 + 3*s14 + 85*s23 + 175*s24))) - &
                2*(2*m**2 - s12 - s23 - s24)*&
                 (16*m**8 - 2*s13*s14**2*s23 + s13*s14*s23**2 - &
                   s14**2*s23**2 + s14*s23**3 - 2*s13**2*s14*s24 + &
                   s13**2*s23*s24 - 6*s13*s14*s23*s24 + &
                   s14**2*s23*s24 + 3*s13*s23**2*s24 - &
                   2*s14*s23**2*s24 + 2*s23**3*s24 - s13**2*s24**2 + &
                   s13*s14*s24**2 - 2*s13*s23*s24**2 + &
                   3*s14*s23*s24**2 + s13*s24**3 + 2*s23*s24**3 - &
                   24*m**6*(s12 + s23 + s24) + &
                   s12**3*(-s13 - s14 + s23 + s24) - &
                   s12**2*(s13**2 + s14**2 + s14*(s23 - s24) + &
                      s13*(4*s14 - s23 + s24) - &
                      2*(s23**2 + s23*s24 + s24**2)) + &
                   2*m**4*(6*s12**2 - s13**2 - 2*s13*s14 - s14**2 + &
                      7*s23**2 + 14*s23*s24 + 7*s24**2 - &
                      2*s12*(s13 + s14 - 7*(s23 + s24))) + &
                   s12*(s13**2*(-2*s14 + s23 - 2*s24) + &
                      s14**2*(-2*s23 + s24) + (s23 + s24)**3 + &
                      s14*(s23**2 - s23*s24 + 2*s24**2) + &
                      s13*(-2*s14**2 + 2*s23**2 - s23*s24 + s24**2 - &
                        3*s14*(s23 + s24))) - &
                   m**2*(2*s12**3 - 3*s14**2*s23 + 2*s14*s23**2 + &
                      3*s23**3 + s13**2*(-2*s14 + s23 - 3*s24) + &
                      s14**2*s24 - 2*s14*s23*s24 + 11*s23**2*s24 + &
                      2*s14*s24**2 + 11*s23*s24**2 + 3*s24**3 + &
                      s12*(-3*s13**2 - 3*s14**2 - 2*s14*s23 + &
                        11*s23**2 + 2*s14*s24 + 18*s23*s24 + &
                        11*s24**2 - 2*s13*(5*s14 - s23 + s24)) - &
                      2*s12**2*(2*s13 + 2*s14 - 5*(s23 + s24)) - &
                      2*s13*(s14**2 - s23**2 + s23*s24 - s24**2 + &
                        2*s14*(s23 + s24)))) + &
                gm**2*(416*m**8 + 4*s12**4 - 2*s13*s14**2*s23 - &
                   4*s13*s14*s23**2 + 7*s14**2*s23**2 + 4*s13*s23**3 - &
                   8*s14*s23**3 + 4*s23**4 - 2*s13**2*s14*s24 + &
                   4*s13*s14**2*s24 - 11*s13*s14*s23*s24 + &
                   s14**2*s23*s24 - 2*s13*s23**2*s24 + &
                   13*s14*s23**2*s24 - 6*s23**3*s24 + 4*s13**2*s24**2 + &
                   5*s13*s14*s24**2 - 6*s14**2*s24**2 - &
                   3*s13*s23*s24**2 + 21*s14*s23*s24**2 + &
                   6*s23**2*s24**2 - 3*s13*s24**3 + 2*s14*s24**3 + &
                   16*s23*s24**3 + 8*s24**4 + &
                   s12**3*(8*s13 + 11*s14 + 4*s23 + 13*s24) - &
                   8*m**6*(54*s12 + 11*s13 + 14*s14 + 52*s23 + &
                      61*s24) + &
                   s12**2*(4*s13**2 + 7*s14**2 + 14*s14*s23 + &
                      17*s14*s24 + 18*s23*s24 + 22*s24**2 + &
                      s13*(9*s14 + 4*s23 + 13*s24)) + &
                   2*m**4*(68*s12**2 + s13**2 + 6*s14**2 + &
                      51*s14*s23 + 57*s23**2 + 38*s14*s24 + &
                      167*s23*s24 + 102*s24**2 + &
                      s13*(23*s14 + 12*s23 + 47*s24) + &
                      2*s12*(14*s13 + 23*s14 + 68*s23 + 95*s24)) + &
                   s12*(4*s23**3 - 2*s13**2*(s14 - 4*s24) - &
                      s23**2*s24 + 30*s23*s24**2 + 21*s24**3 + &
                      s14**2*(14*s23 + s24) + &
                      s14*(-5*s23**2 + 30*s23*s24 + 8*s24**2) + &
                      s13*(-2*s14**2 + s24*(s23 + 2*s24) + &
                        s14*(5*s23 + 14*s24))) - &
                   m**2*(20*s12**3 + 17*s14**2*s23 + 13*s14*s23**2 + &
                      10*s23**3 - 2*s13**2*(s14 - 3*s24) - &
                      3*s14**2*s24 + 67*s14*s23*s24 + 35*s23**2*s24 + &
                      14*s14*s24**2 + 102*s23*s24**2 + 45*s24**3 + &
                      s12**2*(22*s13 + 40*s14 + 40*s23 + 94*s24) + &
                      s13*(2*s14**2 + 5*s14*s23 + 2*s23**2 + &
                        31*s14*s24 - s23*s24 + 25*s24**2) + &
                      s12*(6*s13**2 + 17*s14**2 + 53*s14*s23 + &
                         30*s23**2 + 42*s14*s24 + 153*s23*s24 + &
                         119*s24**2 + s13*(39*s14 - 10*s23 + 47*s24)))))&
)/((m**2 - s14)*(gm**2 - m**2 + s24)*(-gm**2 - 2*m**2 + s12 + s23 + s24)) &
- (16*(4*(-2*m**2 + s12 + s13 + s23)**2*(2*m**2 - s12 - s14 - s24)*&
                 (2*m**4 + s24*(s12 + s23 + s24) - &
                   m**2*(s12 + 2*s13 + s23 + s24)) + &
                10*gm**6*(16*m**4 + &
                   3*(s12 + s13 + s23 + s24)*&
                    (s12 + s13 + s14 + s23 + s24) + &
                   m**2*(15*s12 + 13*s13 + 9*s14 + 15*s23 + 15*s24)) + &
                gm**4*(44*m**6 + 3*s12**3 - 30*s13**3 - &
                   22*s13**2*s14 - 72*s13**2*s23 - 19*s13*s14*s23 - &
                   54*s13*s23**2 + 3*s14*s23**2 - 12*s23**3 - &
                   51*s13**2*s24 - 16*s13*s14*s24 - 67*s13*s23*s24 - &
                   4*s14*s23*s24 - 16*s23**2*s24 - 28*s13*s24**2 - &
                   12*s14*s24**2 - 16*s23*s24**2 - 12*s24**3 - &
                   s12**2*(24*s13 - 3*s14 + 6*s23 + s24) - &
                   2*m**4*(117*s12 + 48*s13 + 81*s14 + 72*s23 + &
                      89*s24) - &
                   s12*(57*s13**2 + 19*s13*s14 + 78*s13*s23 - &
                      6*s14*s23 + 21*s23**2 + 52*s13*s24 + &
                      4*s14*s24 + 17*s23*s24 + 16*s24**2) - &
                   m**2*(48*s12**2 + 109*s13**2 + 5*s13*s14 + &
                      180*s13*s23 + s14*s23 + 63*s23**2 + &
                      121*s13*s24 + 50*s14*s24 + 97*s23*s24 + &
                      74*s24**2 + &
                      s12*(175*s13 + s14 + 111*s23 + 117*s24))) - &
                gm**2*(80*m**8 - &
                   8*m**6*(9*s12 - 5*s13 + 13*s14 + 2*s24) + &
                   2*m**4*(18*s12**2 + 49*s13**2 + 26*s14*s23 + &
                      8*s23**2 + 26*s12*(2*s13 + s14 + s23) - &
                      5*s14*s24 + 13*s23*s24 - 13*s24**2 + &
                      s13*(35*s14 + 41*s23 + 46*s24)) - &
                   m**2*(22*s12**3 + 61*s13**3 + 12*s14*s23**2 + &
                      18*s23**3 + 37*s14*s23*s24 + 45*s23**2*s24 + &
                      28*s14*s24**2 + 51*s23*s24**2 + 28*s24**3 + &
                      2*s12**2*(58*s13 + 6*s14 + 31*s23 + 27*s24) + &
                      s13**2*(37*s14 + 128*s23 + 84*s24) + &
                      s13*(51*s14*s23 + 85*s23**2 + 35*s14*s24 + &
                        131*s23*s24 + 49*s24**2) + &
                      s12*(159*s13**2 + 24*s14*s23 + 58*s23**2 + &
                        37*s14*s24 + 99*s23*s24 + 61*s24**2 + &
                        3*s13*(17*s14 + 67*s23 + 50*s24))) + &
                   (s12 + s13 + s23)*&
                    (6*s12**3 + 6*s14*s23**2 + 23*s14*s23*s24 + &
                      16*s23**2*s24 + 16*s14*s24**2 + 32*s23*s24**2 + &
                      16*s24**3 + 5*s13**2*(2*s14 + 3*s24) + &
                      s12**2*(21*s13 + 6*s14 + 12*s23 + 29*s24) + &
                      s13*(19*s14*s23 + 22*s14*s24 + 34*s23*s24 + &
                        31*s24**2) + &
                      s12*(15*s13**2 + 12*s14*s23 + 6*s23**2 + &
                         23*s14*s24 + 45*s23*s24 + 39*s24**2 + &
                         s13*(19*s14 + 21*s23 + 52*s24))))))/&
            ((m**2 - s13)*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
              (gm**2 - m**2 + s24)) + &
           (4*(-2*gm**6*(9*m**4 - s12**2 + 3*s13*s23 - s14*s23 + &
                   3*s23**2 + &
                   m**2*(-5*s12 - 4*s13 + s14 - 13*s23 - 2*s24) + &
                   s13*s24 + 3*s23*s24 - s12*(s13 + s14 - 2*s23 + s24)) &
+ gm**4*(204*m**6 - 5*s12**3 - 8*s13**2*s23 + 10*s13*s14*s23 - &
                   2*s14**2*s23 + 10*s13*s23**2 + 11*s14*s23**2 + &
                   18*s23**3 + &
                   m**4*(44*s12 - 28*s13 + 46*s14 + 32*s23 - 30*s24) - &
                   2*s13**2*s24 + 2*s13*s14*s24 + 15*s13*s23*s24 + &
                   7*s14*s23*s24 - 2*s23**2*s24 + 3*s13*s24**2 - &
                   4*s14*s24**2 - 10*s23*s24**2 - 4*s24**3 - &
                   s12**2*(7*s13 + 7*s14 - 18*s23 + 4*s24) + &
                   s12*(-2*s13**2 - 2*s14**2 + 4*s14*s23 + &
                      41*s23**2 + s13*(2*s14 + 13*s23 - 4*s24) - &
                      s14*s24 + 4*s23*s24 - 3*s24**2) - &
                   m**2*(78*s12**2 - 10*s13**2 - 2*s14**2 + &
                      51*s14*s23 + 107*s23**2 + 9*s14*s24 + &
                      78*s23*s24 + 23*s24**2 + &
                      3*s13*(4*s14 - 5*s23 + 5*s24) + &
                      s12*(3*s13 + 25*s14 + 175*s23 + 85*s24))) - &
                2*(2*m**2 - s12 - s23 - s24)*&
                 (16*m**8 - 2*s13*s14**2*s23 + s13*s14*s23**2 - &
                   s14**2*s23**2 + s14*s23**3 - 2*s13**2*s14*s24 + &
                   s13**2*s23*s24 - 6*s13*s14*s23*s24 + &
                   s14**2*s23*s24 + 3*s13*s23**2*s24 - &
                   2*s14*s23**2*s24 + 2*s23**3*s24 - s13**2*s24**2 + &
                   s13*s14*s24**2 - 2*s13*s23*s24**2 + &
                   3*s14*s23*s24**2 + s13*s24**3 + 2*s23*s24**3 - &
                   24*m**6*(s12 + s23 + s24) + &
                   s12**3*(-s13 - s14 + s23 + s24) - &
                   s12**2*(s13**2 + s14**2 + s14*(s23 - s24) + &
                      s13*(4*s14 - s23 + s24) - &
                      2*(s23**2 + s23*s24 + s24**2)) + &
                   2*m**4*(6*s12**2 - s13**2 - 2*s13*s14 - s14**2 + &
                      7*s23**2 + 14*s23*s24 + 7*s24**2 - &
                      2*s12*(s13 + s14 - 7*(s23 + s24))) + &
                   s12*(s13**2*(-2*s14 + s23 - 2*s24) + &
                      s14**2*(-2*s23 + s24) + (s23 + s24)**3 + &
                      s14*(s23**2 - s23*s24 + 2*s24**2) + &
                      s13*(-2*s14**2 + 2*s23**2 - s23*s24 + s24**2 - &
                        3*s14*(s23 + s24))) - &
                   m**2*(2*s12**3 - 3*s14**2*s23 + 2*s14*s23**2 + &
                      3*s23**3 + s13**2*(-2*s14 + s23 - 3*s24) + &
                      s14**2*s24 - 2*s14*s23*s24 + 11*s23**2*s24 + &
                      2*s14*s24**2 + 11*s23*s24**2 + 3*s24**3 + &
                      s12*(-3*s13**2 - 3*s14**2 - 2*s14*s23 + &
                        11*s23**2 + 2*s14*s24 + 18*s23*s24 + &
                        11*s24**2 - 2*s13*(5*s14 - s23 + s24)) - &
                      2*s12**2*(2*s13 + 2*s14 - 5*(s23 + s24)) - &
                      2*s13*(s14**2 - s23**2 + s23*s24 - s24**2 + &
                        2*s14*(s23 + s24)))) + &
                gm**2*(416*m**8 + 4*s12**4 + 4*s13**2*s14*s23 - &
                   2*s13*s14**2*s23 - 6*s13**2*s23**2 + &
                   5*s13*s14*s23**2 + 4*s14**2*s23**2 + 2*s13*s23**3 - &
                   3*s14*s23**3 + 8*s23**4 - 2*s13**2*s14*s24 + &
                   s13**2*s23*s24 - 11*s13*s14*s23*s24 + &
                   21*s13*s23**2*s24 - 3*s14*s23**2*s24 + &
                   16*s23**3*s24 + 7*s13**2*s24**2 - 4*s13*s14*s24**2 + &
                   13*s13*s23*s24**2 - 2*s14*s23*s24**2 + &
                   6*s23**2*s24**2 - 8*s13*s24**3 + 4*s14*s24**3 - &
                   6*s23*s24**3 + 4*s24**4 + &
                   s12**3*(11*s13 + 8*s14 + 13*s23 + 4*s24) - &
                   8*m**6*(54*s12 + 14*s13 + 11*s14 + 61*s23 + &
                      52*s24) + &
                   s12**2*(7*s13**2 + 4*s14**2 + 13*s14*s23 + &
                      22*s23**2 + 4*s14*s24 + 18*s23*s24 + &
                      s13*(9*s14 + 17*s23 + 14*s24)) + &
                   2*m**4*(68*s12**2 + 6*s13**2 + s14**2 + &
                      47*s14*s23 + 102*s23**2 + 12*s14*s24 + &
                      167*s23*s24 + 57*s24**2 + &
                      s13*(23*s14 + 38*s23 + 51*s24) + &
                      2*s12*(23*s13 + 14*s14 + 95*s23 + 68*s24)) + &
                   s12*(8*s14**2*s23 + 21*s23**3 + 30*s23**2*s24 - &
                      s23*s24**2 + 4*s24**3 + s14*s23*(2*s23 + s24) + &
                      s13**2*(-2*s14 + s23 + 14*s24) + &
                      s13*(-2*s14**2 + 14*s14*s23 + 8*s23**2 + &
                        5*s14*s24 + 30*s23*s24 - 5*s24**2)) - &
                   m**2*(20*s12**3 + 6*s14**2*s23 + 25*s14*s23**2 + &
                      45*s23**3 - s14*s23*s24 + 102*s23**2*s24 + &
                      2*s14*s24**2 + 35*s23*s24**2 + 10*s24**3 + &
                      s13**2*(2*s14 - 3*s23 + 17*s24) + &
                      s12**2*(40*s13 + 22*s14 + 94*s23 + 40*s24) + &
                      s13*(-2*s14**2 + 31*s14*s23 + 14*s23**2 + &
                        5*s14*s24 + 67*s23*s24 + 13*s24**2) + &
                      s12*(17*s13**2 + 6*s14**2 + 47*s14*s23 + &
                         119*s23**2 - 10*s14*s24 + 153*s23*s24 + &
                         30*s24**2 + s13*(39*s14 + 42*s23 + 53*s24))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s23)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (16*(2*(2*m**4 + s13*(s12 + s13 + s14) - &
                   m**2*(s12 + 5*s13 + s14 - 2*s24))*(s13 - s24)**2*&
                 (2*m**4 + s24*(s12 + s23 + s24) - &
                   m**2*(s12 + 2*s13 + s23 + s24)) + &
                2*gm**6*(3*m**6 + m**4*(s12 - 29*s13 + s23 + s24) + &
                   s13**2*(s12 + s13 + 4*s14 + s23 + s24) + &
                   m**2*s13*(2*s12 - 39*s13 + 2*(-2*s14 + s23 + s24))) &
- gm**4*(6*m**8 + 2*m**6*(s12 - 41*s13 + s23 - 4*s24) + &
                   m**4*(-128*s13**2 + s12*(8*s13 - 2*s24) + &
                      (3*s14 - 5*s23 - 16*s24)*s24 + &
                      s13*(-19*s14 + 19*s23 + 94*s24)) + &
                   m**2*(-52*s13**3 + s12**2*(-7*s13 + s24) + &
                      s13**2*(10*s14 - 35*s23 + 23*s24) + &
                      s13*(-7*s14*s23 - 11*s14*s24 + 13*s23*s24 + &
                        15*s24**2) + &
                      s24*(s14*(s23 - s24) + 2*s24*(s23 + s24)) + &
                      s12*(-31*s13**2 + s24*(s14 + s23 + 3*s24) - &
                        s13*(7*s14 + 7*s23 + 10*s24))) + &
                   s13*(8*s13**3 + s12**2*(7*s13 - s24) + &
                      s14*s24*(-s23 + s24) + &
                      s13**2*(9*s14 + 8*s23 + 13*s24) + &
                      s13*(7*s14*s23 + 8*s14*s24 - 4*s23*s24 - &
                        3*s24**2) + &
                      s12*(15*s13**2 - s24*(s14 + s23 + s24) + &
                        s13*(7*s14 + 7*s23 + 16*s24)))) + &
                gm**2*(-4*m**8*(5*s13 + s24) + &
                   m**6*(24*s12*s13 + 73*s13**2 + &
                      (3*s14 - 3*s23 - 19*s24)*s24 + &
                      3*s13*(3*s14 + 5*s23 + 6*s24)) + &
                   m**4*(-115*s13**3 + s12**2*(-7*s13 + s24) + &
                      s13**2*(-27*s14 - 33*s23 + 76*s24) + &
                      s24*(s14*s23 - 5*s14*s24 + 9*s23*s24 + &
                        17*s24**2) - &
                      s13*(7*s14*s23 - 2*s14*s24 + 6*s23*s24 + &
                        56*s24**2) + &
                      s12*(-58*s13**2 + s24*(s14 + s23 + 6*s24) - &
                        s13*(7*s14 + 7*s23 + 8*s24))) + &
                   s13*(2*s13**4 + 2*s13**3*(s14 + s23) + &
                      s14*s24**2*(3*s23 + 4*s24) + &
                      s13**2*(2*s14*s23 - 12*s23*s24 - 13*s24**2) + &
                      s12**2*(2*s13**2 - 11*s13*s24 + 3*s24**2) + &
                      s13*s24*&
                       (-11*s14*s23 - 12*s14*s24 + 4*s23*s24 + &
                        5*s24**2) + &
                      s12*(4*s13**3 + 2*s13**2*(s14 + s23 - 5*s24) + &
                        3*s24**2*(s14 + s23 + 2*s24) - &
                        s13*s24*(11*s14 + 11*s23 + 12*s24))) + &
                   m**2*(6*s13**4 + 2*s13**3*(8*s14 - s23 + 8*s24) + &
                      s12**2*(5*s13**2 + 10*s13*s24 - 3*s24**2) + &
                      s24**2*&
                       (2*s24*(s23 + 4*s24) - s14*(3*s23 + 4*s24)) + &
                      s13*s24*&
                       (-5*s24*(7*s23 + 8*s24) + s14*(10*s23 + 17*s24)) &
+ s13**2*(5*s14*(s23 - s24) + s24*(59*s23 + 46*s24)) + &
                      s12*(12*s13**3 + &
                         2*s13*(5*s14 + 5*s23 - 8*s24)*s24 - &
                         s24**2*(3*s14 + 3*s23 + 4*s24) + &
                         s13**2*(5*s14 + 5*s23 + 56*s24))))))/&
            ((m**2 - s13)**2*(gm**2 - m**2 + s24)**2) + &
           (4*(2*gm**4*(66*m**6 - 2*s12**3 - 12*s13**2*s14 - &
                   8*s13*s14**2 - 2*s13**2*s23 - 13*s13*s14*s23 - &
                   s14**2*s23 - 2*s13*s23**2 - 2*s14*s23**2 - &
                   2*s13**2*s24 - 8*s13*s14*s24 - 4*s13*s23*s24 - &
                   2*s14*s23*s24 - 2*s13*s24**2 + &
                   m**4*(-38*s12 - 17*s13 - 27*s14 + 18*s23 + &
                      28*s24) - &
                   s12**2*(4*s13 + 3*s14 + 4*(s23 + s24)) - &
                   m**2*(9*s12**2 - 6*s13**2 + s14**2 + 3*s14*s23 - &
                      4*s23**2 + 2*s14*s24 - 6*s23*s24 - 2*s24**2 + &
                      s12*(3*s13 - 3*s14 + 5*s23 + 7*s24) + &
                      s13*(7*s14 - s23 + 16*s24)) - &
                   s12*(2*s13**2 + s14**2 + 2*(s23 + s24)**2 + &
                      s14*(5*s23 + 3*s24) + &
                      3*s13*(5*s14 + 2*(s23 + s24)))) - &
                2*(2*m**2 - s12 - s13 - s14)*&
                 (16*m**8 + 2*s13**3*s14 + 2*s13*s14**3 + &
                   3*s13**2*s14*s23 - 2*s13*s14**2*s23 + s14**3*s23 + &
                   s13*s14*s23**2 - s14**2*s23**2 + &
                   s12**3*(s13 + s14 - s23 - s24) + s13**3*s24 - &
                   2*s13**2*s14*s24 + 3*s13*s14**2*s24 + &
                   s13**2*s23*s24 - 6*s13*s14*s23*s24 + &
                   s14**2*s23*s24 - 2*s14*s23**2*s24 - s13**2*s24**2 + &
                   s13*s14*s24**2 - 2*s13*s23*s24**2 - &
                   8*m**6*(3*s12 + s13 + s14 + 2*s23 + 2*s24) + &
                   s12**2*(2*s13**2 + 2*s14**2 - s23**2 + &
                      s13*(2*s14 + s23 - s24) - 4*s23*s24 - s24**2 + &
                      s14*(-s23 + s24)) + &
                   2*m**4*(6*s12**2 - s13**2 + 6*s13*s14 - s14**2 + &
                      8*s14*s23 - s23**2 + 8*s13*s24 + 6*s23*s24 - &
                      s24**2 + 6*s12*(s13 + s14 + s23 + s24)) + &
                   s12*(s13**3 + s14**3 - 2*s23*s24*(s23 + s24) + &
                      s13**2*(3*s14 + 2*s23 + s24) + &
                      s14**2*(s23 + 2*s24) + &
                      s14*(-2*s23**2 - 3*s23*s24 + s24**2) + &
                      s13*(3*s14**2 + s23**2 - 3*s23*s24 - 2*s24**2 - &
                        s14*(s23 + s24))) - &
                   m**2*(2*s12**3 - s13**3 - s14**3 + &
                      6*s12**2*(s13 + s14) + 6*s14**2*s23 - &
                      3*s14*s23**2 - 2*s14**2*s24 + 4*s14*s23*s24 - &
                      2*s23**2*s24 + s14*s24**2 - 2*s23*s24**2 + &
                      s13**2*(7*s14 - 2*s23 + 6*s24) + &
                      s13*(7*s14**2 + s23**2 + 4*s23*s24 - 3*s24**2 - &
                        2*s14*(s23 + s24)) + &
                      s12*(3*s13**2 + 3*s14**2 + 6*s14*s23 - &
                        3*s23**2 + 2*s14*s24 - 2*s23*s24 - 3*s24**2 + &
                        2*s13*(5*s14 + s23 + 3*s24)))) + &
                gm**2*(384*m**8 + s12**4 - 2*s13**3*s14 - &
                   2*s13**2*s14**2 - 8*s13*s14**3 - 6*s13**3*s23 - &
                   3*s13**2*s14*s23 + 2*s13*s14**2*s23 - 3*s14**3*s23 - &
                   6*s13**2*s23**2 - 3*s13*s14*s23**2 + &
                   3*s14**2*s23**2 - &
                   4*m**6*(58*s12 + 77*s13 + 91*s14 - 25*s23 - &
                      11*s24) - 3*s13**3*s24 - 4*s13**2*s14*s24 - &
                   7*s13*s14**2*s24 + 3*s13**2*s23*s24 - &
                   10*s13*s14*s23*s24 - s14**2*s23*s24 + &
                   4*s13*s23**2*s24 - 2*s14*s23**2*s24 + &
                   3*s13**2*s24**2 - s13*s14*s24**2 - &
                   2*s13*s23*s24**2 - &
                   s12**3*(s13 + s14 - 4*(s23 + s24)) + &
                   s12**2*(-5*s13**2 - 5*s14**2 + 5*s14*s23 + &
                      3*s23**2 + 4*s23*s24 + 3*s24**2 + &
                      s13*(-8*s14 - 2*s23 + 5*s24)) - &
                   2*m**4*(26*s12**2 - 33*s13**2 - 47*s14**2 + &
                      45*s14*s23 + 14*s23**2 + 17*s14*s24 - &
                      8*s23*s24 + s13*(-10*s14 + 49*s23 + 45*s24) + &
                      s12*(-8*s13 - 36*s14 + 74*s23 + 46*s24)) - &
                   s12*(3*s13**3 + 3*s14**3 + 2*s23*s24*(s23 + s24) + &
                      2*s14**2*(s23 + 2*s24) + &
                      s13*(15*s14**2 + 3*s23**2 + 4*s14*s24 - &
                        7*s23*s24 - 6*s24**2) + &
                      s14*(-6*s23**2 - 3*s23*s24 + s24**2) + &
                      s13**2*(9*s14 + 2*(6*s23 + s24))) + &
                   m**2*(34*s12**3 - s13**3 - s14**3 + 20*s14**2*s23 + &
                      11*s14*s23**2 + 2*s14**2*s24 + 4*s14*s23*s24 - &
                      2*s23**2*s24 + s14*s24**2 + 2*s23*s24**2 + &
                      s12**2*(71*s13 + 57*s14 + 41*s23 + 27*s24) + &
                      s13**2*(53*s14 + 36*s23 + 34*s24) + &
                      s13*(69*s14**2 + 42*s14*s23 + 23*s23**2 + &
                        58*s14*s24 - 12*s23*s24 - 3*s24**2) + &
                      s12*(36*s13**2 + 22*s14**2 + 61*s14*s23 + &
                         11*s23**2 + 47*s14*s24 - 14*s23*s24 - &
                         3*s24**2 + s13*(120*s14 + 83*s23 + 61*s24))))))/&
            ((m**2 - s13)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s23)) + &
           (4*(10*gm**6*(m**2 - s13)*(m**2 - s14) + &
                gm**4*(140*m**6 + s12**3 + 6*s13**2*s14 - &
                   6*s13*s14**2 - 2*s14**3 - s13*s14*s23 + &
                   19*s14**2*s23 - 4*s14*s23**2 + 3*s13**2*s24 - &
                   13*s13*s14*s24 - 6*s14**2*s24 - 4*s13*s23*s24 + &
                   12*s14*s23*s24 - 4*s13*s24**2 - 4*s14*s24**2 - &
                   2*m**4*(42*s12 + 9*s13 - 6*s14 - 57*s23 + 4*s24) - &
                   m**2*(26*s12**2 + 27*s13**2 + 3*s14**2 + &
                      113*s14*s23 - 4*s23**2 + &
                      s13*(102*s14 + 19*s23 - 11*s24) + &
                      s12*(27*s13 + 61*s14 + 47*s23 - 7*s24) - &
                      13*s14*s24 + 8*s23*s24 - 8*s24**2) + &
                   s12**2*(4*s13 + 10*s14 - 3*(s23 + s24)) + &
                   s12*(3*s13**2 + 7*s14**2 + s13*(10*s14 - s23) - &
                      4*(s23 + s24)**2 + s14*(16*s23 + s24))) - &
                2*(2*m**2 - s12 - s13 - s14)*&
                 (16*m**8 + 2*s13**3*s14 + 2*s13*s14**3 + &
                   3*s13**2*s14*s23 - 2*s13*s14**2*s23 + s14**3*s23 + &
                   s13*s14*s23**2 - s14**2*s23**2 + &
                   s12**3*(s13 + s14 - s23 - s24) + s13**3*s24 - &
                   2*s13**2*s14*s24 + 3*s13*s14**2*s24 + &
                   s13**2*s23*s24 - 6*s13*s14*s23*s24 + &
                   s14**2*s23*s24 - 2*s14*s23**2*s24 - s13**2*s24**2 + &
                   s13*s14*s24**2 - 2*s13*s23*s24**2 - &
                   8*m**6*(3*s12 + s13 + s14 + 2*s23 + 2*s24) + &
                   s12**2*(2*s13**2 + 2*s14**2 - s23**2 + &
                      s13*(2*s14 + s23 - s24) - 4*s23*s24 - s24**2 + &
                      s14*(-s23 + s24)) + &
                   2*m**4*(6*s12**2 - s13**2 + 6*s13*s14 - s14**2 + &
                      8*s14*s23 - s23**2 + 8*s13*s24 + 6*s23*s24 - &
                      s24**2 + 6*s12*(s13 + s14 + s23 + s24)) + &
                   s12*(s13**3 + s14**3 - 2*s23*s24*(s23 + s24) + &
                      s13**2*(3*s14 + 2*s23 + s24) + &
                      s14**2*(s23 + 2*s24) + &
                      s14*(-2*s23**2 - 3*s23*s24 + s24**2) + &
                      s13*(3*s14**2 + s23**2 - 3*s23*s24 - 2*s24**2 - &
                        s14*(s23 + s24))) - &
                   m**2*(2*s12**3 - s13**3 - s14**3 + &
                      6*s12**2*(s13 + s14) + 6*s14**2*s23 - &
                      3*s14*s23**2 - 2*s14**2*s24 + 4*s14*s23*s24 - &
                      2*s23**2*s24 + s14*s24**2 - 2*s23*s24**2 + &
                      s13**2*(7*s14 - 2*s23 + 6*s24) + &
                      s13*(7*s14**2 + s23**2 + 4*s23*s24 - 3*s24**2 - &
                        2*s14*(s23 + s24)) + &
                      s12*(3*s13**2 + 3*s14**2 + 6*s14*s23 - &
                        3*s23**2 + 2*s14*s24 - 2*s23*s24 - 3*s24**2 + &
                        2*s13*(5*s14 + s23 + 3*s24)))) + &
                gm**2*(544*m**8 - 4*s12**4 - 18*s13**3*s14 - &
                   10*s13**2*s14**2 + 4*s13*s14**3 + 4*s14**4 - &
                   18*s13**2*s14*s23 - 15*s13*s14**2*s23 - &
                   3*s14**3*s23 - 4*s13*s14*s23**2 - &
                   8*m**6*(54*s12 + 68*s13 + 65*s14 - s23 - 10*s24) - &
                   8*s13**3*s24 + s13**2*s14*s24 + 5*s13*s14**2*s24 - &
                   2*s14**3*s24 - 4*s13**2*s23*s24 - &
                   11*s13*s14*s23*s24 + 5*s14**2*s23*s24 - &
                   2*s14*s23**2*s24 + 3*s13**2*s24**2 - &
                   3*s13*s14*s24**2 - 6*s14**2*s24**2 - &
                   2*s13*s23*s24**2 + 4*s14*s23*s24**2 - &
                   s12**3*(16*s13 + 7*s14 + 4*s23 + s24) + &
                   2*m**4*(4*s12**2 + 77*s13**2 + 90*s14**2 - &
                      33*s14*s23 - 3*s23**2 + &
                      s13*(71*s14 - 4*s23 - 45*s24) + &
                      2*s12*(48*s13 + 51*s14 - 22*s23 - 37*s24) - &
                      26*s14*s24 + 7*s23*s24 - 14*s24**2) - &
                   s12**2*(20*s13**2 - 2*s14**2 - s24*(s23 + 3*s24) + &
                      s14*(11*s23 + 3*s24) + &
                      2*s13*(15*s14 + 8*s23 + 5*s24)) - &
                   s12*(8*s13**3 - 9*s14**3 + &
                      3*s14*s24*(-2*s23 + s24) + &
                      2*s23*s24*(s23 + s24) + &
                      2*s14**2*(5*s23 + 2*s24) + &
                      s13**2*(41*s14 + 12*s23 + 17*s24) + &
                      s13*(10*s14**2 + 31*s14*s23 + 4*s23**2 + &
                        2*s14*s24 + 3*s23*s24 - 6*s24**2)) + &
                   m**2*(44*s12**3 - 6*s13**3 - 33*s14**3 + &
                      31*s14**2*s23 + 6*s14*s23**2 + 10*s14**2*s24 - &
                      15*s14*s23*s24 + 2*s23**2*s24 + 23*s14*s24**2 - &
                      2*s23*s24**2 + s13**2*(81*s14 - 2*s23 + 35*s24) + &
                      s12**2*(72*s13 + 42*s14 + 50*s23 + 56*s24) + &
                      s13*(22*s14**2 + 73*s14*s23 + 4*s23**2 + &
                        21*s14*s24 + 11*s23*s24 + 11*s24**2) + &
                      s12*(22*s13**2 - 35*s14**2 + 81*s14*s23 + &
                         6*s23**2 + 62*s14*s24 - 7*s23*s24 + &
                         11*s24**2 + s13*(103*s14 + 66*s23 + 91*s24)))))&
)/((m**2 - s14)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*(gm**2 - m**2 + s24)) &
+ (4*(10*gm**6*(m**2 - s13)*(m**2 - s14) + &
                4*(2*m**2 - s12 - s13 - s14)*&
                 (2*m**2 - s12 - s13 - s23)*&
                 (4*m**6 - 4*m**4*(s12 + 2*s13 + s14) + &
                   m**2*(s12**2 + 3*s13**2 + 6*s13*s14 + s14**2 + &
                      2*s12*(3*s13 + s14) + 2*s24**2) - &
                   s13*(s12**2 + s13**2 + s14**2 - 2*s13*s24 + &
                      2*s14*s24 + 2*s24**2 + 2*s12*(s14 + s24))) + &
                gm**4*(236*m**6 + 5*s12**3 - 2*s13**3 + &
                   10*s13**2*s14 + 18*s13*s14**2 - 2*s13**2*s23 + &
                   7*s13*s14*s23 + 5*s14**2*s23 + 9*s13**2*s24 + &
                   27*s13*s14*s24 + 16*s13*s23*s24 + 20*s14*s23*s24 + &
                   16*s13*s24**2 - &
                   2*m**4*(20*s12 - 52*s13 + 53*s14 - 55*s23 + &
                      36*s24) + &
                   s12**2*(12*s13 + 5*(2*s14 + s23 + 5*s24)) - &
                   m**2*(54*s12**2 + 85*s13**2 + 158*s13*s14 + &
                      17*s14**2 + 51*s13*s23 + 69*s14*s23 + &
                      29*s13*s24 - 65*s14*s24 + 36*s23*s24 + &
                      16*s24**2 + &
                      s12*(137*s13 + 71*s14 + 69*s23 + 35*s24)) + &
                   s12*(5*s13**2 + s13*(30*s14 + 7*s23 + 38*s24) + &
                      5*(s14**2 + 4*s24*(s23 + s24) + &
                        s14*(2*s23 + 5*s24)))) + &
                gm**2*(224*m**8 - 2*s12**4 + 10*s13**4 + 2*s13**3*s14 - &
                   12*s13**2*s14**2 - 12*s13*s14**3 + 10*s13**3*s23 + &
                   5*s13**2*s14*s23 - 5*s13*s14**2*s23 - 2*s14**3*s23 - &
                   4*m**6*(64*s12 + 47*s13 + 59*s14 - 3*s23 - 11*s24) - &
                   19*s13**3*s24 - 29*s13**2*s14*s24 - &
                   16*s13*s14**2*s24 - 24*s13**2*s23*s24 - &
                   23*s13*s14*s23*s24 + s14**2*s23*s24 - &
                   11*s13**2*s24**2 - 3*s13*s14*s24**2 + &
                   4*s13*s23*s24**2 + 6*s14*s23*s24**2 + 6*s13*s24**3 - &
                   s12**3*(7*s13 + 6*s14 + 2*s23 + s24) + &
                   2*m**4*(40*s12**2 + 2*s13**2 + 29*s14**2 - &
                      5*s14*s23 + &
                      s12*(61*s13 + 69*s14 - 5*s23 - 37*s24) + &
                      s13*(27*s14 - 12*s23 - 13*s24) - 14*s14*s24 - &
                      9*s23*s24 - 29*s24**2) - &
                   s12**2*(6*s14**2 + 2*s14*(3*s23 + s24) - &
                      s24*(s23 + 7*s24) + s13*(26*s14 + 5*s23 + 31*s24)&
) + s12*(15*s13**3 - 2*s14**3 + s13**2*(-12*s14 + 5*s23 - 49*s24) + &
                      6*s24**2*(s23 + s24) - s14**2*(6*s23 + s24) + &
                      s14*s24*(2*s23 + 7*s24) - &
                      s13*(31*s14**2 + 10*s14*s23 + 47*s14*s24 + &
                        23*s23*s24 + 4*s24**2)) + &
                   m**2*(-3*s13**3 + 2*s14**3 + 6*s14**2*s23 + &
                      5*s14**2*s24 + 5*s14*s23*s24 + 33*s14*s24**2 - &
                      10*s23*s24**2 - 6*s24**3 + &
                      2*s12**2*(s14 + 3*s23 + 14*s24) + &
                      s13**2*(50*s14 - 11*s23 + 46*s24) + &
                      s13*(47*s14**2 + 19*s14*s23 + 23*s14*s24 + &
                        59*s23*s24 + 39*s24**2) + &
                      s12*(-5*s13**2 + 4*s14**2 + 12*s14*s23 + &
                         33*s14*s24 + 5*s23*s24 + 9*s24**2 + &
                         s13*(47*s14 + 19*s23 + 100*s24))))))/&
            ((m**2 - s13)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s24)) - &
           (16*(10*gm**6*(4*m**4 - &
                   3*(s12 + s13 + s14 + s23 + s24)**2 - &
                   4*m**2*(2*s12 + 2*s13 + 3*s14 + 2*s23 + 2*s24)) + &
                2*(-2*m**2 + s12 + s13 + s23)**2*&
                 (8*m**6 + 2*s13**2*s14 + 2*s13*s14**2 + s13*s14*s23 + &
                   s14**2*s23 - s14*s23**2 + &
                   s12**2*(s13 + s14 - s23 - s24) + s13**2*s24 + &
                   s13*s14*s24 - s13*s23*s24 - s14*s23*s24 - &
                   2*s23**2*s24 - s13*s24**2 - 2*s23*s24**2 - &
                   4*m**4*(2*s12 + s13 + s14 + s23 + s24) + &
                   s12*(s13**2 + 4*s13*s14 + s14**2 - s23**2 - &
                      4*s23*s24 - s24**2) + &
                   m**2*(2*s12**2 + s13**2 + s14**2 - 2*s14*s23 + &
                      3*s23**2 + 2*s14*s24 + 6*s23*s24 + 3*s24**2 - &
                      2*s13*(3*s14 - s23 + s24) + 4*s12*(s23 + s24))) + &
                gm**4*(32*m**6 - 27*s12**3 - 2*s13**3 - 4*s13**2*s14 - &
                   2*s13*s14**2 - 26*s13**2*s23 - 43*s13*s14*s23 - &
                   17*s14**2*s23 - 46*s13*s23**2 - 39*s14*s23**2 - &
                   22*s23**3 - 39*s13**2*s24 - 39*s13*s14*s24 - &
                   113*s13*s23*s24 - 69*s14*s23*s24 - 74*s23**2*s24 - &
                   37*s13*s24**2 - 52*s23*s24**2 - &
                   4*s12**2*(14*s13 + 11*s14 + 19*s23 + 16*s24) + &
                   4*m**4*(50*s12 + 11*s13 + 39*s14 + 36*s23 + &
                      46*s24) - &
                   s12*(31*s13**2 + 48*s13*s14 + 17*s14**2 + &
                      102*s13*s23 + 83*s14*s23 + 71*s23**2 + &
                      103*s13*s24 + 54*s14*s24 + 138*s23*s24 + &
                      37*s24**2) + &
                   m**2*(36*s12**2 + 19*s13**2 + 34*s13*s14 + &
                      39*s14**2 + 6*s13*s23 + 2*s14*s23 - 13*s23**2 + &
                      94*s13*s24 + 90*s14*s24 + 82*s23*s24 + &
                      95*s24**2 + &
                      s12*(55*s13 + 31*s14 + 33*s23 + 141*s24))) + &
                gm**2*(48*m**8 - &
                   8*m**6*(s12 - 25*s13 + 16*s14 - 9*s23 + 8*s24) - &
                   2*m**4*(26*s12**2 + 73*s13**2 + s14**2 - &
                      18*s14*s23 + 31*s23**2 + 18*s14*s24 + &
                      42*s23*s24 + 47*s24**2 - &
                      2*s13*(17*s14 - 49*s23 + 5*s24) + &
                      s12*(90*s13 - 26*s14 + 66*s23 + 46*s24)) - &
                   (s12 + s13 + s23)*&
                    (6*s12**3 - 4*s13**3 + &
                      s13**2*(-18*s14 - 4*s23 + s24) + &
                      s23*(-3*s14**2 + 11*s14*s23 + 4*s23**2 + &
                        23*s14*s24 + 30*s23*s24 + 26*s24**2) + &
                      s13*(-14*s14**2 + 4*s23**2 + 31*s23*s24 + &
                        15*s24**2 + s14*(-7*s23 + s24)) + &
                      3*s12**2*(s13 + s14 + 7*(s23 + s24)) + &
                      s12*(-7*s13**2 - 3*s14**2 + 19*s23**2 + &
                        56*s23*s24 + 15*s24**2 + &
                        2*s14*(7*s23 + 6*s24) + &
                        s13*(-20*s14 + 12*s23 + 22*s24))) + &
                   m**2*(34*s12**3 + 11*s13**3 + &
                      s13**2*(-46*s14 + 33*s23 + 4*s24) + &
                      2*s12**2*(29*s13 + 6*s14 + 51*s23 + 52*s24) + &
                      s13*(-17*s14**2 - 22*s14*s23 + 43*s23**2 + &
                        28*s14*s24 + 122*s23*s24 + 79*s24**2) + &
                      s23*(s14**2 + 24*s14*s23 + 21*s23**2 + &
                        64*s14*s24 + 118*s23*s24 + 97*s24**2) + &
                      s12*(35*s13**2 + s14**2 + 36*s14*s23 + &
                         89*s23**2 + 46*s14*s24 + 228*s23*s24 + &
                         79*s24**2 + s13*(-40*s14 + 114*s23 + 108*s24)))&
)))/((gm**2 - m**2 + s23)*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
              (gm**2 - m**2 + s24)) - &
           (16*(4*(2*m**2 - s12 - s13 - s23)*&
                 (2*m**4 + s13*(s12 + s13 + s14) - &
                   m**2*(s12 + 5*s13 + s14 - 2*s24))*(s13 - s24)**2 + &
                2*gm**4*(9*m**6 + &
                   m**4*(33*s12 + 173*s13 + 30*s14 + 3*s23 - 57*s24) + &
                   m**2*(10*s12**2 + 33*s13**2 + &
                      2*s12*(18*s13 + 5*(s14 + s23 - s24)) + &
                      10*(s14 - 2*s24)*(s23 + s24) + &
                      s13*(-22*s14 + 56*s23 + 36*s24)) - &
                   s13*(10*s12**2 + 7*s13**2 + 10*s14*(s23 + s24) + &
                      s13*(8*s14 + 7*(s23 + s24)) + &
                      s12*(17*s13 + 10*(s14 + s23 + s24)))) + &
                gm**2*(8*m**6*(5*s13 - 6*s24) + &
                   m**4*(27*s13**2 + 2*s12*(9*s13 - 5*s24) + &
                      (s14 - 11*s23 - 23*s24)*s24 + &
                      3*s13*(s14 + 5*s23 + 4*s24)) + &
                   s13*(16*s13**3 + s12**2*(19*s13 - 17*s24) + &
                      s13**2*(18*s14 + 16*s23 - 7*s24) - &
                      s14*s24*(17*s23 + 8*s24) + &
                      s13*(s14*(19*s23 - 8*s24) - &
                       7*s24*(2*s23 + s24)) + &
                      s12*(35*s13**2 + &
                        s13*(19*s14 + 19*s23 - 24*s24) - &
                        s24*(17*s14 + 17*s23 + 7*s24))) + &
                   m**2*(-95*s13**3 + s12**2*(-19*s13 + 17*s24) + &
                      s13**2*(-21*s14 - 99*s23 + 83*s24) + &
                      s13*(3*s24*(43*s23 + 6*s24) + &
                        s14*(-19*s23 + 7*s24)) + &
                      s24*(-4*s24*(9*s23 + 4*s24) + &
                        s14*(17*s23 + 8*s24)) + &
                      s12*(-121*s13**2 + &
                         (17*s14 + 17*s23 - 29*s24)*s24 + &
                         s13*(-19*s14 - 19*s23 + 138*s24))))))/&
            ((m**2 - s13)**2*(gm**2 - m**2 + s24)) + &
           (16*(4*(2*m**2 - s12 - s13 - s23)*&
                 (2*m**4 + s13*(s12 + s13 + s14) - &
                   m**2*(s12 + 5*s13 + s14 - 2*s24))*&
                 (-2*m**2 + s12 + s14 + s24)**2 + &
                2*gm**6*(3*s13*(s12 + s13 + s14 + s23 + s24) + &
                   m**2*(s12 + 7*s13 + 3*s14 + s23 + s24)) + &
                gm**4*(-132*m**6 + s12**3 - 12*s13**3 - &
                   14*s13**2*s14 - 6*s13*s14**2 - 12*s13**2*s23 - &
                   2*s13*s14*s23 + s14**2*s23 + &
                   s12**2*(-s13 + 2*s14 + s23 - 10*s24) - &
                   26*s13**2*s24 - 35*s13*s14*s24 - 12*s14**2*s24 - &
                   14*s13*s23*s24 - 11*s14*s23*s24 - 29*s13*s24**2 - &
                   24*s14*s24**2 - 12*s23*s24**2 - 12*s24**3 + &
                   m**4*(-18*s12 + 154*s13 + 52*s14 - 46*s23 + &
                      76*s24) - &
                   s12*(14*s13**2 + 7*s13*s14 - s14**2 + 2*s13*s23 - &
                      2*s14*s23 + 30*s13*s24 + 22*s14*s24 + &
                      11*s23*s24 + 23*s24**2) + &
                   m**2*(20*s12**2 + 66*s13**2 + 93*s13*s14 + &
                      11*s14**2 + 90*s13*s23 + 17*s14*s23 + &
                      109*s13*s24 + 32*s14*s24 + 53*s23*s24 + &
                      29*s24**2 + &
                      s12*(93*s13 + 31*s14 + 17*s23 + 47*s24))) + &
                gm**2*(304*m**8 - &
                   8*m**6*(27*s12 + 6*s13 + 32*s14 - 9*s23 - 7*s24) - &
                   2*m**4*(10*s12**2 + 79*s13**2 - 24*s14**2 + &
                      50*s14*s23 + 5*s14*s24 + 47*s23*s24 + &
                      45*s24**2 + &
                      2*s12*(52*s13 - 7*s14 + 25*s23 + 38*s24) + &
                      s13*(73*s14 + 87*s23 + 94*s24)) - &
                   (s12 + s14 + s24)*&
                    (2*s12**3 + 16*s13**3 + &
                      s12**2*(17*s13 + 4*s14 + 2*s23 + 13*s24) + &
                      s13**2*(24*s14 + 16*s23 + 23*s24) + &
                      s23*(2*s14**2 + 11*s14*s24 + 6*s24**2) + &
                      s13*(12*s14**2 + 15*s14*s23 + 26*s14*s24 + &
                        14*s23*s24 + 11*s24**2) + &
                      s12*(31*s13**2 + 2*s14**2 + 11*s24*(s23 + s24) + &
                        s14*(4*s23 + 13*s24) + &
                        s13*(29*s14 + 15*s23 + 36*s24))) + &
                   m**2*(30*s12**3 + 28*s13**3 + 2*s14**3 + &
                      36*s14**2*s23 - 7*s14**2*s24 + 71*s14*s23*s24 - &
                      8*s14*s24**2 + 33*s23*s24**2 + s24**3 + &
                      2*s12**2*(75*s13 + 31*s14 + 18*s23 + 46*s24) + &
                      s13**2*(143*s14 + 28*s23 + 141*s24) + &
                      s13*(97*s14**2 + 129*s14*s23 + 207*s14*s24 + &
                        127*s23*s24 + 108*s24**2) + &
                      s12*(153*s13**2 + 34*s14**2 + 72*s14*s23 + &
                         85*s14*s24 + 71*s23*s24 + 67*s24**2 + &
                         s13*(247*s14 + 129*s23 + 270*s24))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s24)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (4*(gm**6*(-168*m**6 + &
                   m**4*(34*s12 + 119*s13 - 51*s14 - 63*s23 - &
                      77*s24) + &
                   m**2*(13*s12**2 - 33*s13*s14 + 9*s14**2 + &
                      26*s13*s23 - 48*s14*s23 - 12*s23**2 + &
                      s12*(21*s13 - 11*s14 + s23 - 11*s24) + &
                      21*s13*s24 - 55*s14*s24 - 36*s23*s24 - 24*s24**2&
) + s14*(27*s12**2 + 10*s13**2 + 62*s13*s14 + 52*s14**2 + 22*s13*s23 + &
                      63*s14*s23 + 12*s23**2 + 35*s13*s24 + &
                      76*s14*s24 + 36*s23*s24 + 24*s24**2 + &
                      s12*(37*s13 + 79*s14 + 39*s23 + 51*s24))) - &
                2*(2*m**2 - s12 - s13 - s14)*(s14 - s23)*&
                 (8*m**8 + 2*s13**3*s14 + 2*s13**2*s14**2 + &
                   2*s13*s14**3 + 2*s14**4 + 2*s12**3*(s14 - s23) + &
                   2*s13**2*s14*s23 - 2*s14**3*s23 - s13*s14*s23**2 + &
                   s14**2*s23**2 - s14*s23**3 + 2*s13*s14**2*s24 + &
                   2*s14**3*s24 - s13**2*s23*s24 - 5*s13*s14*s23*s24 - &
                   3*s14**2*s23*s24 - s13*s23**2*s24 + &
                   s13*s14*s24**2 - 2*s13*s23*s24**2 - &
                   4*m**6*(2*s12 + s13 + s14 + 3*s23 + s24) + &
                   s12**2*(4*s13*s14 + 4*s14**2 - 3*s13*s23 - &
                      s14*s23 - 3*s23**2 + 3*s14*s24 - 4*s23*s24) + &
                   m**4*(2*s12**2 + 5*s13**2 - 8*s14**2 + 6*s14*s23 + &
                      12*s23**2 + 2*s12*(2*s13 - s14 + 7*s23) + &
                      s13*(-9*s14 + 17*s23 - 2*s24) - 5*s14*s24 + &
                      9*s23*s24 - s24**2) + &
                   m**2*(-2*s13**3 - 2*s14**3 + 7*s14**2*s23 - &
                      8*s14*s23**2 + s23**3 - s14**2*s24 + &
                      s14*s23*s24 + s23**2*s24 - s14*s24**2 + &
                      2*s23*s24**2 + s12**2*(-s13 - 2*s14 + s24) + &
                      s13**2*(-4*s14 - 5*s23 + s24) + &
                      s13*(12*s14**2 - 13*s14*s23 - 4*s23**2 + &
                        7*s14*s24 - s23*s24 + s24**2) + &
                      s12*(-3*s13**2 + 2*s14**2 + s24*(3*s23 + s24) - &
                        s14*(6*s23 + s24) + s13*(s14 - 7*s23 + 2*s24))&
) + s12*(4*s14**3 + s13**2*(4*s14 - s23) - s14**2*(s23 - 3*s24) + &
                      s14*(-2*s23**2 - 2*s23*s24 + s24**2) - &
                      s23*(s23**2 + 3*s23*s24 + 2*s24**2) + &
                      s13*(4*s14**2 + 3*s14*s24 - s23*(2*s23 + 5*s24)))&
) - gm**4*(324*m**8 + 12*s12**4 - 12*s13**3*s14 + 52*s13*s14**3 + &
                   40*s14**4 - 2*s13**2*s14*s23 + 3*s13*s14**2*s23 + &
                   4*s14**3*s23 + 6*s13**2*s23**2 + &
                   29*s13*s14*s23**2 + 18*s14**2*s23**2 + &
                   6*s13*s23**3 + 16*s14*s23**3 + 19*s13**2*s14*s24 + &
                   54*s13*s14**2*s24 + 34*s14**3*s24 + &
                   13*s13**2*s23*s24 + 38*s13*s14*s23*s24 - &
                   7*s14**2*s23*s24 + 16*s13*s23**2*s24 + &
                   38*s14*s23**2*s24 + 12*s13**2*s24**2 + &
                   33*s13*s14*s24**2 - 6*s14**2*s24**2 + &
                   8*s13*s23*s24**2 + 20*s14*s23*s24**2 + &
                   s12**3*(24*s13 + 61*s14 + 23*s23 + 24*s24) + &
                   m**6*(-44*s12 - 451*s13 + 115*s14 + 83*s23 + &
                      289*s24) + &
                   s12**2*(12*s13**2 + 117*s14**2 + 74*s14*s23 + &
                      15*s23**2 + 94*s14*s24 + 31*s23*s24 + &
                      12*s24**2 + 6*s13*(13*s14 + 6*s23 + 8*s24)) - &
                   m**4*(139*s12**2 - 144*s13**2 + 256*s14**2 + &
                      212*s14*s23 + 75*s23**2 + 281*s14*s24 + &
                      112*s23*s24 - 19*s24**2 + &
                      3*s12*(27*s13 + 147*s14 + 55*s23 + 67*s24) + &
                      s13*(140*s14 + 167*s23 + 300*s24)) + &
                   s12*(108*s14**3 + &
                      s13**2*(5*s14 + 13*s23 + 24*s24) + &
                      s14**2*(55*s23 + 95*s24) + &
                      4*s23*(s23**2 + 3*s23*s24 + 2*s24**2) + &
                      s13*(97*s14**2 + 54*s14*s23 + 23*s23**2 + &
                        113*s14*s24 + 44*s23*s24 + 24*s24**2) + &
                      s14*(45*s23**2 + 75*s23*s24 + 33*s24**2)) + &
                   m**2*(22*s12**3 - 46*s14**3 + 78*s14**2*s23 + &
                      25*s14*s23**2 - 22*s23**3 - 39*s14**2*s24 + &
                      88*s14*s23*s24 - 54*s23**2*s24 - 17*s14*s24**2 - &
                      28*s23*s24**2 + &
                      s13**2*(103*s14 + 65*s23 + 84*s24) + &
                      s12**2*(106*s13 + 90*s14 - 19*(s23 + s24)) + &
                      s13*(127*s14**2 - 3*s23**2 - 20*s23*s24 - &
                        41*s24**2 + 4*s14*(37*s23 + 35*s24)) + &
                      s12*(84*s13**2 + 49*s14**2 + 77*s14*s23 - &
                        36*s23**2 + 16*s14*s24 - 83*s23*s24 - &
                        41*s24**2 + s13*(275*s14 + 78*s23 + 65*s24)))) &
+ gm**2*(288*m**10 - 4*s13**4*s14 - 26*s13**3*s14**2 - &
                   42*s13**2*s14**3 - 24*s13*s14**4 - 4*s14**5 + &
                   s12**4*(2*s14 - s23) + 20*s13**3*s14*s23 + &
                   32*s13**2*s14**2*s23 + 5*s13*s14**3*s23 - &
                   4*s14**4*s23 + 18*s13**2*s14*s23**2 + &
                   40*s13*s14**2*s23**2 + 18*s14**3*s23**2 - &
                   8*s13*s14*s23**3 - 8*s14**2*s23**3 - 2*s14*s23**4 - &
                   8*m**8*(26*s12 + 47*s13 + 20*s14 + 18*s23 - &
                      19*s24) - 9*s13**2*s14**2*s24 - &
                   22*s13*s14**3*s24 - 10*s14**4*s24 + &
                   10*s13**3*s23*s24 + 38*s13**2*s14*s23*s24 + &
                   54*s13*s14**2*s23*s24 + 22*s14**3*s23*s24 + &
                   2*s13**2*s23**2*s24 + 7*s14**2*s23**2*s24 - &
                   8*s13*s23**3*s24 - 22*s14*s23**3*s24 + &
                   4*s13**2*s14*s24**2 - 2*s13*s14**2*s24**2 - &
                   6*s14**3*s24**2 - 4*s13**2*s23*s24**2 + &
                   9*s13*s14*s23*s24**2 + 22*s14**2*s23*s24**2 - &
                   10*s13*s23**2*s24**2 - 22*s14*s23**2*s24**2 + &
                   m**6*(-4*s12**2 + 183*s13**2 - 197*s14**2 + &
                      192*s14*s23 + 69*s23**2 + &
                      2*s13*(15*s14 + 110*s23 - 94*s24) + &
                      4*s12*(37*s13 - 8*s14 + 23*s23 - 36*s24) - &
                      136*s14*s24 - 10*s23*s24 + 13*s24**2) + &
                   s12**3*(-2*s14**2 + s23*(8*s13 - 7*s23 - 5*s24) + &
                      6*s14*(2*s23 + s24)) - &
                   s12**2*(10*s14**3 + s13**2*(10*s14 - 19*s23) + &
                      s14**2*(-19*s23 + 2*s24) + &
                      4*s23*(2*s23**2 + 5*s23*s24 + s24**2) - &
                      2*s14*(s23**2 + 10*s23*s24 + 2*s24**2) + &
                      s13*(33*s14**2 + s23**2 - 4*s14*(16*s23 + 3*s24))&
) + m**4*(16*s12**3 - 32*s13**3 + 199*s14**3 - 117*s14**2*s23 - &
                      40*s14*s23**2 - 22*s23**3 + 72*s14**2*s24 - &
                      56*s14*s23*s24 + 7*s23**2*s24 - 25*s14*s24**2 + &
                      11*s23*s24**2 + &
                      8*s12**2*(4*s13 + 3*s14 + 4*s23 + 2*s24) + &
                      s13**2*(-124*s23 + 69*s24) + &
                      s13*(181*s14**2 - 100*s14*s23 - 40*s23**2 + &
                        68*s14*s24 + 114*s23*s24 - 21*s24**2) + &
                      s12*(-16*s13**2 + 184*s14**2 - 13*s23**2 + &
                        72*s23*s24 - 21*s24**2 + &
                        3*s14*(-37*s23 + s24) + &
                        s13*(58*s14 - 33*s23 + 85*s24))) - &
                   s12*(10*s14**4 + 2*s13**3*(6*s14 - 5*s23) - &
                      2*s14**3*(s23 - 7*s24) + &
                      s14*s23*(16*s23**2 + 23*s23*s24 - 9*s24**2) + &
                      s14**2*(-27*s23**2 - 43*s23*s24 + 2*s24**2) + &
                      2*s23**2*(s23**2 + 6*s23*s24 + 5*s24**2) + &
                      3*s13**2*&
                       (19*s14**2 - 2*s14*(12*s23 + s24) - &
                        s23*(2*s23 + 5*s24)) + &
                      s13*(53*s14**3 + s14**2*(-61*s23 + 11*s24) + &
                        2*s23*(3*s23**2 + 9*s23*s24 + 4*s24**2) - &
                        s14*(33*s23**2 + 58*s23*s24 + 8*s24**2))) + &
                   m**2*(s12**4 - 38*s14**4 + 35*s14**3*s23 - &
                      39*s14**2*s23**2 + 34*s14*s23**3 + 2*s23**4 + &
                      4*s13**3*(3*s14 + 6*s23 - 2*s24) + 2*s14**3*s24 - &
                      28*s14**2*s23*s24 + 8*s14*s23**2*s24 + &
                      30*s23**3*s24 + 16*s14**2*s24**2 - &
                      33*s14*s23*s24**2 + 32*s23**2*s24**2 + &
                      s12**3*(-6*s13 + 12*s14 - 19*s23 + 9*s24) + &
                      s13**2*&
                       (37*s14**2 - 34*s14*s23 + 8*s23**2 - &
                        66*s23*s24 + 8*s24**2) + &
                      s12**2*&
                       (-15*s13**2 + 2*s14**2 + 5*s23**2 - &
                        30*s14*(s23 - s24) - 26*s23*s24 + 8*s24**2 + &
                        2*s13*(11*s14 - 31*s23 + 5*s24)) - &
                      s13*(27*s14**3 + 5*s14**2*(s23 - 2*s24) + &
                        s14*(34*s23**2 + 78*s23*s24 - 13*s24**2) + &
                        s23*(-4*s23**2 + 24*s23*s24 + 5*s24**2)) + &
                      s12*(-8*s13**3 - 59*s14**3 + &
                         s13**2*(22*s14 - 19*s23 - 7*s24) + &
                         4*s14**2*(8*s23 + 5*s24) + &
                         s23*(22*s23**2 + 33*s23*s24 - 5*s24**2) + &
                         s14*(-16*s23**2 - 44*s23*s24 + 13*s24**2) + &
                         s13*&
                         (31*s14**2 - 110*s14*s23 - 19*s23**2 + &
                         30*s14*s24 - 92*s23*s24 + 16*s24**2))))))/&
            ((m**2 - s14)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s23)*(gm**2 - m**2 + s24)) + &
           (16*(-4*(s13 - s24)*(-2*m**2 + s12 + s14 + s24)**2*&
                 (s13**2*s14 + s13*s14**2 + s13*s14*s23 - &
                   3*m**4*(s13 - s24) + s12**2*(s13 - s24) + &
                   s13**2*s24 + 2*s13*s14*s24 - s14*s23*s24 - &
                   s23**2*s24 - s14*s24**2 - 2*s23*s24**2 - s24**3 + &
                   m**2*(2*s13**2 - s14**2 + 3*s13*s23 + s23**2 + &
                      s12*(2*s13 - s14 + s23 - 2*s24) - 2*s14*s24 - &
                      s23*s24 - 2*s24**2) + &
                   s12*(s13**2 + s13*(2*s14 + s23 + s24) - &
                      s24*(s14 + 2*(s23 + s24)))) + &
                2*gm**6*(120*m**6 - &
                   3*s13*(s12 - 2*s14 + s23 + s24)*&
                    (s12 + s13 + s14 + s23 + s24) + &
                   m**4*(40*s12 + 103*s13 + 9*s14 + 40*s23 + 40*s24) - &
                   m**2*(s12**2 - 11*s13**2 + &
                      (s23 + s24)*(7*s14 + s23 + s24) + &
                      s12*(-15*s13 + 7*s14 + 2*(s23 + s24)) - &
                      s13*(s14 + 15*(s23 + s24)))) + &
                gm**4*(-152*m**8 - 3*s12**4 + 6*s13**3*s14 + &
                   2*s13**2*s14**2 - 4*s13*s14**3 + s13**2*s14*s23 - &
                   3*s13*s14**2*s23 - 5*s13*s14*s23**2 - &
                   3*s14**2*s23**2 - &
                   2*m**6*(82*s12 + 343*s13 + 87*s14 + 67*s23 - &
                      53*s24) - 3*s13**3*s24 - 7*s13**2*s14*s24 - &
                   8*s13*s14**2*s24 - 5*s13**2*s23*s24 + &
                   15*s13*s14*s23*s24 + 2*s14**2*s23*s24 - &
                   2*s13*s23**2*s24 + 2*s14*s23**2*s24 - &
                   12*s13**2*s24**2 + 10*s13*s14*s24**2 + &
                   2*s14**2*s24**2 + 12*s13*s23*s24**2 + &
                   6*s14*s23*s24**2 + 2*s23**2*s24**2 + &
                   14*s13*s24**3 + 4*s14*s24**3 + 4*s23*s24**3 + &
                   2*s24**4 - &
                   2*s12**3*(3*s13 + 3*s14 + 3*s23 + 2*s24) - &
                   s12**2*(6*s13**2 + 3*s14**2 + 3*s23**2 + &
                      2*s23*s24 - 3*s24**2 + 2*s14*(6*s23 + s24) + &
                      s13*(13*s14 + 11*s23 + 7*s24)) + &
                   m**4*(64*s12**2 - 79*s13**2 + 35*s14**2 + &
                      17*s14*s23 - 16*s23**2 + 17*s14*s24 + &
                      72*s23*s24 + 12*s24**2 - &
                      s13*(8*s14 + 153*s23 + s24) + &
                      s12*(-15*s13 + 103*s14 + 21*s23 + 67*s24)) - &
                   s12*(3*s13**3 + s14**2*(6*s23 - 2*s24) + &
                      2*s13**2*(2*s14 + 4*s23 + 9*s24) + &
                      s14*(6*s23**2 - 8*s24**2) - &
                      2*s24*(s23**2 + 4*s23*s24 + 3*s24**2) + &
                      s13*(11*s14**2 + 5*s23**2 + 8*s23*s24 - &
                        13*s24**2 + 2*s14*(7*s23 + 6*s24))) + &
                   m**2*(13*s12**3 - 5*s13**3 + 2*s14**2*s23 + &
                      13*s14*s23**2 + &
                      s13**2*(38*s14 - 8*s23 - 4*s24) + 4*s14**2*s24 + &
                      s14*s23*s24 + 4*s23**2*s24 - 10*s14*s24**2 - &
                      10*s23*s24**2 - 14*s24**3 + &
                      s12**2*(63*s13 + 15*s14 + 26*s23 + 16*s24) + &
                      s13*(35*s14**2 + 6*s14*s23 + 5*s23**2 + &
                        136*s14*s24 + 47*s23*s24 + 104*s24**2) + &
                      s12*(-6*s13**2 + 2*s14**2 + 28*s14*s23 + &
                        13*s23**2 - 7*s14*s24 + 20*s23*s24 - &
                        11*s24**2 + s13*(82*s14 + 39*s23 + 140*s24)))) &
- gm**2*(192*m**10 - 8*m**8*(22*s12 + 35*s13 + 19*s14 - 5*s23 - &
                      13*s24) + &
                   2*m**6*(12*s12**2 - 77*s13**2 + 19*s14**2 - &
                      24*s14*s23 - 7*s23**2 + 38*s14*s24 + &
                      52*s23*s24 - 7*s24**2 + &
                      2*s12*(s13 + 17*s14 - 17*s23 + 11*s24) + &
                      s13*(-24*s14 - 82*s23 + 96*s24)) + &
                   m**4*(12*s12**3 - 10*s13**3 - 5*s14**3 + &
                      12*s14**2*s23 + 5*s14*s23**2 + &
                      s13**2*(55*s14 - 62*s23 - 29*s24) + &
                      2*s12**2*(43*s13 + 5*s14 + 13*s23 - 17*s24) - &
                      73*s14**2*s24 - 10*s14*s23*s24 + 37*s23**2*s24 - &
                      147*s14*s24**2 - 24*s23*s24**2 - 83*s24**3 + &
                      2*s13*(67*s14**2 + 16*s14*s23 - 10*s23**2 + &
                        83*s14*s24 + 72*s23*s24 + 83*s24**2) + &
                      s12*(-s13**2 - 7*s14**2 + 38*s14*(s23 - 3*s24) + &
                        2*s13*(103*s14 + 25*s23 + 95*s24) + &
                        5*(s23**2 + 2*s23*s24 - 21*s24**2))) + &
                   m**2*(-2*s12**4 + s14**3*s23 + s14**2*s23**2 + &
                      3*s14**3*s24 - 24*s14**2*s23*s24 - &
                      18*s14*s23**2*s24 + 19*s14**2*s24**2 - &
                      59*s14*s23*s24**2 - 17*s23**2*s24**2 + &
                      25*s14*s24**3 - 32*s23*s24**3 + 9*s24**4 + &
                      6*s13**3*(4*s14 + s24) - &
                      s12**3*(9*s13 + 3*s14 + s23 + 15*s24) + &
                      s13**2*&
                       (8*s14**2 + 28*s14*s23 - 20*s14*s24 + &
                        26*s23*s24 + 6*s24**2) + &
                      s12**2*&
                       (29*s13**2 + s23**2 + &
                        s13*(-43*s14 + 16*s23 - 89*s24) - &
                        39*s23*s24 - 16*s24**2 - s14*(s23 + 18*s24)) + &
                      s13*(-34*s14**3 + s14**2*(29*s23 - 117*s24) + &
                        2*s14*(4*s23**2 + s23*s24 - 70*s24**2) + &
                        s24*(24*s23**2 + 9*s23*s24 - 55*s24**2)) + &
                      s12*(6*s13**3 + s14**3 + s14**2*s23 + &
                        s13**2*(37*s14 + 16*s23 + 35*s24) + &
                        s13*(-68*s14**2 + 45*s14*s23 + 8*s23**2 - &
                        195*s14*s24 + 3*s23*s24 - 135*s24**2) + &
                        2*s24*(-9*s23**2 - 31*s23*s24 + 3*s24**2) + &
                        s14*(2*s23**2 - 63*s23*s24 + 13*s24**2))) + &
                   (s12 + s14 + s24)*&
                    (4*s12**3*s24 + 2*s13**3*(2*s14 + 5*s24) + &
                      s13**2*&
                       (8*s14**2 + 6*s14*s23 + 26*s14*s24 + &
                        2*s23*s24 + 5*s24**2) + &
                      s12**2*&
                       (10*s13**2 + s13*(4*s14 + 2*s23 - 7*s24) + &
                        s24*(5*s14 + 5*s23 + 13*s24)) + &
                      s24*(s14**2*(s23 + 4*s24) + &
                        2*s24*(s23**2 + 5*s23*s24 + 4*s24**2) + &
                        s14*(s23**2 + 13*s23*s24 + 12*s24**2)) + &
                      s13*(4*s14**3 + 10*s14**2*s24 + &
                        s14*(2*s23**2 - 11*s23*s24 - 7*s24**2) - &
                        s24*(8*s23**2 + 23*s23*s24 + 15*s24**2)) + &
                      s12*(10*s13**3 + &
                         3*s13**2*(6*s14 + 4*s23 + 5*s24) + &
                         2*s13*&
                        (4*s14**2 + s14*s23 + s23**2 - 8*s23*s24 - &
                        11*s24**2) + &
                         s24*&
                         (s14**2 + 6*s14*s23 + s23**2 + 14*s14*s24 + &
                         12*s23*s24 + 17*s24**2))))))/&
            ((m**2 - s13)*(m**2 - s14)*(gm**2 - m**2 + s24)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (4*(2*gm**6*(46*m**6 + 6*s12**3 + s13*s14*s23 + &
                   3*s13*s23**2 + 6*s14*s23**2 + 3*s23**3 + &
                   5*s13**2*s24 + 6*s13*s14*s24 + 6*s13*s23*s24 + &
                   6*s14*s23*s24 + 6*s23**2*s24 + 3*s13*s24**2 + &
                   3*s23*s24**2 + &
                   m**4*(-38*s12 + s13 - 11*s14 - 45*s23 + 11*s24) + &
                   s12**2*(11*s13 + 6*s14 + 15*s23 + 12*s24) + &
                   m**2*(4*s12**2 - 5*s13**2 + &
                      s12*(-3*s13 + 5*s14 - 4*s23) + 5*s14*s23 - &
                      8*s23**2 + s13*(-7*s14 + s23 - 14*s24) - &
                      6*s14*s24 - 12*s23*s24 - 4*s24**2) + &
                   s12*(5*s13**2 + 6*(s14 + s23 + s24)*(2*s23 + s24) + &
                      s13*(5*s14 + 14*(s23 + s24)))) + &
                gm**4*(1732*m**8 - 21*s12**4 + 3*s13**2*s14*s23 + &
                   s13*s14**2*s23 - 4*s13**2*s23**2 - &
                   8*s13*s14*s23**2 - 12*s14**2*s23**2 - &
                   16*s13*s23**3 - 6*s14*s23**3 - 12*s23**4 - &
                   11*s13**3*s24 - 23*s13**2*s14*s24 - &
                   14*s13*s14**2*s24 - 20*s13**2*s23*s24 - &
                   28*s13*s14*s23*s24 - 3*s14**2*s23*s24 - &
                   22*s13*s23**2*s24 - 3*s14*s23**2*s24 - &
                   8*s23**3*s24 - 14*s13**2*s24**2 - &
                   27*s13*s14*s24**2 - s13*s23*s24**2 + &
                   25*s14*s23*s24**2 + 28*s23**2*s24**2 + &
                   5*s13*s24**3 + 22*s14*s24**3 + 46*s23*s24**3 + &
                   22*s24**4 - &
                   s12**3*(51*s13 + 33*s14 + 60*s23 + 32*s24) - &
                   m**6*(852*s12 - 319*s13 + 167*s14 + 211*s23 + &
                      593*s24) - &
                   s12**2*(41*s13**2 + 12*s14**2 + 72*s14*s23 + &
                      69*s23**2 + 26*s14*s24 + 49*s23*s24 - &
                      14*s24**2 + s13*(41*s14 + 95*s23 + 80*s24)) + &
                   m**4*(29*s12**2 - 23*s13**2 - 12*s14**2 - &
                      152*s14*s23 - 285*s23**2 + &
                      s13*(3*s14 + 50*s23 - 344*s24) - 10*s14*s24 - &
                      471*s23*s24 - 424*s24**2 - &
                      s12*(99*s13 + 155*s14 + 315*s23 + 431*s24)) - &
                   s12*(11*s13**3 + 42*s23**3 + 25*s23**2*s24 - &
                      50*s23*s24**2 - 47*s24**3 + &
                      3*s14**2*(8*s23 + s24) + &
                      s13**2*(10*s14 + 37*s23 + 55*s24) + &
                      s14*(45*s23**2 + 29*s23*s24 - 22*s24**2) + &
                      s13*(-s14**2 + 49*s14*s23 + 60*s23**2 + &
                        52*s14*s24 + 86*s23*s24 + 24*s24**2)) + &
                   m**2*(78*s12**3 + 11*s13**3 + 24*s14**2*s23 + &
                      83*s14*s23**2 - 32*s23**3 + 3*s14**2*s24 + &
                      114*s14*s23*s24 + 59*s23**2*s24 + &
                      94*s14*s24**2 + 92*s23*s24**2 + 57*s24**3 + &
                      s13**2*(20*s14 - 5*s23 + 66*s24) + &
                      s12**2*(114*s13 + 97*s14 + 128*s23 + 211*s24) + &
                      s13*(13*s14**2 - 36*s14*s23 + 2*s23**2 + &
                        96*s14*s24 - 22*s23*s24 + 29*s24**2) + &
                      s12*(77*s13**2 + 24*s14**2 + 180*s14*s23 + &
                        18*s23**2 + 131*s14*s24 + 267*s23*s24 + &
                        183*s24**2 + s13*(27*s14 + 49*s23 + 176*s24)))) &
- 2*(s13 - s24)*(-2*m**2 + s12 + s23 + s24)*&
                 (-8*m**8 + s13**2*s14*s23 + 2*s13*s14**2*s23 + &
                   s13*s14*s23**2 + &
                   4*m**6*(2*s12 + 11*s13 + s14 + s23 - 7*s24) + &
                   2*s12**3*(s13 - s24) + s13**3*s24 + &
                   s13**2*s23*s24 + 5*s13*s14*s23*s24 - &
                   s14**2*s23*s24 - 2*s13*s23**2*s24 - 2*s23**3*s24 - &
                   s13**2*s24**2 + 3*s13*s14*s24**2 - &
                   2*s14*s23*s24**2 - 2*s23**2*s24**2 + 2*s13*s24**3 - &
                   2*s14*s24**3 - 2*s23*s24**3 - 2*s24**4 + &
                   m**4*(-2*s12**2 + 4*s13**2 + s14**2 + 2*s14*s23 - &
                      5*s23**2 + s13*(7*s14 - 17*s23 - 22*s24) - &
                      2*s12*(7*s13 + 2*s23 - s24) - 11*s14*s24 + &
                      9*s23*s24 + 8*s24**2) + &
                   s12**2*(3*s13**2 + s13*(4*s14 + 3*s23 + s24) - &
                      s24*(3*s14 + 4*(s23 + s24))) - &
                   m**2*(s13**3 + s14**2*s23 + s14*s23**2 - &
                      2*s23**3 + &
                      s12**2*(8*s13 + s14 - s23 - 10*s24) - &
                      s14**2*s24 - 9*s14*s23*s24 - 4*s23**2*s24 - &
                      s14*s24**2 - 20*s23*s24**2 - 2*s24**3 + &
                      s13**2*(s14 - 4*s23 + 8*s24) + &
                      s13*(2*s14**2 + 15*s14*s23 - 5*s23**2 + &
                        s14*s24 + 19*s23*s24 - 9*s24**2) + &
                      s12*(8*s13**2 + s14**2 + 2*s14*s23 - 3*s23**2 - &
                        9*s14*s24 - 15*s23*s24 - 14*s24**2 + &
                        s13*(11*s14 + 9*s23 + 2*s24))) + &
                   s12*(s13**3 + &
                      s13*(2*s14**2 + 5*s14*s23 + s23**2 + &
                        2*s14*s24 + s24**2) + &
                      s13**2*(3*s14 + 2*(s23 + s24)) - &
                      s24*(s14**2 + 3*s14*(s23 + s24) + &
                        4*(s23**2 + s23*s24 + s24**2)))) + &
                gm**2*(224*m**10 + 2*s13**3*s14*s23 + &
                   s13**2*s14**2*s23 + 6*s13**2*s14*s23**2 + &
                   16*s13*s14**2*s23**2 + 4*s13**2*s23**3 + &
                   4*s13*s14*s23**3 + 4*s13*s23**4 - &
                   8*m**8*(26*s12 + 62*s13 + 3*s14 + s23 - 36*s24) + &
                   s12**4*(18*s13 - 19*s24) + 2*s13**4*s24 + &
                   13*s13**3*s14*s24 + 10*s13**2*s14**2*s24 + &
                   14*s13**3*s23*s24 + 16*s13**2*s14*s23*s24 + &
                   18*s13*s14**2*s23*s24 + 10*s13**2*s23**2*s24 + &
                   25*s13*s14*s23**2*s24 - 8*s14**2*s23**2*s24 - &
                   18*s13*s23**3*s24 - 6*s14*s23**3*s24 - &
                   16*s23**4*s24 + 14*s13**3*s24**2 + &
                   4*s13**2*s14*s24**2 - 4*s13*s14**2*s24**2 - &
                   7*s13**2*s23*s24**2 + 20*s13*s14*s23*s24**2 - &
                   8*s14**2*s23*s24**2 - 36*s13*s23**2*s24**2 - &
                   22*s14*s23**2*s24**2 - 28*s23**3*s24**2 - &
                   12*s13**2*s24**3 - 12*s13*s23*s24**3 - &
                   22*s14*s23*s24**3 - 22*s23**2*s24**3 + &
                   2*s13*s24**4 - 6*s14*s24**4 - 16*s23*s24**4 - &
                   6*s24**5 + &
                   s12**3*(34*s13**2 + &
                      s13*(34*s14 + 44*s23 + 13*s24) - &
                      s24*(27*s14 + 60*s23 + 50*s24)) + &
                   m**4*(8*s12**3 + 11*s13**3 + 21*s14**2*s23 + &
                      39*s14*s23**2 - 12*s23**3 - &
                      4*s12**2*(39*s13 - 8*s14 - 8*s23 - 29*s24) + &
                      6*s14**2*s24 - 56*s14*s23*s24 + 27*s23**2*s24 + &
                      42*s14*s24**2 - 69*s23*s24**2 + 42*s24**3 + &
                      s13**2*(65*s14 - 78*s23 + 179*s24) + &
                      s13*(-8*s14**2 + 90*s14*s23 + 25*s23**2 - &
                        102*s14*s24 + 142*s23*s24 - 252*s24**2) + &
                      s12*(133*s13**2 + 21*s14**2 + 71*s14*s23 + &
                        12*s23**2 + s13*(48*s14 - 103*s23 - 337*s24) - &
                        55*s14*s24 + 154*s23*s24 + 136*s24**2)) + &
                   s12**2*(18*s13**3 + &
                      s13**2*(33*s14 + 56*s23 + 50*s24) - &
                      s24*(8*s14**2 + 60*s14*s23 + 79*s23**2 + &
                        47*s14*s24 + 106*s23*s24 + 53*s24**2) + &
                      2*s13*(8*s14**2 + 19*s23**2 - 2*s23*s24 - &
                        9*s24**2 + 4*s14*(9*s23 + 5*s24))) + &
                   m**6*(36*s12**2 - 61*s13**2 + 3*s14**2 - &
                      76*s14*s23 - 63*s23**2 - 80*s14*s24 - &
                      270*s23*s24 - 475*s24**2 + &
                      2*s13*(85*s14 + 38*s23 + 300*s24) + &
                      4*s12*(193*s13 - 5*(5*s23 + 32*s24))) - &
                   m**2*(s12**4 + 2*s13**4 + 12*s14**2*s23**2 - &
                      4*s14*s23**3 - 8*s23**4 - 10*s14**2*s23*s24 - &
                      87*s14*s23**2*s24 - 26*s23**3*s24 + &
                      12*s14**2*s24**2 - 98*s14*s23*s24**2 - &
                      150*s23**2*s24**2 - 22*s14*s24**3 - &
                      160*s23*s24**3 - 60*s24**4 + &
                      s13**3*(15*s14 + 4*s23 + 35*s24) + &
                      s13**2*&
                       (11*s14**2 + 18*s14*s23 - 36*s23**2 + &
                        73*s14*s24 + 18*s23*s24 + 53*s24**2) + &
                      s12**2*&
                       (121*s13**2 + 12*s14**2 + 22*s14*s23 - &
                        31*s23**2 - 92*s14*s24 - 236*s23*s24 - &
                        250*s24**2 + 6*s13*(22*s14 + 24*s23 + 15*s24)) &
+ s12**3*(89*s13 + 13*s14 - 2*(5*s23 + 52*s24)) + &
                      s12*(47*s13**3 - 28*s23**3 + &
                        2*s14**2*(12*s23 - 5*s24) - 158*s23**2*s24 - &
                        393*s23*s24**2 - 201*s24**3 + &
                        s13**2*(71*s14 + 42*s23 + 160*s24) + &
                        s14*(5*s23**2 - 179*s23*s24 - 101*s24**2) + &
                        s13*(34*s14**2 + 233*s14*s23 + 21*s23**2 + &
                        103*s14*s24 + 173*s23*s24 - 35*s24**2)) + &
                      s13*(-34*s23**3 + 2*s14**2*(17*s23 - 6*s24) + &
                        61*s23**2*s24 + 44*s23*s24**2 - 36*s24**3 + &
                        s14*(101*s23**2 + 128*s23*s24 - 22*s24**2))) + &
                   s12*(2*s13**4 + &
                      s13**2*&
                       (s14**2 + 39*s14*s23 + 26*s23**2 + 47*s14*s24 + &
                        47*s23*s24 + 4*s24**2) + &
                      s13**3*(3*s14 + 16*(s23 + 2*s24)) + &
                      s13*(16*s23**3 - 35*s23**2*s24 - 56*s23*s24**2 - &
                        11*s24**3 + 2*s14**2*(16*s23 + 9*s24) + &
                        s14*(42*s23**2 + 65*s23*s24 + 10*s24**2)) - &
                      s24*(54*s23**3 + 84*s23**2*s24 + 66*s23*s24**2 + &
                         28*s24**3 + 8*s14**2*(2*s23 + s24) + &
                         s14*(39*s23**2 + 69*s23*s24 + 30*s24**2))))))/&
            ((m**2 - s13)*(m**2 - s14)*(gm**2 - m**2 + s24)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (16*(2*(-2*m**2 + s12 + s13 + s23)**2*(s13 - s24)*&
                 (4*m**6 + m**4*(-7*s13 + s14 - s23 + 3*s24) + &
                   s13*(s12**2 + s13*s24 + &
                      s12*(s13 + s14 + s23 + s24) + s14*(s23 + 2*s24)) &
- m**2*(s12**2 - 3*s13**2 + s14*s23 + &
                      s12*(5*s13 + s14 + s23 - 3*s24) + 2*s14*s24 - &
                      4*s23*s24 - 4*s24**2 + s13*(s14 + 3*s23 + 8*s24))&
) + 10*gm**6*(65*m**6 + 3*s13*s14*(s12 + s13 + s23 + s24) + &
                   3*m**4*(13*s12 + 6*s13 - 3*s14 + 13*s23 + 13*s24) + &
                   m**2*(6*s12**2 + 5*s13**2 - &
                      3*(s23 + s24)*(s14 - 2*(s23 + s24)) + &
                      3*s12*(3*s13 - s14 + 4*(s23 + s24)) + &
                      s13*(6*s14 + 9*(s23 + s24)))) - &
                gm**4*(904*m**8 + &
                   m**6*(578*s12 - 275*s13 - 153*s14 + 587*s23 + &
                      849*s24) + &
                   m**4*(185*s12**2 + 155*s13**2 - 81*s14*s23 + &
                      182*s23**2 + s13*(63*s14 + 263*s23 - 31*s24) - &
                      107*s14*s24 + 297*s23*s24 + 235*s24**2 + &
                      s12*(269*s13 - 81*s14 + 367*s23 + 295*s24)) + &
                   s13*(-2*s12**3 + s13**2*(38*s14 - 2*s24) + &
                      s12**2*(-4*s13 + 10*s14 - 4*s23 + s24) + &
                      s13*(48*s14*s23 + 22*s14*s24 - 2*s23*s24 + &
                        3*s24**2) + &
                      s12*(-2*s13**2 + 20*s14*s23 - 2*s23**2 + &
                        s13*(48*s14 - 4*s23 - s24) + 7*s14*s24 + &
                        s23*s24 + 3*s24**2) + &
                      s14*(10*s23**2 + 7*s23*s24 + 12*s24**2)) + &
                   m**2*(26*s12**3 - 24*s13**3 - 10*s14*s23**2 + &
                      24*s23**3 - 7*s14*s23*s24 + 32*s23**2*s24 - &
                      12*s14*s24**2 + 32*s23*s24**2 + 24*s24**3 + &
                      2*s13**2*(26*s14 - 9*s23 + 8*s24) + &
                      s12**2*(47*s13 - 10*s14 + 76*s23 + 31*s24) + &
                      s13*(33*s14*s23 + 46*s23**2 + 85*s14*s24 + &
                        41*s23*s24 - 10*s24**2) + &
                      s12*(-13*s13**2 - 20*s14*s23 + 74*s23**2 - &
                        7*s14*s24 + 63*s23*s24 + 29*s24**2 + &
                        s13*(33*s14 + 93*s23 + 42*s24)))) + &
                gm**2*(128*m**10 - &
                   4*m**8*(10*s12 + 153*s13 - 3*s14 + 13*s23 - &
                      107*s24) - &
                   2*m**6*(20*s12**2 - 132*s13**2 + 13*s14*s23 + &
                      7*s23**2 + &
                      s12*(39*s13 + 13*s14 + 27*s23 - 23*s24) + &
                      45*s14*s24 - 26*s23*s24 - 123*s24**2 + &
                      s13*(-18*s14 + 7*s23 + 275*s24)) + &
                   m**4*(6*s12**3 + 57*s13**3 + 2*s14*s23**2 + &
                      4*s23**3 + &
                      2*s12**2*(73*s13 + s14 + 8*s23 - 42*s24) + &
                      5*s14*s23*s24 - 71*s23**2*s24 - 28*s14*s24**2 - &
                      13*s23*s24**2 + 56*s24**3 + &
                      s13**2*(-57*s14 + 132*s23 + 126*s24) + &
                      s13*(5*s14*s23 + 107*s23**2 + 97*s14*s24 - &
                        33*s23*s24 - 165*s24**2) + &
                      s12*(191*s13**2 + 4*s14*s23 + 14*s23**2 + &
                        s13*(5*s14 + 253*s23 - 38*s24) + 5*s14*s24 - &
                        155*s23*s24 - 23*s24**2)) - &
                   s13*(s12 + s13 + s23)*&
                    (4*s12**3 + 5*s13**2*(-2*s14 + s24) + &
                      s12**2*(9*s13 + 4*s14 + 8*s23 + 9*s24) + &
                      s13*(s14*s23 + 18*s14*s24 + 4*s23*s24 + &
                        5*s24**2) + &
                      s14*(4*s23**2 + 21*s23*s24 + 16*s24**2) + &
                      s12*(5*s13**2 + 8*s14*s23 + 4*s23**2 + &
                        21*s14*s24 + 9*s23*s24 + 5*s24**2 + &
                        s13*(s14 + 9*s23 + 14*s24))) + &
                   m**2*(4*s12**4 - 29*s13**4 - &
                      s13**3*(s14 + 34*s23 - 33*s24) + &
                      s12**3*(31*s13 + 4*s14 + 12*s23 - 23*s24) + &
                      s13**2*&
                       (12*s14*s23 + 19*s23**2 + 11*s14*s24 + &
                        86*s23*s24 + 36*s24**2) + &
                      s12**2*&
                       (20*s13**2 + 12*s23**2 - 78*s23*s24 - &
                        59*s24**2 + 3*s14*(4*s23 + 7*s24) + &
                        s13*(3*s14 + 82*s23 + 51*s24)) + &
                      s12*(-36*s13**3 + 4*s23**3 - 87*s23**2*s24 - &
                        123*s23*s24**2 - 32*s24**3 + &
                        s13**2*(12*s14 + 39*s23 + 107*s24) + &
                        s13*(6*s14*s23 + 71*s23**2 + 34*s14*s24 + &
                        70*s23*s24 - 23*s24**2) + &
                        2*s14*(6*s23**2 + 21*s23*s24 + 8*s24**2)) + &
                      s23*(-32*s24*(s23 + s24)**2 + &
                        s14*(4*s23**2 + 21*s23*s24 + 16*s24**2)) + &
                      s13*(20*s23**3 + 19*s23**2*s24 - 38*s23*s24**2 - &
                         32*s24**3 + &
                         s14*(3*s23**2 + 34*s23*s24 + 44*s24**2))))))/&
            ((m**2 - s13)**2*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
              (gm**2 - m**2 + s24)) + &
           (4*(2*gm**6*(-38*m**6 + 6*s12**3 + 6*s13*s14*s23 + &
                   s14**2*s23 + 3*s14*s23**2 + 5*s13*s14*s24 + &
                   6*s13*s23*s24 + 6*s14*s23*s24 + 3*s23**2*s24 + &
                   6*s13*s24**2 + 3*s14*s24**2 + 6*s23*s24**2 + &
                   3*s24**3 + &
                   s12**2*(6*s13 + 7*s14 + 12*s23 + 15*s24) + &
                   m**4*(34*s12 + s13 + s14 - s23 + 27*s24) + &
                   m**2*(16*s12**2 - s14**2 - 2*s14*s23 - 4*s23**2 - &
                      11*s14*s24 + 4*s24**2 - &
                      s13*(11*s14 + 6*s23 + 7*s24) + &
                      s12*(-7*s13 + 5*s14 + 12*s23 + 20*s24)) + &
                   s12*(s14**2 + 10*s14*(s23 + s24) + &
                      6*(s23**2 + 3*s23*s24 + 2*s24**2) + &
                      s13*(s14 + 6*(s23 + 2*s24)))) - &
                2*(s14 - s23)*(-2*m**2 + s12 + s23 + s24)*&
                 (-8*m**8 + 2*s12**3*(s14 - s23) + s14**3*s23 + &
                   3*s13*s14*s23**2 - s14**2*s23**2 - 2*s13*s23**3 + &
                   2*s14*s23**3 - 2*s23**4 + 2*s13**2*s14*s24 + &
                   s13*s14**2*s24 - s13**2*s23*s24 + &
                   5*s13*s14*s23*s24 + s14**2*s23*s24 - &
                   2*s13*s23**2*s24 - 2*s23**3*s24 + s13*s14*s24**2 - &
                   2*s14*s23*s24**2 - 2*s23**2*s24**2 - 2*s23*s24**3 + &
                   4*m**6*(2*s12 + s13 + 11*s14 - 7*s23 + s24) + &
                   m**4*(-2*s12**2 + s13**2 + 4*s14**2 - 22*s14*s23 + &
                      8*s23**2 - 17*s14*s24 + 9*s23*s24 - 5*s24**2 + &
                      s13*(7*s14 - 11*s23 + 2*s24) - &
                      2*s12*(7*s14 - s23 + 2*s24)) + &
                   s12**2*(3*s14**2 + s13*(4*s14 - 3*s23) - &
                      4*s23*(s23 + s24) + s14*(s23 + 3*s24)) - &
                   m**2*(s14**3 + 8*s14**2*s23 - 9*s14*s23**2 - &
                      2*s23**3 + &
                      s12**2*(s13 + 8*s14 - 10*s23 - s24) - &
                      4*s14**2*s24 + 19*s14*s23*s24 - 20*s23**2*s24 - &
                      5*s14*s24**2 - 4*s23*s24**2 - 2*s24**3 + &
                      s13**2*(2*s14 - s23 + s24) + &
                      s13*(s14**2 + s14*s23 - s23**2 + 15*s14*s24 - &
                        9*s23*s24 + s24**2) + &
                      s12*(s13**2 + 8*s14**2 + 2*s14*s23 - &
                        14*s23**2 + 9*s14*s24 - 15*s23*s24 - &
                        3*s24**2 + s13*(11*s14 - 9*s23 + 2*s24))) + &
                   s12*(s14**3 + s13**2*(2*s14 - s23) + &
                      2*s14**2*(s23 + s24) + s14*(s23**2 + s24**2) - &
                      4*s23*(s23**2 + s23*s24 + s24**2) + &
                      s13*(3*s14**2 - 3*s23*(s23 + s24) + &
                        s14*(2*s23 + 5*s24)))) + &
                gm**4*(532*m**8 - 21*s12**4 + 2*s13**2*s14*s23 - &
                   13*s13*s14**2*s23 - 10*s14**3*s23 - &
                   s13*s14*s23**2 + 6*s14**2*s23**2 + 2*s13*s23**3 - &
                   12*s14*s23**3 + 2*s23**4 + 11*s13**2*s14*s24 + &
                   6*s13*s14**2*s24 + 3*s13**2*s23*s24 - &
                   22*s13*s14*s23*s24 - 11*s14**2*s23*s24 + &
                   8*s13*s23**2*s24 - 36*s14*s23**2*s24 - &
                   4*s23**3*s24 + 12*s13**2*s24**2 - s13*s14*s24**2 - &
                   6*s14**2*s24**2 - 6*s13*s23*s24**2 - &
                   60*s14*s23*s24**2 - 40*s23**2*s24**2 - &
                   18*s13*s24**3 - 42*s14*s24**3 - 70*s23*s24**3 - &
                   36*s24**4 - &
                   s12**3*(9*s13 + 52*s14 + 43*s23 + 96*s24) + &
                   m**6*(132*s12 + 97*s13 - 69*s14 - 21*s23 + &
                      221*s24) + &
                   m**4*(53*s12**2 + 12*s13**2 - 20*s14**2 - &
                      84*s14*s23 - 127*s23**2 + &
                      s13*(96*s14 + 121*s23 - 8*s24) + 51*s14*s24 - &
                      104*s23*s24 - 21*s24**2 + &
                      s12*(-23*s13 + 173*s14 - 119*s23 + 9*s24)) + &
                   s12**2*(12*s13**2 - 41*s14**2 - &
                      s13*(8*s14 + 7*s23 + 36*s24) - &
                      s14*(86*s23 + 141*s24) - &
                      5*(4*s23**2 + 31*s23*s24 + 33*s24**2)) + &
                   s12*(-10*s14**3 - 5*s14**2*(7*s23 + 9*s24) + &
                      s13*(s14**2 - 14*s14*s23 + 5*s23**2 - &
                        9*s14*s24 - 13*s23*s24 - 45*s24**2) - &
                      s14*(46*s23**2 + 146*s23*s24 + 131*s24**2) + &
                      2*(2*s23**3 - 31*s23**2*s24 - 91*s23*s24**2 - &
                        63*s24**3) + s13**2*(11*s14 + 3*(s23 + 8*s24))&
) - m**2*(30*s12**3 - 10*s14**3 - 30*s14**2*s23 - 19*s14*s23**2 + &
                      40*s23**3 - s14**2*s24 - 118*s14*s23*s24 + &
                      126*s23**2*s24 - 115*s14*s24**2 + &
                      122*s23*s24**2 + 44*s24**3 + &
                      s12**2*(83*s13 - 65*s14 + 108*s23 + 124*s24) + &
                      s13*(-7*s14**2 + 5*s23**2 + 118*s23*s24 + &
                        73*s24**2 + 24*s14*(s23 + 2*s24)) + &
                      s13**2*(13*s14 + 3*(s23 + 8*s24)) + &
                      s12*(24*s13**2 - 57*s14**2 - 92*s14*s23 + &
                        117*s23**2 - 203*s14*s24 + 251*s23*s24 + &
                        138*s24**2 + s13*(35*s14 + 139*s23 + 156*s24)))&
) + gm**2*(224*m**10 + s12**4*(19*s14 - 20*s23) - 2*s13**2*s14**2*s23 + &
                   4*s13*s14**3*s23 + 2*s14**4*s23 + &
                   14*s13**2*s14*s23**2 + 21*s13*s14**2*s23**2 + &
                   16*s14**3*s23**2 - 6*s13**2*s23**3 - &
                   12*s13*s14*s23**3 - 2*s14**2*s23**3 + 2*s13*s23**4 - &
                   24*s14*s23**4 + 8*s23**5 - 8*s13**2*s14**2*s24 - &
                   4*s13*s14**3*s24 + 27*s13**2*s14*s23*s24 + &
                   30*s13*s14**2*s23*s24 + 16*s14**3*s23*s24 - &
                   4*s13**2*s23**2*s24 + 16*s13*s14*s23**2*s24 + &
                   24*s14**2*s23**2*s24 - 6*s13*s23**3*s24 - &
                   65*s14*s23**3*s24 + 10*s13**2*s14*s24**2 + &
                   6*s13*s14**2*s24**2 + 2*s13**2*s23*s24**2 + &
                   34*s13*s14*s23*s24**2 + 36*s14**2*s23*s24**2 - &
                   11*s13*s23**2*s24**2 - 62*s14*s23**2*s24**2 - &
                   42*s23**3*s24**2 + 8*s13*s14*s24**3 + &
                   12*s14**2*s24**3 - 6*s13*s23*s24**3 - &
                   12*s14*s23*s24**3 - 66*s23**2*s24**3 + &
                   12*s14*s24**4 - 32*s23*s24**4 - &
                   8*m**8*(26*s12 + 3*s13 + 54*s14 - 20*s23 + s24) + &
                   s12**3*(29*s13*s14 + 37*s14**2 - 18*s13*s23 + &
                      10*s14*s23 - 50*s23**2 + 58*s14*s24 - 78*s23*s24) &
+ m**6*(36*s12**2 + 3*s13**2 + 27*s14**2 + 456*s14*s23 - 323*s23**2 + &
                      2*s13*(69*s14 - 8*s23 - 38*s24) + &
                      4*s12*(185*s14 - 128*s23 - 25*s24) + &
                      188*s14*s24 - 318*s23*s24 - 63*s24**2) + &
                   s12**2*(20*s14**3 + 2*s13**2*(5*s14 + s23) + &
                      s14**2*(66*s23 + 73*s24) + &
                      s13*(20*s14**2 + 50*s14*s23 - 32*s23**2 + &
                        66*s14*s24 - 42*s23*s24) + &
                      s14*(-53*s23**2 + 6*s23*s24 + 71*s24**2) - &
                      s23*(36*s23**2 + 145*s23*s24 + 128*s24**2)) + &
                   m**4*(8*s12**3 + 24*s14**3 + 62*s14**2*s23 - &
                      137*s14*s23**2 - 17*s23**3 - 80*s14**2*s24 - &
                      32*s14*s23*s24 + 27*s23**2*s24 - 90*s14*s24**2 + &
                      86*s23*s24**2 - 12*s24**3 + &
                      8*s12**2*(4*s13 - 21*s14 + 10*s23 + 4*s24) + &
                      s13**2*(7*s14 - s23 + 21*s24) + &
                      s13*(21*s14**2 - 4*s14*s23 - 28*s23**2 + &
                        86*s14*s24 - 52*s23*s24 + 39*s24**2) + &
                      s12*(21*s13**2 + 37*s14**2 - 237*s14*s23 + &
                        36*s23**2 - 227*s14*s24 + 198*s23*s24 + &
                        12*s24**2 + s13*(56*s14 - 79*s23 + 71*s24))) + &
                   s12*(2*s14**4 + 18*s14**3*(2*s23 + s24) + &
                      s14**2*(27*s23**2 + 95*s23*s24 + 48*s24**2) + &
                      s23*(2*s23**3 - 71*s23**2*s24 - &
                        161*s23*s24**2 - 102*s24**3) - &
                      s14*(68*s23**3 + 113*s23**2*s24 + &
                        16*s23*s24**2 - 44*s24**3) + &
                      s13**2*&
                       (-8*s14**2 + 4*s23*(-s23 + s24) + &
                        s14*(27*s23 + 20*s24)) + &
                      s13*(-6*s14**3 + s14**2*(51*s23 + 26*s24) - &
                        s23*(16*s23**2 + 43*s23*s24 + 30*s24**2) + &
                        s14*(13*s23**2 + 84*s23*s24 + 45*s24**2))) - &
                   m**2*(s12**4 + 2*s14**4 + 44*s14**3*s23 + &
                      41*s14**2*s23**2 - 63*s14*s23**3 - 38*s23**4 + &
                      12*s14**3*s24 + 40*s14**2*s23*s24 - &
                      55*s14*s23**2*s24 - 123*s23**3*s24 - &
                      2*s14**2*s24**2 - 42*s14*s23*s24**2 - &
                      149*s23**2*s24**2 - 38*s14*s24**3 - &
                      58*s23*s24**3 - 8*s24**4 + &
                      s13**2*&
                       (-10*s14**2 + 27*s14*s23 - 2*s23**2 + &
                        31*s14*s24 + 5*s23*s24 + 12*s24**2) + &
                      s12**3*(13*s13 + 85*s14 - 2*(54*s23 + 5*s24)) + &
                      s12**2*&
                       (12*s13**2 + 101*s14**2 + 98*s14*s23 - &
                        262*s23**2 + 138*s14*s24 - 262*s23*s24 - &
                        31*s24**2 + 2*s13*(59*s14 - 35*s23 + 11*s24)) + &
                      s12*(56*s14**3 - 187*s23**3 - 399*s23**2*s24 - &
                        212*s23*s24**2 - 28*s24**3 + &
                        s13**2*(31*s14 + 5*s23 + 24*s24) + &
                        s14**2*(128*s23 + 65*s24) + &
                        s13*(23*s14**2 + 170*s14*s23 - 104*s23**2 + &
                        214*s14*s24 - 136*s23*s24 + 5*s24**2) + &
                        s14*(-50*s23**2 + 92*s23*s24 + 15*s24**2)) + &
                      2*s13*(-14*s23**3 - 40*s23**2*s24 - &
                         33*s23*s24**2 - 2*s24**3 + &
                         s14**2*(38*s23 + s24) + &
                         s14*(2*s23**2 + 83*s23*s24 + 48*s24**2))))))/&
            ((m**2 - s13)*(m**2 - s14)*(gm**2 - m**2 + s23)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (16*(2*(-2*m**2 + s12 + s13 + s23)**2*&
                 (-2*m**2 + s12 + s14 + s24)**2*&
                 (10*m**4 - s12**2 - s14*s23 - s13*s24 - &
                   s12*(s13 + s14 + s23 + s24) + &
                   m**2*(4*s12 - 3*s13 - s14 + 3*s23 + s24)) + &
                gm**6*(92*m**6 - &
                   2*m**4*(97*s12 + 99*s13 + 127*s14 + 57*s23 + &
                      101*s24) - &
                   m**2*(202*s12**2 + 193*s13**2 + 123*s14**2 + &
                      294*s14*s23 + 127*s23**2 + 348*s14*s24 + &
                      340*s23*s24 + 213*s24**2 + &
                      s13*(320*s14 + 332*s23 + 402*s24) + &
                      s12*(397*s13 + 339*s14 + 329*s23 + 415*s24)) - &
                   3*(13*s12**3 + 16*s13**3 + 13*s14**2*s23 + &
                      21*s14*s23**2 + 8*s23**3 + 14*s14**2*s24 + &
                      49*s14*s23*s24 + 30*s23**2*s24 + 28*s14*s24**2 + &
                      36*s23*s24**2 + 14*s24**3 + &
                      5*s13**2*(6*s14 + 8*s23 + 9*s24) + &
                      s12**2*(42*s13 + 26*s14 + 34*s23 + 40*s24) + &
                      s13*(14*s14**2 + 51*s14*s23 + 32*s23**2 + &
                        57*s14*s24 + 75*s23*s24 + 43*s24**2) + &
                      s12*(45*s13**2 + 13*s14**2 + 47*s14*s23 + &
                        29*s23**2 + 54*s14*s24 + 70*s23*s24 + &
                        41*s24**2 + s13*(56*s14 + 74*s23 + 85*s24)))) - &
                gm**4*(736*m**8 + 47*s12**4 + 48*s13**3*s14 + &
                   72*s13**2*s14**2 + 24*s13*s14**3 + &
                   117*s13**2*s14*s23 + 119*s13*s14**2*s23 + &
                   18*s14**3*s23 + 99*s13*s14*s23**2 + &
                   59*s14**2*s23**2 + 30*s14*s23**3 - &
                   16*m**6*(26*s12 + 13*s13 + 19*s14 - 5*s23 - &
                      13*s24) + 57*s13**3*s24 + 173*s13**2*s14*s24 + &
                   96*s13*s14**2*s24 + 141*s13**2*s23*s24 + &
                   280*s13*s14*s23*s24 + 75*s14**2*s23*s24 + &
                   120*s13*s23**2*s24 + 131*s14*s23**2*s24 + &
                   36*s23**3*s24 + 113*s13**2*s24**2 + &
                   129*s13*s14*s24**2 + 185*s13*s23*s24**2 + &
                   105*s14*s23*s24**2 + 84*s23**2*s24**2 + &
                   57*s13*s24**3 + 48*s23*s24**3 + &
                   s12**3*(151*s13 + 112*s14 + 124*s23 + 151*s24) + &
                   s12**2*(161*s13**2 + 83*s14**2 + 107*s23**2 + &
                      312*s23*s24 + 161*s24**2 + &
                      4*s14*(62*s23 + 61*s24) + &
                      4*s13*(72*s14 + 67*s23 + 92*s24)) - &
                   m**4*(780*s12**2 + 241*s13**2 + 299*s14**2 + &
                      726*s14*s23 + 331*s23**2 + 680*s14*s24 + &
                      540*s23*s24 + 265*s24**2 + &
                      4*s12*(261*s13 + 256*s14 + 284*s23 + 269*s24) + &
                      s13*(740*s14 + 688*s23 + 594*s24)) + &
                   s12*(57*s13**3 + 18*s14**3 + 30*s23**3 + &
                      197*s23**2*s24 + 236*s23*s24**2 + 57*s24**3 + &
                      s14**2*(142*s23 + 93*s24) + &
                      2*s13**2*(112*s14 + 72*s23 + 137*s24) + &
                      s14*(166*s23**2 + 369*s23*s24 + 132*s24**2) + &
                      s13*(161*s14**2 + 381*s14*s23 + 117*s23**2 + &
                        426*s14*s24 + 462*s23*s24 + 274*s24**2)) - &
                   m**2*(35*s13**3 - 18*s14**3 - 52*s14**2*s23 + &
                      88*s14*s23**2 + 74*s23**3 + 51*s14**2*s24 + &
                      56*s14*s23*s24 + 83*s23**2*s24 + &
                      120*s14*s24**2 + 38*s23*s24**2 + 51*s24**3 - &
                      s13**2*(6*s14 - 180*s23 + s24) + &
                      2*s12**2*(37*s13 - 21*s14 + 67*s23 + 25*s24) + &
                      s13*(-85*s14**2 + 152*s14*s23 + 219*s23**2 + &
                        152*s23*s24 + 15*s24**2) + &
                      s12*(105*s13**2 - 64*s14**2 + 64*s14*s23 + &
                        208*s23**2 + 65*s14*s24 + 175*s23*s24 + &
                        101*s24**2 + s13*(-29*s14 + 341*s23 + 90*s24)))&
) + 2*gm**2*(304*m**10 + 16*m**8*&
                    (21*s12 + 10*s13 + 7*s14 + 17*s23 + 8*s24) - &
                   4*m**6*(126*s12**2 + 48*s13**2 + 35*s14**2 + &
                      68*s14*s23 + 27*s23**2 + 49*s14*s24 + &
                      65*s23*s24 + 28*s24**2 + &
                      2*s12*(67*s13 + 59*s14 + 63*s23 + 59*s24) + &
                      s13*(69*s14 + 61*s23 + 86*s24)) - &
                   (s12 + s13 + s23)*(s12 + s14 + s24)*&
                    (8*s12**3 + 2*s13**2*(3*s14 + 5*s24) + &
                      3*s12**2*(6*s13 + 5*s14 + 5*s23 + 6*s24) + &
                      s13*(6*s14**2 + 10*s14*s23 + 13*s14*s24 + &
                        13*s23*s24 + 10*s24**2) + &
                      s23*(7*s14**2 + 6*s24*(s23 + s24) + &
                        s14*(7*s23 + 10*s24)) + &
                      s12*(10*s13**2 + 7*s14**2 + 22*s14*s23 + &
                        7*s23**2 + 17*s14*s24 + 23*s23*s24 + &
                        10*s24**2 + s13*(23*s14 + 17*s23 + 28*s24))) + &
                   2*m**4*(34*s12**3 + 13*s13**3 + 5*s14**3 + &
                      23*s14**2*s23 + 3*s14*s23**2 - 19*s23**3 - &
                      5*s14**2*s24 + 24*s14*s23*s24 + s23**2*s24 - &
                      13*s14*s24**2 + 11*s23*s24**2 - 3*s24**3 + &
                      s12**2*(58*s13 + 50*s14 + 6*s23 + 38*s24) + &
                      s13**2*(47*s14 - 5*s23 + 55*s24) + &
                      s13*(37*s14**2 + 40*s14*s23 - 37*s23**2 + &
                        62*s14*s24 + 46*s23*s24 + 35*s24**2) + &
                      2*s12*(23*s13**2 + 13*s14**2 + 25*s14*s23 - &
                        21*s23**2 + 17*s23*s24 + s24**2 + &
                        s13*(49*s14 - 12*s23 + 57*s24))) + &
                   m**2*(47*s12**4 - 2*s13**3*(s14 - 2*s24) + &
                      4*s12**3*(27*s13 + 25*s14 + 33*s23 + 29*s24) + &
                      s13**2*&
                       (18*s14**2 + 37*s14*(s23 + s24) + &
                        s24*(47*s23 + 23*s24)) + &
                      s12**2*&
                       (65*s13**2 + 60*s14**2 + 222*s14*s23 + &
                        120*s23**2 + 163*s14*s24 + 243*s23*s24 + &
                        89*s24**2 + s13*(183*s14 + 199*s23 + 200*s24)) &
+ s23*(7*s14**3 + s14**2*(37*s23 + 34*s24) + &
                        s24*(33*s23**2 + 38*s23*s24 + 14*s24**2) + &
                        s14*(35*s23**2 + 71*s23*s24 + 41*s24**2)) + &
                      s13*(5*s14**3 + s14**2*(51*s23 + 36*s24) + &
                        s24*(76*s23**2 + 57*s23*s24 + 20*s24**2) + &
                        s14*(74*s23**2 + 100*s23*s24 + 51*s24**2)) + &
                      s12*(4*s13**3 + 7*s14**3 + 35*s23**3 + &
                         160*s23**2*s24 + 121*s23*s24**2 + 20*s24**3 + &
                         11*s13**2*(7*s14 + 5*s23 + 8*s24) + &
                         s14**2*(97*s23 + 46*s24) + &
                         2*s13*&
                        (40*s14**2 + 119*s14*s23 + 43*s23**2 + &
                        98*s14*s24 + 126*s23*s24 + 56*s24**2) + &
                         s14*(157*s23**2 + 222*s23*s24 + 59*s24**2))))))/&
            ((m**2 - s13)*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
              (gm**2 - m**2 + s24)*(gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (16*(-2*(s13 - s24)*(-2*m**2 + s12 + s14 + s24)**2*&
                 (12*m**6 - m**4*&
                    (8*s12 + 23*s13 + 3*s14 + 5*s23 - 3*s24) - &
                   s24*(s12**2 + s14*s23 + &
                      s12*(s13 + s14 + s23 + s24) + s13*(2*s23 + s24)) &
+ m**2*(s12**2 + 4*s13**2 + s14*s23 - s14*s24 + 5*s23*s24 + s24**2 + &
                      2*s13*(2*s14 + s23 + 2*s24) + &
                      s12*(5*s13 + s14 + s23 + 5*s24))) + &
                gm**6*(6*m**6 - &
                   m**4*(50*s12 + 53*s13 + 55*s14 + 19*s23 + 47*s24) + &
                   s13*(s12**2 + 12*s13**2 - 2*s14**2 + s14*s23 + &
                      14*s14*s24 + 16*s23*s24 + 16*s24**2 + &
                      s12*(13*s13 - s14 + s23 + 17*s24) + &
                      s13*(10*s14 + 12*s23 + 31*s24)) + &
                   m**2*(3*s12**2 - 123*s13**2 + 3*s14*s23 + &
                      18*s14*s24 + 8*s23*s24 + 8*s24**2 + &
                      s12*(-77*s13 + 3*s14 + 3*s23 + 11*s24) - &
                      s13*(59*s14 + 45*s23 + 40*s24))) + &
                gm**4*(-136*m**8 + 16*s13**3*s14 + 20*s13**2*s14**2 + &
                   4*s13*s14**3 + 16*s13**2*s14*s23 + &
                   9*s13*s14**2*s23 + 16*s13**3*s24 + &
                   47*s13**2*s14*s24 + 14*s13*s14**2*s24 + &
                   28*s13**2*s23*s24 + 16*s13*s14*s23*s24 + &
                   s14**2*s23*s24 + 30*s13**2*s24**2 + &
                   11*s13*s14*s24**2 - 6*s14**2*s24**2 + &
                   22*s13*s23*s24**2 - 5*s14*s23*s24**2 + s13*s24**3 - &
                   12*s14*s24**3 - 6*s23*s24**3 - 6*s24**4 + &
                   s12**3*(9*s13 + s24) + &
                   m**6*(210*s12 + 57*s13 + 187*s14 + 47*s23 + &
                      109*s24) + &
                   s12**2*(25*s13**2 + (2*s14 + s23 - 4*s24)*s24 + &
                      s13*(22*s14 + 9*s23 + 28*s24)) - &
                   m**4*(35*s12**2 - 433*s13**2 + 22*s14**2 + &
                      13*s14*s23 + 123*s14*s24 + 51*s23*s24 + &
                      51*s24**2 - s13*(199*s14 + 123*s23 + 33*s24) + &
                      s12*(-267*s13 + 57*s14 + 13*s23 + 123*s24)) + &
                   s12*(16*s13**3 + &
                      s13**2*(45*s14 + 16*s23 + 55*s24) + &
                      s13*(17*s14**2 + 4*s24*(4*s23 + 5*s24) + &
                        6*s14*(3*s23 + 7*s24)) + &
                      s24*(s14**2 + 2*s14*(s23 - 5*s24) - &
                        s24*(5*s23 + 11*s24))) - &
                   m**2*(2*s12**3 + 52*s13**3 + 2*s14**2*s23 + &
                      s12**2*(109*s13 + 4*s14 + 2*s23 - 31*s24) - &
                      27*s14**2*s24 - 10*s14*s23*s24 - 64*s14*s24**2 - &
                      31*s23*s24**2 - 29*s24**3 + &
                      s13**2*(175*s14 + 40*s23 + 247*s24) + &
                      s13*(65*s14**2 + 64*s14*s23 + 138*s14*s24 + &
                        122*s23*s24 + 8*s24**2) + &
                      2*s12*(94*s13**2 + s14**2 + 2*s14*s23 - &
                        29*s14*s24 - 5*s23*s24 - 28*s24**2 + &
                        s13*(87*s14 + 32*s23 + 99*s24)))) + &
                gm**2*(192*m**10 - &
                   4*m**8*(46*s12 - 17*s13 + 39*s14 + 7*s23 + 27*s24) + &
                   2*m**6*(20*s12**2 - 243*s13**2 + 15*s14**2 + &
                      5*s14*s23 + 87*s14*s24 + 46*s23*s24 + &
                      68*s24**2 + s13*(-146*s14 - 59*s23 + 19*s24) + &
                      s12*(-191*s13 + 35*s14 + 5*s23 + 127*s24)) + &
                   m**4*(2*s12**3 + 72*s13**3 + 2*s14**2*s23 + &
                      2*s12**2*(116*s13 + 2*s14 + s23 - 63*s24) - &
                      67*s14**2*s24 - 65*s14*s23*s24 - &
                      184*s14*s24**2 - 87*s23*s24**2 - 65*s24**3 + &
                      s13**2*(409*s14 + 44*s23 + 433*s24) + &
                      s13*(143*s14**2 + 111*s14*s23 + 61*s14*s24 + &
                        163*s23*s24 - 170*s24**2) + &
                      s12*(427*s13**2 + 2*s14**2 + 4*s14*s23 - &
                        193*s14*s24 - 65*s23*s24 - 243*s24**2 + &
                        s13*(375*s14 + 111*s23 + 190*s24))) + &
                   (s12 + s14 + s24)*&
                    (2*s12**3*(s13 - s24) + 4*s13**3*(s14 + s24) - &
                      s23*s24*(2*s14**2 + s14*s24 + 6*s24**2) + &
                      s13**2*&
                       (4*s14**2 + 4*s14*s23 + 6*s14*s24 + &
                        20*s23*s24 + 7*s24**2) + &
                      s13*(2*s14**2*(s23 - 2*s24) + &
                        s14*(7*s23 - 10*s24)*s24 + &
                        (2*s23 - 5*s24)*s24**2) + &
                      s12**2*&
                       (6*s13**2 + s13*(4*s14 + 2*s23 + 3*s24) - &
                        s24*(4*s14 + 2*s23 + 3*s24)) + &
                      s12*(4*s13**3 + &
                        s13**2*(10*s14 + 4*s23 + 13*s24) + &
                        s13*(2*s14**2 + 4*s14*s23 - s14*s24 + &
                        7*s23*s24 - 4*s24**2) - &
                        s24*(2*s14**2 + 4*s14*s23 + 3*s14*s24 + &
                        s23*s24 + s24**2))) - &
                   m**2*(s12**3*(33*s13 - 17*s24) + &
                      48*s13**3*(s14 + s24) + &
                      2*s13**2*&
                       (39*s14**2 + 16*s14*s23 + 81*s14*s24 + &
                        30*s23*s24 + 47*s24**2) + &
                      s13*(10*s14**3 + 30*s14*(3*s23 - 2*s24)*s24 + &
                        (61*s23 - 59*s24)*s24**2 + &
                        s14**2*(27*s23 + 7*s24)) - &
                      s24*(2*s14**3 + 5*s14**2*(3*s23 + 7*s24) + &
                        s24**2*(39*s23 + 7*s24) + &
                        4*s14*s24*(10*s23 + 11*s24)) + &
                      s12**2*&
                       (91*s13**2 - s24*(36*s14 + 15*s23 + 70*s24) + &
                        s13*(76*s14 + 27*s23 + 87*s24)) + &
                      s12*(48*s13**3 + &
                         s13**2*(169*s14 + 32*s23 + 185*s24) + &
                         s13*&
                        (53*s14**2 + 54*s14*s23 + 94*s14*s24 + &
                        90*s23*s24 - 5*s24**2) - &
                         s24*&
                         (21*s14**2 + 30*s14*s23 + 105*s14*s24 + &
                         40*s23*s24 + 60*s24**2))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s24)**2*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (4*(gm**8*(64*m**4 + 6*s13*(s12 + s13 + s14 + s23 + s24) - &
                   2*m**2*(3*s12 + 37*s13 + s14 + 3*s23 + 3*s24)) - &
                4*(2*m**2 - s12 - s13 - s14)*&
                 (-2*m**2 + s12 + s14 + s24)**2*&
                 (18*m**6 - m**4*&
                    (11*s12 + 10*s13 + 12*s14 + s23 + 7*s24) + &
                   s24*(s12**2 + s12*(-s13 + s14 + s24) - &
                      s13*(s23 + s24)) + &
                   m**2*(s12**2 + 2*s13**2 + 2*s14**2 + s13*s23 + &
                      3*s13*s24 + 4*s14*s24 + s23*s24 + s24**2 + &
                      s12*(s13 + 3*s14 + 2*s24))) + &
                gm**6*(158*m**6 + 23*s12**3 - 12*s13**3 + &
                   4*s13**2*s14 + 24*s13*s14**2 + 22*s14**3 - &
                   12*s13**2*s23 + 16*s13*s14*s23 + 23*s14**2*s23 - &
                   2*m**4*(4*s12 + 20*s13 + 21*s14 - 52*s23 - &
                      46*s24) - 8*s13**2*s24 + 21*s13*s14*s24 + &
                   44*s14**2*s24 + 10*s13*s23*s24 + 23*s14*s23*s24 - &
                   3*s13*s24**2 + 22*s14*s24**2 + &
                   s12**2*(39*s13 + 68*s14 + 23*(s23 + 2*s24)) + &
                   s12*(4*s13**2 + 67*s14**2 + 23*s24*(s23 + s24) + &
                      s13*(63*s14 + 16*s23 + 36*s24) + &
                      s14*(46*s23 + 90*s24)) - &
                   m**2*(108*s12**2 - 50*s13**2 + 91*s14**2 + &
                      115*s14*s23 + 114*s14*s24 + 33*s23*s24 + &
                      19*s24**2 + s13*(73*s14 + 16*s23 + 35*s24) + &
                      s12*(109*s13 + 199*s14 + 115*s23 + 129*s24))) + &
                gm**4*(-640*m**8 + 11*s12**4 - 16*s13**3*s14 - &
                   12*s13**2*s14**2 - 10*s13*s14**3 - 6*s14**4 - &
                   16*s13**2*s14*s23 - 3*s13*s14**2*s23 + &
                   11*s14**3*s23 - 16*s13**3*s24 - 37*s13**2*s14*s24 - &
                   19*s13*s14**2*s24 + 4*s14**3*s24 - &
                   28*s13**2*s23*s24 + 11*s13*s14*s23*s24 + &
                   42*s14**2*s23*s24 - 25*s13**2*s24**2 - &
                   22*s13*s14*s24**2 + 26*s14**2*s24**2 + &
                   2*s13*s23*s24**2 + 31*s14*s23*s24**2 - &
                   13*s13*s24**3 + 16*s14*s24**3 + &
                   s12**3*(8*s13 + 27*s14 + 11*s23 + 37*s24) + &
                   2*m**6*(118*s12 + 319*s13 + 243*s14 - 71*s23 + &
                      165*s24) + &
                   s12**2*(-19*s13**2 + 15*s14**2 + 33*s14*s23 + &
                      78*s14*s24 + 42*s23*s24 + 41*s24**2 + &
                      3*s13*(2*s14 - s23 + 9*s24)) + &
                   m**4*(154*s12**2 - 278*s13**2 - 155*s14**2 + &
                      207*s14*s23 - &
                      s12*(201*s13 + s14 - 207*s23 - 27*s24) - &
                      172*s14*s24 + 159*s23*s24 + s24**2 - &
                      s13*(335*s14 + 32*s23 + 435*s24)) + &
                   s12*(-16*s13**3 - 7*s14**3 + &
                      s24**2*(31*s23 + 15*s24) - &
                      s13**2*(31*s14 + 16*s23 + 44*s24) + &
                      s14**2*(33*s23 + 45*s24) + &
                      s14*s24*(84*s23 + 67*s24) + &
                      s13*(-12*s14**2 - 6*s14*s23 + 8*s14*s24 + &
                        11*s23*s24 + 6*s24**2)) + &
                   m**2*(-81*s12**3 + 52*s13**3 + 45*s14**3 - &
                      80*s14**2*s23 + &
                      s12**2*(16*s13 - 117*s14 - 80*s23 - 181*s24) - &
                      13*s14**2*s24 - 199*s14*s23*s24 - &
                      67*s14*s24**2 - 33*s23*s24**2 - 3*s24**3 + &
                      s13**2*(119*s14 + 40*s23 + 173*s24) + &
                      s13*(112*s14**2 + 3*s24*(5*s23 + 29*s24) + &
                        5*s14*(3*s23 + 37*s24)) + &
                      s12*(129*s13**2 + 9*s14**2 + &
                        s13*(128*s14 + 15*s23 + 63*s24) - &
                        2*s14*(80*s23 + 97*s24) - &
                        s24*(199*s23 + 99*s24)))) + &
                gm**2*(928*m**10 - &
                   12*m**8*(122*s12 + 89*s13 + 143*s14 - s23 + &
                      81*s24) + &
                   2*m**6*(422*s12**2 + 219*s13**2 + 608*s14**2 - &
                      22*s14*s23 + 653*s14*s24 - 23*s23*s24 + &
                      115*s24**2 + &
                      2*s12*(324*s13 + 515*s14 - 11*s23 + 216*s24) + &
                      s13*(689*s14 + 45*s23 + 580*s24)) - &
                   m**4*(210*s12**3 + 72*s13**3 + 407*s14**3 - &
                      33*s14**2*s23 + 666*s14**2*s24 - &
                      121*s14*s23*s24 + 195*s14*s24**2 - &
                      32*s23*s24**2 - 8*s24**3 + &
                      s12**2*(505*s13 + 827*s14 - 33*s23 + 113*s24) + &
                      s13**2*(375*s14 + 44*s23 + 423*s24) + &
                      s13*(570*s14**2 + 95*s14*s23 + 989*s14*s24 + &
                        119*s23*s24 + 367*s24**2) + &
                      s12*(401*s13**2 + 1024*s14**2 - 66*s14*s23 + &
                        779*s14*s24 - 121*s23*s24 - 23*s24**2 + &
                        5*s13*(215*s14 + 19*s23 + 164*s24))) - &
                   (s12 + s14 + s24)*&
                    (s12**3*(4*s13 + 4*s14 - 17*s24) + &
                      4*s13**3*(s14 + s24) + &
                      s13**2*&
                       (4*s14**2 + 4*s14*(s23 + 3*s24) + &
                        5*s24*(4*s23 + 3*s24)) + &
                      s14*(4*s14**3 + 8*s14**2*s24 - &
                        s14*s24*(11*s23 + 2*s24) - &
                        2*s24**2*(4*s23 + 3*s24)) + &
                      s13*(4*s14**3 + 2*s24**2*(s23 + 2*s24) + &
                        4*s14**2*(s23 + 4*s24) + &
                        s14*s24*(7*s23 + 11*s24)) + &
                      s12**2*&
                       (8*s13**2 + 12*s14**2 + &
                        2*s13*(6*s14 + 2*s23 - 3*s24) - 26*s14*s24 - &
                        s24*(11*s23 + 21*s24)) + &
                      s12*(4*s13**3 + 12*s14**3 - s14**2*s24 - &
                        4*s24**2*(2*s23 + s24) + &
                        s13**2*(12*s14 + 4*s23 + 23*s24) - &
                        s14*s24*(22*s23 + 23*s24) + &
                        s13*(12*s14**2 + 8*s14*s23 + 10*s14*s24 + &
                        7*s23*s24 - 6*s24**2))) + &
                   m**2*(19*s12**4 + 64*s14**4 - 7*s14**3*s23 + &
                      s12**3*(70*s13 + 121*s14 - 7*s23 - 72*s24) + &
                      149*s14**3*s24 - 68*s14**2*s23*s24 + &
                      58*s14**2*s24**2 - 65*s14*s23*s24**2 - &
                      33*s14*s24**3 - 6*s23*s24**3 - 2*s24**4 + &
                      48*s13**3*(s14 + s24) + &
                      2*s13**2*&
                       (34*s14**2 + 30*s24*(s23 + 2*s24) + &
                        s14*(16*s23 + 89*s24)) + &
                      s12**2*&
                       (91*s13**2 + 249*s14**2 + &
                        s14*(-21*s23 + 5*s24) - &
                        4*s24*(17*s23 + 37*s24) + &
                        s13*(224*s14 + 31*s23 + 145*s24)) + &
                      s13*(84*s14**3 + s24**2*(43*s23 + 47*s24) + &
                        2*s14*s24*(38*s23 + 109*s24) + &
                        s14**2*(31*s23 + 265*s24)) + &
                      s12*(48*s13**3 + 211*s14**3 - &
                         2*s14*s24*(68*s23 + 45*s24) - &
                         s24**2*(65*s23 + 59*s24) + &
                         s13**2*(159*s14 + 32*s23 + 211*s24) + &
                         s14**2*(-21*s23 + 226*s24) + &
                         2*s13*&
                         (119*s14**2 + 31*s14*s23 + 205*s14*s24 + &
                         38*s23*s24 + 61*s24**2))))))/&
            ((-gm**2 - 2*m**2 + s12 + s13 + s14)*(gm**2 - m**2 + s24)**2*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)) - &
           (16*(-4*(s14 - s23)*(-2*m**2 + s12 + s14 + s24)**2*&
                 (s13**2*s14 + 2*s13*s14**2 + s14**3 - &
                   3*m**4*(s14 - s23) + s12**2*(s14 - s23) - &
                   s14*s23**2 + s13*s14*s24 + s14**2*s24 - &
                   s13*s23*s24 - 2*s14*s23*s24 - s23**2*s24 - &
                   s23*s24**2 + &
                   m**2*(-s13**2 + 2*s14**2 + s13*(s14 - 3*s23) - &
                      2*s23**2 + 2*s14*s24 + s24**2 + &
                      s12*(-s13 + 2*s14 - 2*s23 + s24)) + &
                   s12*(2*s14**2 + s13*(2*s14 - s23) + &
                      s14*(-s23 + s24) - s23*(s23 + 2*s24))) + &
                2*gm**6*(128*m**6 - 3*s12**3 + 6*s13**2*s14 - &
                   4*s13*s14**2 - 10*s14**3 - 3*s13*s14*s23 - &
                   25*s14**2*s23 - 3*s13*s23**2 - 18*s14*s23**2 - &
                   3*s23**3 - 7*s13*s14*s24 - 29*s14**2*s24 - &
                   6*s13*s23*s24 - 46*s14*s23*s24 - 15*s23**2*s24 - &
                   3*s13*s24**2 - 28*s14*s24**2 - 21*s23*s24**2 - &
                   9*s24**3 - &
                   s12**2*(3*s13 + 16*s14 + 9*s23 + 15*s24) + &
                   m**4*(140*s12 + 35*s13 + 51*s14 + 62*s23 + &
                      116*s24) - &
                   s12*(23*s14**2 + 34*s14*s23 + 9*s23**2 + &
                      44*s14*s24 + 30*s23*s24 + 21*s24**2 + &
                      s13*(7*s14 + 6*(s23 + s24))) + &
                   m**2*(21*s12**2 + 3*s13*s14 - s14**2 + 2*s13*s23 - &
                      30*s14*s23 - 5*s23**2 + 2*s13*s24 - 12*s14*s24 - &
                      10*s23*s24 - 5*s24**2 + &
                      2*s12*(s13 + 3*s14 + 8*(s23 + s24)))) + &
                gm**4*(296*m**8 - 15*s12**4 + 22*s13**2*s14**2 + &
                   14*s13*s14**3 - 8*s14**4 + 18*s13**2*s14*s23 + &
                   33*s13*s14**2*s23 - 51*s14**3*s23 - &
                   3*s13*s14*s23**2 - 79*s14**2*s23**2 - &
                   21*s14*s23**3 + 25*s13**2*s14*s24 + &
                   31*s13*s14**2*s24 - 60*s14**3*s24 + &
                   3*s13**2*s23*s24 + 13*s13*s14*s23*s24 - &
                   212*s14**2*s23*s24 - 21*s13*s23**2*s24 - &
                   168*s14*s23**2*s24 - 24*s23**3*s24 + &
                   14*s13*s14*s24**2 - 132*s14**2*s24**2 - &
                   26*s13*s23*s24**2 - 265*s14*s23*s24**2 - &
                   92*s23**2*s24**2 - 3*s13*s24**3 - 116*s14*s24**3 - &
                   104*s23*s24**3 - 36*s24**4 - &
                   s12**3*(15*s13 + 61*s14 + 53*s23 + 69*s24) - &
                   2*m**6*(290*s12 + 171*s13 + 243*s14 + 303*s23 + &
                      383*s24) - &
                   s12**2*(85*s14**2 + 174*s14*s23 + 59*s23**2 + &
                      214*s14*s24 + 186*s23*s24 + 129*s24**2 + &
                      s13*(21*s14 + 35*s23 + 33*s24)) - &
                   m**4*(312*s12**2 - 6*s13**2 + 550*s14**2 + &
                      625*s14*s23 + 229*s23**2 + 1143*s14*s24 + &
                      764*s23*s24 + 611*s24**2 + &
                      s13*(-36*s14 + 153*s23 + 167*s24) + &
                      s12*(155*s13 + 821*s14 + 615*s23 + 857*s24)) - &
                   s12*(47*s14**3 + 21*s23**3 - &
                      s13**2*(25*s14 + 3*s23) + 139*s23**2*s24 + &
                      237*s23*s24**2 + 111*s24**3 + &
                      s14**2*(172*s23 + 205*s24) + &
                      s13*(-8*s14**2 + 23*s14*s23 + 18*s23**2 + &
                        7*s14*s24 + 61*s23*s24 + 21*s24**2) + &
                      s14*(138*s23**2 + 415*s23*s24 + 269*s24**2)) - &
                   m**2*(87*s12**3 + 43*s14**3 + 306*s14**2*s23 + &
                      149*s14*s23**2 + 17*s23**3 + 329*s14**2*s24 + &
                      658*s14*s23*s24 + 177*s23**2*s24 + &
                      513*s14*s24**2 + 369*s23*s24**2 + 227*s24**3 - &
                      s13**2*(3*s14 + 9*s23 + 2*s24) + &
                      s12**2*(60*s13 + 290*s14 + 195*s23 + 343*s24) + &
                      s13*(-118*s14**2 - 23*s14*s23 + 4*s23**2 - &
                        107*s14*s24 + 74*s23*s24 + 28*s24**2) + &
                      s12*(-2*s13**2 + 254*s14**2 + 488*s14*s23 + &
                        147*s23**2 + 765*s14*s24 + 506*s23*s24 + &
                        483*s24**2 + s13*(12*s14 + 63*s23 + 88*s24)))) &
- gm**2*(192*m**10 - 8*m**8*&
                    (22*s12 + 7*s13 + 55*s14 - 33*s23 + 7*s24) + &
                   m**6*(24*s12**2 - 54*s13**2 + 442*s14**2 + &
                      4*s13*(54*s14 - 77*s23) - 208*s14*s23 - &
                      210*s23**2 - &
                      4*s12*(9*s13 - 107*s14 + 95*s23 - 9*s24) + &
                      348*s14*s24 - 288*s23*s24 + 30*s24**2) + &
                   m**4*(12*s12**3 + 151*s14**3 + 48*s14**2*s23 - &
                      103*s14*s23**2 - 52*s23**3 + 265*s14**2*s24 - &
                      142*s14*s23*s24 - 121*s23**2*s24 + &
                      113*s14*s24**2 - 120*s23*s24**2 - 9*s24**3 + &
                      2*s12**2*(9*s13 + 51*s14 - 25*s23 + 9*s24) + &
                      s13**2*(27*s14 + 2*s23 + 9*s24) + &
                      2*s13*(34*s14**2 + 66*s14*s23 - 35*s23**2 + &
                        55*s14*s24 - 16*s23*s24 + 6*s24**2) + &
                      s12*(9*s13**2 + 223*s14**2 - 2*s14*s23 - &
                        137*s23**2 + 226*s14*s24 - 166*s23*s24 - &
                        3*s24**2 + 2*s13*(51*s14 - 5*s23 + 15*s24))) + &
                   m**2*(-2*s12**4 - 110*s14**4 + 30*s14**3*s23 + &
                      49*s14**2*s23**2 - 3*s14*s23**3 + &
                      s12**3*(7*s13 - 71*s14 + 47*s23 - 11*s24) - &
                      290*s14**3*s24 + 71*s14**2*s23*s24 + &
                      63*s14*s23**2*s24 - 3*s23**3*s24 - &
                      268*s14**2*s24**2 + 72*s14*s23*s24**2 + &
                      30*s23**2*s24**2 - 96*s14*s24**3 + &
                      29*s23*s24**3 - 8*s24**4 + &
                      s13**2*&
                       (2*s14**2 + 41*s14*s23 + 27*s14*s24 + &
                        7*s23*s24 + 9*s24**2) + &
                      s12**2*&
                       (9*s13**2 - 232*s14**2 + 103*s14*s23 + &
                        53*s23**2 - 238*s14*s24 + 129*s23*s24 - &
                        24*s24**2 + s13*(-27*s14 + 52*s23 + 15*s24)) + &
                      s13*(-70*s14**3 + s14**2*(93*s23 - 139*s24) + &
                        2*s14*(14*s23**2 + 78*s23*s24 - 33*s24**2) + &
                        s24*(-6*s23**2 + 63*s23*s24 + s24**2)) + &
                      s12*(-273*s14**3 - 3*s23**3 + &
                        s14**2*(86*s23 - 499*s24) + 89*s23**2*s24 + &
                        111*s23*s24**2 - 23*s24**3 + &
                        s13**2*(27*s14 + 7*s23 + 18*s24) + &
                        s14*(102*s23**2 + 177*s23*s24 - 263*s24**2) + &
                        s13*(-90*s14**2 + 135*s14*s23 - 93*s14*s24 + &
                        115*s23*s24 + 9*s24**2))) - &
                   (s12 + s14 + s24)*&
                    (8*s14**4 + 4*s12**3*(4*s14 - 5*s23) + &
                      30*s14**3*s23 - 27*s14**2*s23**2 - &
                      19*s14*s23**3 + 32*s14**3*s24 + &
                      8*s14**2*s23*s24 - 85*s14*s23**2*s24 - &
                      22*s23**3*s24 + 36*s14**2*s24**2 - &
                      52*s14*s23*s24**2 - 54*s23**2*s24**2 + &
                      12*s14*s24**3 - 32*s23*s24**3 + &
                      s12**2*&
                       (26*s13*s14 + 46*s14**2 - 17*s13*s23 - &
                        23*s14*s23 - 39*s23**2 + 44*s14*s24 - &
                        69*s23*s24) + &
                      s13**2*(22*s14*s23 + 10*s14*s24 + 3*s23*s24) + &
                      s13*(8*s14**3 - s23*s24*(19*s23 + 17*s24) + &
                        s14**2*(32*s23 + 22*s24) + &
                        s14*(3*s23**2 + 21*s23*s24 + 16*s24**2)) + &
                      s12*(38*s14**3 + s13**2*(10*s14 + 3*s23) + &
                         s14**2*(27*s23 + 82*s24) + &
                         2*s13*&
                        (20*s14**2 + 8*s14*s23 - 8*s23**2 + &
                        21*s14*s24 - 17*s23*s24) + &
                         s14*(-66*s23**2 - 72*s23*s24 + 40*s24**2) - &
                         s23*(19*s23**2 + 90*s23*s24 + 81*s24**2))))))/&
            ((m**2 - s14)*(gm**2 - m**2 + s23)*(gm**2 - m**2 + s24)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)) - &
           (16*(4*(-2*m**2 + s12 + s13 + s23)**2*(s13 - s24)*&
                 (-s13**3 - 2*s13**2*s14 - s13*s14**2 - s13**2*s23 - &
                   s13*s14*s23 + 3*m**4*(s13 - s24) + 2*s13*s23*s24 + &
                   s14*s23*s24 + s23**2*s24 + s13*s24**2 + &
                   s23*s24**2 + s12**2*(-s13 + s24) - &
                   m**2*(2*s13**2 + s13*s14 - s14**2 + 2*s13*s23 + &
                      s23**2 + s12*(2*s13 - s14 + s23 - 2*s24) - &
                      3*s14*s24 - 2*s24**2) + &
                   s12*(-2*s13**2 + s13*(-2*s14 - s23 + s24) + &
                      s24*(s14 + 2*s23 + s24))) + &
                2*gm**6*(344*m**6 + 9*s12**3 + 10*s13**3 + &
                   16*s13**2*s14 + 6*s13*s14**2 + 35*s13**2*s23 + &
                   25*s13*s14*s23 + 40*s13*s23**2 + 9*s14*s23**2 + &
                   15*s23**3 + 31*s13**2*s24 + 21*s13*s14*s24 + &
                   70*s13*s23*s24 + 18*s14*s23*s24 + 39*s23**2*s24 + &
                   30*s13*s24**2 + 9*s14*s24**2 + 33*s23*s24**2 + &
                   9*s24**3 + &
                   s12**2*(28*s13 + 9*s14 + 33*s23 + 27*s24) + &
                   m**4*(356*s12 + 331*s13 + 143*s14 + 440*s23 + &
                      374*s24) + &
                   s12*(29*s13**2 + &
                      3*(s23 + s24)*(6*s14 + 13*s23 + 9*s24) + &
                      s13*(25*s14 + 68*s23 + 58*s24)) + &
                   m**2*(105*s12**2 + 99*s13**2 + &
                      (s23 + s24)*(74*s14 + 151*s23 + 111*s24) + &
                      s12*(206*s13 + 74*s14 + 256*s23 + 216*s24) + &
                      s13*(59*s14 + 244*s23 + 222*s24))) + &
                gm**4*(296*m**8 - 15*s12**4 - 32*s13**4 - &
                   42*s13**3*s14 - 10*s13**2*s14**2 - 118*s13**3*s23 - &
                   91*s13**2*s14*s23 - 19*s13*s14**2*s23 - &
                   152*s13**2*s23**2 - 64*s13*s14*s23**2 - &
                   12*s14**2*s23**2 - 78*s13*s23**3 - 15*s14*s23**3 - &
                   12*s23**4 - 77*s13**3*s24 - 37*s13**2*s14*s24 - &
                   6*s13*s14**2*s24 - 156*s13**2*s23*s24 - &
                   35*s13*s14*s23*s24 - 9*s14**2*s23*s24 - &
                   77*s13*s23**2*s24 - 4*s14*s23**2*s24 + &
                   2*s23**3*s24 - 27*s13**2*s24**2 + &
                   3*s13*s14*s24**2 + 8*s13*s23*s24**2 + &
                   9*s14*s23*s24**2 + 32*s23**2*s24**2 + &
                   9*s13*s24**3 + 18*s23*s24**3 - &
                   2*m**6*(290*s12 + 99*s13 + 315*s14 + 239*s23 + &
                      415*s24) - &
                   s12**3*(79*s13 + 27*s14 + 19*(3*s23 + s24)) - &
                   s12**2*(145*s13**2 + 12*s14**2 + 69*s14*s23 + &
                      81*s23**2 + 25*s14*s24 + 36*s23*s24 - &
                      5*s24**2 + s13*(95*s14 + 236*s23 + 114*s24)) - &
                   m**4*(312*s12**2 + 326*s13**2 + 102*s14**2 + &
                      407*s14*s23 + 263*s23**2 + 601*s14*s24 + &
                      644*s23*s24 + 541*s24**2 + &
                      s13*(116*s14 + 599*s23 + 473*s24) + &
                      s12*(685*s13 + 395*s14 + 617*s23 + 751*s24)) - &
                   s12*(113*s13**3 + 51*s23**3 + 15*s23**2*s24 - &
                      37*s23*s24**2 - 9*s24**3 + &
                      3*s14**2*(8*s23 + 3*s24) + &
                      s14*s23*(57*s23 + 29*s24) + &
                      s13**2*(110*s14 + 297*s23 + 172*s24) + &
                      s13*(19*s14**2 + 159*s14*s23 + 235*s23**2 + &
                        71*s14*s24 + 191*s23*s24 + 22*s24**2)) - &
                   m**2*(87*s12**3 + 223*s13**3 + 70*s14**2*s23 + &
                      112*s14*s23**2 + 71*s23**3 + 27*s14**2*s24 + &
                      138*s14*s23*s24 + 17*s23**2*s24 + &
                      112*s14*s24**2 + 45*s23*s24**2 + 77*s24**3 + &
                      s12**2*(406*s13 + 144*s14 + 259*s23 + 127*s24) + &
                      s13**2*(178*s14 + 561*s23 + 258*s24) + &
                      s13*(73*s14**2 + 285*s14*s23 + 409*s23**2 + &
                        73*s14*s24 + 282*s23*s24 + 69*s24**2) + &
                      s12*(550*s13**2 + 70*s14**2 + 256*s14*s23 + &
                        243*s23**2 + 163*s14*s24 + 158*s23*s24 + &
                        115*s24**2 + s13*(352*s14 + 833*s23 + 384*s24))&
)) - gm**2*(192*m**10 - 8*m**8*&
                    (22*s12 + 55*s13 + 7*s14 + 7*s23 - 33*s24) + &
                   m**6*(24*s12**2 + 522*s13**2 + &
                      4*s13*(82*s14 + 91*s23 - 60*s24) + &
                      12*s12*(41*s13 - 3*s14 + 3*s23 - 37*s24) - &
                      2*(27*s14**2 - 15*s23**2 + 210*s14*s24 + &
                        152*s23*s24 + 129*s24**2)) + &
                   m**4*(12*s12**3 + 81*s13**3 + 9*s14**2*s23 + &
                      12*s14*s23**2 - 9*s23**3 + &
                      2*s12**2*(27*s13 + 9*s14 + 9*s23 - s24) - &
                      52*s14**2*s24 + 16*s14*s23*s24 - 18*s23**2*s24 - &
                      166*s14*s24**2 - 5*s23*s24**2 - 82*s24**3 + &
                      s13**2*(88*s14 + 73*s23 + 62*s24) + &
                      s13*(113*s14**2 + 62*s14*s23 - 21*s23**2 + &
                        272*s14*s24 - 130*s23*s24 - 17*s24**2) + &
                      s12*(99*s13**2 + 9*s14**2 + 30*s14*s23 - &
                        3*s23**2 + 2*s14*s24 - 34*s23*s24 - &
                        117*s24**2 + 2*s13*(61*s14 + 31*s23 + 51*s24))) &
- (s12 + s13 + s23)*(16*s13**4 + 4*s12**3*(3*s13 - 4*s24) + &
                      s13**3*(26*s14 + 40*s23 + 15*s24) + &
                      s13**2*&
                       (10*s14**2 + 39*s14*s23 + 28*s23**2 + &
                        7*s14*s24 - 25*s23*s24 - 29*s24**2) - &
                      2*s23*s24*&
                       (3*s14**2 + 8*s14*s23 + 8*s23**2 + 5*s14*s24 + &
                        10*s23*s24 + 2*s24**2) + &
                      s12**2*&
                       (43*s13**2 + s13*(23*s14 + 31*s23 - 33*s24) - &
                        2*s24*(11*s14 + 24*s23 + 13*s24)) + &
                      s13*(4*s23**3 - 54*s23**2*s24 - 62*s23*s24**2 - &
                        10*s24**3 + s14**2*(11*s23 + 4*s24) + &
                        3*s14*(5*s23**2 - 7*s23*s24 - 2*s24**2)) + &
                      s12*(47*s13**3 + &
                        s13**2*(52*s14 + 74*s23 - 2*s24) + &
                        s13*(11*s14**2 + 38*s14*s23 + 23*s23**2 - &
                        20*s14*s24 - 84*s23*s24 - 55*s24**2) - &
                        2*s24*&
                        (3*s14**2 + 19*s14*s23 + 24*s23**2 + &
                        8*s14*s24 + 23*s23*s24 + 5*s24**2))) + &
                   m**2*(-2*s12**4 - 79*s13**4 + &
                      s13**3*(-72*s14 - 187*s23 + s24) + &
                      s12**3*(-71*s13 + 7*s14 - 11*s23 + 47*s24) + &
                      s13**2*&
                       (-21*s14**2 - 149*s23**2 + 12*s23*s24 + &
                        14*s24**2 + s14*(-147*s23 + s24)) + &
                      s12**2*&
                       (-204*s13**2 + 9*s14**2 + 15*s14*s23 - &
                        24*s23**2 + 64*s14*s24 + 117*s23*s24 + &
                        81*s24**2 + s13*(-71*s14 - 194*s23 + 47*s24)) + &
                      s13*(-49*s23**3 + 27*s23**2*s24 + &
                        32*s23*s24**2 + 30*s24**3 + &
                        s14**2*(-14*s23 + 32*s24) + &
                        s14*(-72*s23**2 + 34*s23*s24 + 58*s24**2)) + &
                      s23*(-8*s23**3 + 14*s23**2*s24 + 52*s23*s24**2 + &
                        48*s24**3 + s14**2*(9*s23 + 16*s24) + &
                        s14*(s23**2 + 69*s23*s24 + 60*s24**2)) + &
                      s12*(-214*s13**3 - 23*s23**3 + 84*s23**2*s24 + &
                         133*s23*s24**2 + 30*s24**3 + &
                         s13**2*(-142*s14 - 355*s23 + s24) + &
                         2*s14**2*(9*s23 + 8*s24) + &
                         s14*(9*s23**2 + 133*s23*s24 + 48*s24**2) + &
                         s13*&
                         (-14*s14**2 - 143*s14*s23 - 172*s23**2 + &
                         43*s14*s24 + 85*s23*s24 + 95*s24**2))))))/&
            ((-m**2 + s13)*(gm**2 - m**2 + s23)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)*(gm**2 - m**2 + s24)) + &
           (4*(-2*(2*m**2 - s12 - s13 - s14)*&
                 (-2*m**2 + s12 + s13 + s23)**2*&
                 (20*m**6 + s12**3 + s14**2*s23 - s13*s14*s24 - &
                   2*s13*s23*s24 + s14*s23*s24 - 3*s13*s24**2 - &
                   2*m**4*(s12 + 9*s13 + 5*s14 - 2*s23 + 2*s24) + &
                   s12**2*(s13 + 2*s14 + s23 + 2*s24) + &
                   s12*(s14**2 + s13*(s14 - 2*s24) + &
                      2*s14*(s23 + s24) + s24*(s23 + s24)) + &
                   m**2*(-6*s12**2 + 6*s13**2 + s14**2 - 5*s14*s23 + &
                      2*s14*s24 + s23*s24 + 3*s24**2 - &
                      s12*(s13 + 5*s14 + 5*s23 + s24) + &
                      s13*(s14 + 3*s24))) + &
                gm**4*(-692*m**8 + 13*s12**4 + 44*s13**4 + &
                   52*s13**3*s14 + 48*s13**2*s14**2 + 24*s13*s14**3 + &
                   100*s13**3*s23 + 107*s13**2*s14*s23 + &
                   52*s13*s14**2*s23 + 18*s14**3*s23 + &
                   68*s13**2*s23**2 + 67*s13*s14*s23**2 + &
                   19*s14**2*s23**2 + 12*s13*s23**3 + 12*s14*s23**3 + &
                   2*m**6*(85*s12 + 184*s13 + 365*s14 - 2*s23 - &
                      99*s24) + 79*s13**3*s24 + 78*s13**2*s14*s24 + &
                   36*s13*s14**2*s24 + 103*s13**2*s23*s24 + &
                   76*s13*s14*s23*s24 + 21*s14**2*s23*s24 + &
                   24*s13*s23**2*s24 + 19*s14*s23**2*s24 + &
                   47*s13**2*s24**2 + 21*s13*s14*s24**2 + &
                   29*s13*s23*s24**2 + 12*s14*s23*s24**2 + &
                   12*s13*s24**3 + &
                   s12**3*(85*s13 + 38*(s14 + s23 + s24)) - &
                   m**4*(52*s12**2 + 262*s13**2 + 240*s14**2 + &
                      199*s14*s23 + 63*s23**2 - 15*s14*s24 + &
                      148*s23*s24 + 95*s24**2 + &
                      s13*(482*s14 + 327*s23 + 63*s24) + &
                      s12*(397*s13 + 283*s14 + 199*s23 + 103*s24)) + &
                   s12**2*(175*s13**2 + 43*s14**2 + 82*s14*s23 + &
                      37*s23**2 + 71*s14*s24 + 69*s23*s24 + &
                      37*s24**2 + s13*(145*s14 + 180*s23 + 157*s24)) + &
                   m**2*(5*s12**3 + 23*s13**3 + 18*s14**3 + &
                      89*s14**2*s23 + 6*s14*s23**2 - 24*s23**3 + &
                      s13**2*(211*s14 - 28*s23 - 30*s24) + &
                      45*s14**2*s24 + 34*s14*s23*s24 - &
                      43*s23**2*s24 + 39*s14*s24**2 - 41*s23*s24**2 - &
                      12*s24**3 + &
                      s12**2*(50*s13 + 134*s14 - 35*s23 + 19*s24) + &
                      s13*(158*s14**2 + 192*s14*s23 - 97*s23**2 + &
                        38*s14*s24 - 86*s23*s24 - 12*s24**2) + &
                      s12*(76*s13**2 + 101*s14**2 + 122*s14*s23 - &
                        64*s23**2 + s13*(365*s14 - 62*s23 - 11*s24) + &
                        67*s14*s24 - 60*s23*s24 - 8*s24**2)) + &
                   s12*(147*s13**3 + 18*s14**3 + 12*s23**3 + &
                      31*s23**2*s24 + 31*s23*s24**2 + 12*s24**3 + &
                      s14**2*(62*s23 + 39*s24) + &
                      s13**2*(159*s14 + 242*s23 + 198*s24) + &
                      s14*(56*s23**2 + 84*s23*s24 + 33*s24**2) + &
                      s13*(94*s14**2 + 206*s14*s23 + 107*s23**2 + &
                        161*s14*s24 + 174*s23*s24 + 84*s24**2))) + &
                gm**6*(624*m**6 - 30*s12**3 - 30*s13**3 - &
                   40*s13**2*s14 - 36*s13*s14**2 - 60*s13**2*s23 - &
                   70*s13*s14*s23 - 15*s14**2*s23 - 30*s13*s23**2 - &
                   30*s14*s23**2 - 60*s13**2*s24 - 45*s13*s14*s24 - &
                   60*s13*s23*s24 - 30*s14*s23*s24 - 30*s13*s24**2 + &
                   m**4*(150*s12 + 67*s13 - 401*s14 + 365*s23 + &
                      265*s24) - &
                   15*s12**2*(6*s13 + 3*s14 + 4*(s23 + s24)) - &
                   m**2*(105*s12**2 + 80*s13**2 - 57*s14**2 + &
                      170*s14*s23 - 60*s23**2 + 105*s14*s24 - &
                      90*s23*s24 - 30*s24**2 + &
                      5*s12*(37*s13 + 43*s14 + 9*s23 + 15*s24) + &
                      s13*(161*s14 + 50*s23 + 55*s24)) - &
                   5*s12*(18*s13**2 + s13*(17*s14 + 24*(s23 + s24)) + &
                      3*(s14**2 + 2*(s23 + s24)**2 + &
                        s14*(5*s23 + 3*s24)))) + &
                gm**2*(688*m**10 - &
                   4*m**8*(240*s12 + 281*s13 + 201*s14 + 119*s23 + &
                      31*s24) + &
                   2*m**6*(248*s12**2 + 202*s13**2 + 131*s14**2 + &
                      266*s14*s23 - 13*s23**2 + &
                      s13*(519*s14 + 137*s23 - 16*s24) + 105*s14*s24 + &
                      67*s23*s24 + 58*s24**2 + &
                      2*s12*(247*s13 + 202*s14 + 90*s23 + 51*s24)) - &
                   m**4*(72*s12**3 - 39*s13**3 + 20*s14**3 + &
                      105*s14**2*s23 - 47*s14*s23**2 - 22*s23**3 + &
                      s13**2*(244*s14 - 126*s23 - 129*s24) + &
                      s12**2*(131*s13 + 115*s14 - 11*s23 - 23*s24) + &
                      66*s14**2*s24 + 119*s14*s23*s24 - &
                      12*s23**2*s24 + 80*s14*s24**2 + 4*s23*s24**2 - &
                      18*s24**3 + &
                      s12*(22*s13**2 + 117*s14**2 + 56*s14*s23 - &
                        85*s23**2 + &
                        s13*(377*s14 - 127*s23 - 170*s24) + &
                        133*s14*s24 - 55*s23*s24 - 4*s24**2) + &
                      s13*(183*s14**2 + 177*s14*s23 - 121*s23**2 + &
                        75*s14*s24 - 45*s23*s24 + 62*s24**2)) + &
                   (s12 + s13 + s23)*&
                    (12*s12**4 - 10*s13**4 + &
                      s13**3*(2*s14 - 14*s23 - 5*s24) + &
                      s12**3*(38*s13 + 38*s14 + 22*s23 + 33*s24) + &
                      s14*s23*&
                       (14*s14**2 + 10*s14*s23 + 17*s14*s24 + &
                        10*s23*s24 + 9*s24**2) + &
                      s13**2*&
                       (24*s14**2 - 4*s23**2 + 12*s23*s24 + &
                        11*s24**2 + s14*(s23 + 10*s24)) + &
                      s12**2*&
                       (27*s13**2 + 40*s14**2 + 58*s14*s23 + &
                        10*s23**2 + 64*s14*s24 + 41*s23*s24 + &
                        30*s24**2 + s13*(94*s14 + 38*s23 + 70*s24)) + &
                      s13*(12*s14**3 + 2*s14**2*(15*s23 + 8*s24) + &
                        s14*(2*s23**2 + 17*s23*s24 + 3*s24**2) + &
                        s24*(12*s23**2 + 20*s23*s24 + 9*s24**2)) + &
                      s12*(-9*s13**3 + 14*s14**3 + &
                        s14**2*(50*s23 + 31*s24) + &
                        s13**2*(55*s14 - s23 + 32*s24) + &
                        s24*(10*s23**2 + 19*s23*s24 + 9*s24**2) + &
                        s14*(20*s23**2 + 58*s23*s24 + 26*s24**2) + &
                        s13*(68*s14**2 + 68*s14*s23 + 2*s23**2 + &
                        78*s14*s24 + 49*s23*s24 + 41*s24**2))) - &
                   m**2*(35*s12**4 + 3*s13**4 + &
                      s13**3*(33*s14 + 24*s23 + 31*s24) + &
                      s12**3*(141*s13 + 120*s14 + 104*s23 + 113*s24) + &
                      s13**2*&
                       (38*s14**2 + 112*s14*s23 + 19*s23**2 + &
                        41*s14*s24 + 76*s23*s24 + 20*s24**2) + &
                      s12**2*&
                       (173*s13**2 + 99*s14**2 + 242*s14*s23 + &
                        97*s23**2 + 112*s14*s24 + 212*s23*s24 + &
                        91*s24**2 + s13*(306*s14 + 264*s23 + 284*s24)) &
+ s13*(10*s14**3 + 2*s23**3 + s14**2*(83*s23 - 9*s24) + &
                        57*s23**2*s24 + 63*s23*s24**2 + 27*s24**3 + &
                        s14*(109*s23**2 + 58*s23*s24 - 32*s24**2)) + &
                      s23*(14*s14**3 + s14**2*(53*s23 - 7*s24) + &
                        s14*(28*s23**2 + 23*s23*s24 - 24*s24**2) + &
                        s24*(22*s23**2 + 29*s23*s24 + 9*s24**2)) + &
                      s12*(70*s13**3 + 14*s14**3 + 28*s23**3 + &
                         121*s23**2*s24 + 102*s23*s24**2 + 27*s24**3 + &
                         s14**2*(152*s23 + 17*s24) + &
                         s13**2*(221*s14 + 169*s23 + 202*s24) + &
                         3*s14*(50*s23**2 + 37*s23*s24 + 2*s24**2) + &
                         s13*&
                         (141*s14**2 + 377*s14*s23 + 115*s23**2 + &
                         161*s14*s24 + 289*s23*s24 + 111*s24**2))))))/&
            ((m**2 - s13)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)*(gm**2 - m**2 + s24)) + &
           (4*(gm**6*(252*m**6 - 11*s12**3 - 6*s13**2*s23 - &
                   11*s13*s14*s23 - 12*s13*s23**2 - 11*s14*s23**2 - &
                   6*s23**3 + &
                   m**4*(6*s12 + 7*s13 - 17*s14 - 23*s23 - 187*s24) - &
                   13*s13**2*s24 - 31*s13*s23*s24 - 3*s14*s23*s24 - &
                   18*s23**2*s24 - 9*s13*s24**2 - 12*s23*s24**2 - &
                   s12**2*(22*s13 + 11*s14 + 28*s23 + 14*s24) - &
                   s12*(11*s13**2 + 11*s13*s14 + 34*s13*s23 + &
                      22*s14*s23 + 23*s23**2 + 27*s13*s24 + &
                      3*s14*s24 + 32*s23*s24 + 3*s24**2) + &
                   m**2*(-5*s12**2 + 19*s13**2 + 11*s13*s14 + &
                      12*s13*s23 + 22*s14*s23 - 13*s23**2 + &
                      33*s13*s24 + 9*s14*s24 - 6*s23*s24 + 13*s24**2 + &
                      2*s12*(8*s13 + 11*s14 - 9*s23 + 10*s24))) + &
                2*(-2*m**2 + s12 + s13 + s23)**2*&
                 (2*m**2 - s12 - s23 - s24)*&
                 (40*m**6 + 2*s12**3 + s14**2*s23 + 2*s13*s23**2 + &
                   2*s23**3 + 2*s13**2*s24 + s13*s14*s24 + &
                   4*s13*s23*s24 + s14*s23*s24 + 2*s23**2*s24 + &
                   s13*s24**2 - &
                   4*m**4*(3*s12 - s13 - s14 + 3*s23 + 3*s24) + &
                   s12**2*(4*s13 + 3*s14 + 4*s23 + 3*s24) + &
                   s12*(2*s13**2 + s14**2 + 3*s14*s23 + 4*s23**2 + &
                      2*s14*s24 + 3*s23*s24 + s24**2 + &
                      s13*(3*s14 + 4*s23 + 5*s24)) - &
                   m**2*(8*s12**2 + 2*s13**2 + s14**2 + 9*s14*s23 + &
                      2*s23**2 - 4*s14*s24 + 21*s23*s24 - 3*s24**2 + &
                      2*s12*(5*s13 + 4*s14 + 6*s23 + 5*s24) + &
                      s13*(s14 - 2*s23 + 13*s24))) + &
                gm**4*(1200*m**8 + 11*s12**4 + 10*s13**3*s23 + &
                   8*s13**2*s14*s23 + 11*s13*s14**2*s23 + &
                   38*s13**2*s23**2 + 21*s13*s14*s23**2 + &
                   5*s14**2*s23**2 + 46*s13*s23**3 + 13*s14*s23**3 + &
                   18*s23**4 + &
                   2*m**6*(102*s12 + 539*s13 + 79*s14 + 41*s23 - &
                      171*s24) + 11*s13**2*s14*s24 + &
                   21*s13**2*s23*s24 + 19*s13*s14*s23*s24 - &
                   6*s14**2*s23*s24 + 35*s13*s23**2*s24 + &
                   2*s14*s23**2*s24 + 14*s23**3*s24 - &
                   14*s13**2*s24**2 - 6*s13*s14*s24**2 - &
                   12*s13*s23*s24**2 - 6*s14*s23*s24**2 + &
                   2*s23**2*s24**2 - 6*s13*s24**3 + &
                   s12**3*(30*s13 + 16*s14 + 53*s23 + 16*s24) + &
                   s12**2*(27*s13**2 + 5*s14**2 + 45*s14*s23 + &
                      91*s23**2 + 4*s14*s24 + 45*s23*s24 - s24**2 + &
                      s13*(29*s14 + 110*s23 + 25*s24)) + &
                   s12*(8*s13**3 + 67*s23**3 + &
                      2*s14**2*(5*s23 - 3*s24) + 43*s23**2*s24 - &
                      2*s23*s24**2 - 6*s24**3 + &
                      s13**2*(13*s14 + 67*s23 + 9*s24) + &
                      s13*(11*s14**2 + 50*s14*s23 + 126*s23**2 + &
                        6*s14*s24 + 59*s23*s24 - 15*s24**2) + &
                      6*s14*(7*s23**2 + s23*s24 - 2*s24**2)) + &
                   m**2*(57*s12**3 - 10*s13**3 - 3*s14**2*s23 + &
                      6*s14*s23**2 + 37*s23**3 + 6*s14**2*s24 + &
                      39*s14*s23*s24 + 149*s23**2*s24 - &
                      24*s14*s24**2 + 100*s23*s24**2 - 22*s24**3 + &
                      4*s12**2*(22*s13 - s14 + 38*s23 + 21*s24) + &
                      s13**2*(-19*s14 + 11*s23 + 94*s24) + &
                      s13*(-11*s14**2 - 9*s14*s23 + 54*s23**2 + &
                        49*s14*s24 + 155*s23*s24 + 22*s24**2) + &
                      s12*(17*s13**2 - 3*s14**2 + 2*s14*s23 + &
                        132*s23**2 + 4*s14*s24 + 221*s23*s24 + &
                        19*s24**2 + s13*(10*s14 + 135*s23 + 187*s24))) &
- m**4*(500*s12**2 + s12*(685*s13 + 241*s14 + 1067*s23 + 563*s24) + &
                      2*(75*s13**2 + s14**2 + 118*s14*s23 + &
                        275*s23**2 - 24*s14*s24 + 283*s23*s24 + &
                        61*s24**2 + s13*(37*s14 + 348*s23 + 338*s24)))) &
- gm**2*(512*m**10 - 16*m**8*(30*s12 + 26*s13 - 8*s14 + 81*s23 - s24) + &
                   2*m**6*(56*s12**2 - 63*s13**2 + 3*s14**2 - &
                      16*s14*s23 + 305*s23**2 + &
                      s12*(50*s13 - 34*s14 + 366*s23 - 62*s24) + &
                      22*s14*s24 - 48*s23*s24 - 37*s24**2 + &
                      s13*(-16*s14 + 146*s23 + 56*s24)) + &
                   m**4*(-8*s12**3 + 93*s13**3 + 3*s14**2*s23 - &
                      32*s14*s23**2 + 117*s23**3 + 16*s14**2*s24 - &
                      80*s14*s23*s24 + 382*s23**2*s24 - &
                      66*s14*s24**2 + 183*s23*s24**2 - 38*s24**3 + &
                      4*s12**2*(34*s13 - s14 + 27*s23 + 28*s24) + &
                      s13**2*(-4*s14 + 321*s23 + 166*s24) + &
                      s13*(11*s14**2 + 98*s14*s23 + 261*s23**2 - &
                        48*s14*s24 + 374*s23*s24 + 35*s24**2) + &
                      s12*(229*s13**2 + 3*s14**2 - 36*s14*s23 + &
                        233*s23**2 - 54*s14*s24 + 516*s23*s24 + &
                        19*s24**2 + 2*s13*(52*s14 + 209*s23 + 132*s24))&
) + (s12 + s13 + s23)*(8*s13**3*(s23 + s24) + &
                      s12**3*(11*s13 + 6*s14 + 7*s23 + 10*s24) + &
                      s13**2*&
                       (16*s23**2 + 29*s23*s24 + 15*s24**2 + &
                        7*s14*(2*s23 + s24)) + &
                      s12**2*&
                       (19*s13**2 + 6*s14**2 + 18*s23**2 + &
                        25*s23*s24 + 18*s24**2 + &
                        3*s14*(5*s23 + 8*s24) + &
                        s13*(24*s14 + 35*s23 + 36*s24)) + &
                      s23*(s14**2*(6*s23 + 8*s24) + &
                        4*s23*(s23**2 - s24**2) + &
                        s14*(3*s23**2 + 12*s23*s24 + 8*s24**2)) + &
                      s13*(7*s14**2*s23 + 12*s23**3 + 27*s23**2*s24 + &
                        22*s23*s24**2 + 8*s24**3 + &
                        s14*(23*s23**2 + 31*s23*s24 + 8*s24**2)) + &
                      s12*(8*s13**3 + 15*s23**3 + 15*s23**2*s24 + &
                        16*s23*s24**2 + 8*s24**3 + &
                        4*s14**2*(3*s23 + 2*s24) + &
                        s13**2*(15*s14 + 33*s23 + 34*s24) + &
                        4*s14*(3*s23**2 + 9*s23*s24 + 4*s24**2) + &
                        s13*(7*s14**2 + 47*s14*s23 + 36*s23**2 + &
                        32*s14*s24 + 57*s23*s24 + 33*s24**2))) + &
                   m**2*(4*s12**4 - 16*s13**4 - &
                      s12**3*(63*s13 + 9*s14 + 89*s23 + 47*s24) - &
                      s13**3*(21*s14 + 93*s23 + 76*s24) - &
                      s13**2*&
                       (7*s14**2 + 94*s14*s23 + 179*s23**2 - &
                        15*s14*s24 + 239*s23*s24 + 72*s24**2) - &
                      s12**2*&
                       (143*s13**2 + 15*s14**2 + 279*s23**2 + &
                        284*s23*s24 + 47*s24**2 + &
                        16*s14*(s23 + 2*s24) + &
                        8*s13*(13*s14 + 41*s23 + 24*s24)) - &
                      s23*(89*s23**3 + 159*s23**2*s24 + &
                        100*s23*s24**2 - 32*s24**3 + &
                        3*s14**2*(5*s23 + 8*s24) + &
                        s14*(-2*s23**2 + 5*s23*s24 - 18*s24**2)) - &
                      s13*(191*s23**3 + 344*s23**2*s24 + &
                        206*s23*s24**2 - 14*s24**3 + &
                        8*s14**2*(3*s23 + s24) + &
                        s14*(93*s23**2 + 26*s23*s24 - 16*s24**2)) - &
                      s12*(92*s13**3 + 275*s23**3 + 396*s23**2*s24 + &
                         159*s23*s24**2 - 14*s24**3 + &
                         6*s14**2*(5*s23 + 4*s24) + &
                         s13**2*(108*s14 + 317*s23 + 221*s24) + &
                         s14*(5*s23**2 + 37*s23*s24 - 6*s24**2) + &
                         s13*&
                         (24*s14**2 + 197*s14*s23 + 456*s23**2 + &
                         27*s14*s24 + 541*s23*s24 + 119*s24**2))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s23)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (gm**6*(-28*m**6 + 10*s12**3 - 3*s13*s14*s23 - s14**2*s23 + &
                 2*s14*s23**2 - 5*s13**2*s24 + 3*s13*s14*s24 + &
                 6*s14**2*s24 + 8*s13*s23*s24 + 6*s14*s23*s24 + &
                 6*s13*s24**2 + 6*s14*s24**2 + &
                 s12**2*(5*s13 + 13*s14 + 18*s23 + 16*s24) + &
                 2*m**4*(64*s12 + 2*s13 + 12*s14 + 3*s23 + 25*s24) + &
                 s12*(-5*s13**2 + 3*s14**2 + 23*s14*s23 + 8*s23**2 + &
                    15*s14*s24 + 14*s23*s24 + 6*s24**2 + &
                    s13*(-14*s14 + 3*s23 + 11*s24)) + &
                 m**2*(8*s12**2 + 5*s13**2 - 5*s14**2 - s14*s23 - &
                    2*s23**2 - 37*s14*s24 - 14*s23*s24 - 12*s24**2 - &
                    s13*(s23 + 17*s24) - &
                    2*s12*(19*s13 + 27*s14 + 22*s23 + 28*s24))) - &
              gm**4*(32*m**8 + 26*s12**4 - 6*s13**2*s14*s23 - &
                 19*s13*s14**2*s23 - s14**3*s23 + 2*s13*s14*s23**2 + &
                 23*s14**2*s23**2 - 7*s14*s23**3 + 15*s13**2*s14*s24 - &
                 5*s13*s14**2*s24 - 4*s14**3*s24 + 8*s13**2*s23*s24 + &
                 4*s13*s14*s23*s24 + 34*s14**2*s23*s24 + &
                 5*s13*s23**2*s24 + 17*s14*s23**2*s24 + &
                 15*s13**2*s24**2 + 20*s13*s14*s24**2 + &
                 14*s14**2*s24**2 + 5*s13*s23*s24**2 + &
                 20*s14*s23*s24**2 + 18*s13*s24**3 + 18*s14*s24**3 + &
                 s12**3*(34*s13 + 38*s14 + 50*s23 + 62*s24) - &
                 2*m**6*(192*s12 + 91*s13 + 125*s14 + 115*s23 + &
                    189*s24) + &
                 s12**2*(8*s13**2 + 3*s14**2 + 81*s14*s23 + &
                    29*s23**2 + 68*s14*s24 + 65*s23*s24 + 54*s24**2 + &
                    5*s13*(s14 + 8*s23 + 17*s24)) + &
                 2*m**4*(65*s12**2 + 44*s13**2 + 20*s14**2 + &
                    185*s14*s23 + 55*s23**2 + 172*s14*s24 + &
                    146*s23*s24 + 125*s24**2 + &
                    s13*(126*s14 + 40*s23 + 167*s24) + &
                    2*s12*(112*s13 + 75*s14 + 137*s23 + 168*s24)) + &
                 s12*(-9*s14**3 + 5*s23**3 + 10*s23**2*s24 + &
                    23*s23*s24**2 + 18*s24**3 + &
                    s14**2*(30*s23 + 7*s24) + &
                    s13**2*(-15*s14 + 8*s23 + 23*s24) + &
                    s14*(40*s23**2 + 92*s23*s24 + 56*s24**2) + &
                    s13*(-18*s14**2 + 13*s23**2 + 52*s23*s24 + &
                       69*s24**2 + 2*s14*(s23 + 13*s24))) - &
                 m**2*(156*s12**3 - 5*s14**3 + 78*s14**2*s23 + &
                    110*s14*s23**2 - 7*s23**3 + 33*s14**2*s24 + &
                    246*s14*s23*s24 + 22*s23**2*s24 + 156*s14*s24**2 + &
                    25*s23*s24**2 + 36*s24**3 + &
                    s13**2*(9*s14 + 22*s23 + 89*s24) + &
                    2*s12**2*(113*s13 + 80*s14 + 149*s23 + 182*s24) + &
                    s13*(-24*s14**2 + 94*s14*s23 + 25*s23**2 + &
                       184*s14*s24 + 92*s23*s24 + 143*s24**2) + &
                    2*s12*(50*s13**2 + 10*s14**2 + 172*s14*s23 + &
                       72*s23**2 + 123*s14*s24 + 155*s23*s24 + &
                       118*s24**2 + s13*(37*s14 + 73*s23 + 198*s24)))) &
+ 2*(2*m**2 - s12 - s13 - s14)*(2*m**2 - s12 - s23 - s24)*&
               (96*m**8 - 2*s12**4 - s13**2*s14*s23 - 2*s14**3*s23 - &
                 2*s13*s14*s23**2 + s14**2*s23**2 - s14*s23**3 - &
                 s13**3*s24 + 2*s13**2*s14*s24 - 2*s13*s14**2*s24 - &
                 2*s13**2*s23*s24 + 2*s13*s14*s23*s24 - &
                 4*s14**2*s23*s24 - s13*s23**2*s24 + &
                 2*s14*s23**2*s24 + s13**2*s24**2 - 4*s13*s14*s24**2 - &
                 2*s14*s23*s24**2 - 2*s13*s24**3 - &
                 4*s12**3*(s13 + s14 + s23 + s24) - &
                 4*m**6*(20*s12 + 9*s13 + 13*s14 + 9*s23 + 13*s24) + &
                 m**4*(-3*s13**2 + s14**2 + 2*s14*s23 + 5*s23**2 + &
                    42*s14*s24 - 26*s23*s24 + 9*s24**2 + &
                    4*s12*(s13 + 5*s14 - 3*s23 + s24) + &
                    2*s13*(-5*s14 + 13*s23 + s24)) - &
                 s12**2*(3*s13**2 + 4*s14**2 + 5*s14*s23 + 3*s23**2 + &
                    6*s14*s24 + 4*s23*s24 + 4*s24**2 + &
                    s13*(4*s14 + 6*s23 + 5*s24)) + &
                 m**2*(12*s12**3 + s13**3 + 2*s14**3 + 8*s14**2*s23 - &
                    s14*s23**2 + s23**3 - &
                    s13**2*(s14 + 3*s23 - 7*s24) - 6*s14**2*s24 + &
                    16*s14*s23*s24 - s23**2*s24 - 6*s14*s24**2 + &
                    2*s23*s24**2 + 2*s24**3 + &
                    s12**2*(15*s13 + 11*s14 + 23*s23 + 19*s24) + &
                    s13*(2*s14**2 + 6*s14*s23 - 3*s23**2 + &
                       8*s14*s24 + 14*s23*s24) + &
                    s12*(7*s13**2 + 7*s14**2 + 7*s23**2 + &
                       26*s23*s24 + 7*s24**2 + 2*s14*(9*s23 + s24) + &
                       2*s13*(5*s14 + 5*s23 + 9*s24))) - &
                 s12*(s13**3 + 2*s14**3 + s23**3 + s23**2*s24 + &
                    2*s23*s24**2 + 2*s24**3 + &
                    s13**2*(s14 + 3*s23 + 2*s24) + &
                    s14**2*(3*s23 + 4*s24) + &
                    s14*(2*s23**2 + 3*s23*s24 + 4*s24**2) + &
                    s13*(2*s14**2 + 3*s14*(s23 + s24) + &
                       3*(s23**2 + s23*s24 + s24**2)))) + &
              gm**2*(1200*m**10 + 20*s12**5 + 2*s13**3*s14*s23 - &
                 s13**2*s14**2*s23 - 5*s13*s14**3*s23 - 8*s14**4*s23 + &
                 8*s13**2*s14*s23**2 + 8*s13*s14**2*s23**2 + &
                 6*s14**3*s23**2 + 10*s13*s14*s23**3 + &
                 10*s14**2*s23**3 + 2*s14*s23**4 + 2*s13**4*s24 + &
                 11*s13**3*s14*s24 + s13**2*s14**2*s24 - &
                 10*s13*s14**3*s24 - 8*s14**4*s24 + 8*s13**3*s23*s24 + &
                 12*s13**2*s14*s23*s24 + 9*s13*s14**2*s23*s24 + &
                 7*s14**3*s23*s24 + 6*s13**2*s23**2*s24 + &
                 14*s13*s14*s23**2*s24 + 5*s14**2*s23**2*s24 + &
                 2*s13*s23**3*s24 + 11*s14*s23**3*s24 + &
                 8*s13**3*s24**2 + s13**2*s14*s24**2 + &
                 s13*s14**2*s24**2 + 4*s14**3*s24**2 + &
                 4*s13**2*s23*s24**2 + 7*s13*s14*s23*s24**2 + &
                 3*s14**2*s23*s24**2 - s13*s23**2*s24**2 + &
                 s14*s23**2*s24**2 + 4*s13**2*s24**3 + &
                 5*s13*s14*s24**3 + 4*s14**2*s24**3 - &
                 5*s13*s23*s24**3 - 10*s14*s23*s24**3 - 8*s13*s24**4 - &
                 8*s14*s24**4 + &
                 s12**4*(46*s13 + 46*s14 + 44*s23 + 40*s24) - &
                 8*m**8*(324*s12 + 109*s13 + 128*s14 + 85*s23 + &
                    72*s24) + &
                 4*s12**3*(9*s13**2 + 7*s14**2 + 25*s14*s23 + &
                    8*s23**2 + 21*s14*s24 + 12*s23*s24 + 4*s24**2 + &
                    s13*(16*s14 + 20*s23 + 23*s24)) + &
                 2*m**6*(702*s12**2 + 43*s13**2 + 167*s14**2 + &
                    100*s14*s23 - 9*s23**2 + 268*s14*s24 + &
                    38*s23*s24 + 11*s24**2 + &
                    2*s13*(59*s14 + 154*s23 + 14*s24) + &
                    s12*(434*s13 + 590*s14 + 434*s23 + 414*s24)) + &
                 s12**2*(12*s13**3 - 6*s14**3 + 10*s23**3 + &
                    11*s23**2*s24 - 5*s23*s24**2 - 12*s24**3 + &
                    s14**2*(64*s23 + 51*s24) + &
                    s13**2*(21*s14 + 48*s23 + 70*s24) + &
                    s14*(72*s23**2 + 97*s23*s24 + 39*s24**2) + &
                    s13*(9*s14**2 + 110*s14*s23 + 44*s23**2 + &
                       107*s14*s24 + 88*s23*s24 + 46*s24**2)) + &
                 m**4*(20*s12**3 + 21*s13**3 - 90*s14**3 + &
                    31*s14**2*s23 + 236*s14*s23**2 + 25*s23**3 - &
                    188*s14**2*s24 + 96*s14*s23*s24 + 36*s23**2*s24 + &
                    16*s14*s24**2 - 39*s23*s24**2 - 62*s24**3 + &
                    2*s12**2*(100*s13 + s14 + 56*s23 + 29*s24) + &
                    s13**2*(96*s14 - 109*s23 + 200*s24) + &
                    s13*(-3*s14**2 + 10*s14*s23 - 57*s23**2 + &
                       16*s14*s24 + 58*s23*s24 + 187*s24**2) + &
                    2*s12*(112*s13**2 - 41*s14**2 + 117*s14*s23 + &
                       72*s23**2 - 92*s14*s24 + 71*s23*s24 - &
                       9*s24**2 + s13*(111*s14 - 98*s23 + 189*s24))) + &
                 s12*(2*s13**4 - 8*s14**4 + 2*s23**4 - 5*s14**3*s24 + &
                    s23**3*s24 - 6*s23**2*s24**2 - 13*s23*s24**3 - &
                    8*s24**4 + &
                    s14**2*(46*s23**2 + 60*s23*s24 + 28*s24**2) + &
                    s13**2*(-6*s14**2 + 29*s14*s23 + 14*s23**2 + &
                       32*s14*s24 + 50*s23*s24 + 38*s24**2) + &
                    s14*(20*s23**3 + 26*s23**2*s24 + s23*s24**2 - &
                       11*s24**3) + s13**3*(s14 + 10*(s23 + 2*s24)) + &
                    s13*(-13*s14**3 + 8*s23**3 + 17*s23**2*s24 + &
                       7*s23*s24**2 - 8*s24**3 + &
                       s14**2*(25*s23 + 13*s24) + &
                       s14*(58*s23**2 + 94*s23*s24 + 52*s24**2))) - &
                 m**2*(152*s12**4 + 2*s13**4 - 16*s14**4 - &
                    24*s14**3*s23 + 105*s14**2*s23**2 + 45*s14*s23**3 + &
                    2*s23**4 - 49*s14**3*s24 + 66*s14**2*s23*s24 + &
                    53*s14*s23**2*s24 + 13*s23**3*s24 + &
                    28*s14**2*s24**2 - 15*s14*s23*s24**2 - &
                    27*s14*s24**3 - 15*s23*s24**3 - 16*s24**4 + &
                    s13**3*(13*s14 - 2*s23 + 39*s24) + &
                    4*s12**3*(75*s13 + 65*s14 + 69*s23 + 61*s24) + &
                    s13**2*(50*s14*s23 - 10*s23**2 + 67*s14*s24 + &
                       84*s23*s24 + 117*s24**2) + &
                    s12**2*(203*s13**2 + 96*s14**2 + 487*s14*s23 + &
                       145*s23**2 + 336*s14*s24 + 207*s23*s24 + &
                       42*s24**2 + s13*(287*s14 + 342*s23 + 507*s24)) + &
                    s13*(-15*s14**3 + s14**2*(32*s23 - 17*s24) - &
                       2*s24*(-4*s23**2 + 5*s23*s24 + 11*s24**2) + &
                       2*s14*(44*s23**2 + 58*s23*s24 + 47*s24**2)) + &
                    s12*(51*s13**3 - 40*s14**3 + 33*s23**3 + &
                       4*s23**2*s24 - 67*s23*s24**2 - 62*s24**3 + &
                       s14**2*(195*s23 + 56*s24) + &
                       s13**2*(62*s14 + 109*s23 + 306*s24) + &
                       s14*(268*s23**2 + 322*s23*s24 + 74*s24**2) + &
                       s13*(-5*s14**2 + 364*s14*s23 + 75*s23**2 + &
                         374*s14*s24 + 288*s23*s24 + 185*s24**2)))))/&
            ((m**2 - s14)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s24)*(-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (gm**6*(68*m**6 + 4*s12**3 - 6*s13**2*s23 - &
                 19*s13*s14*s23 + s14**2*s23 - 6*s13*s23**2 - &
                 6*s14*s23**2 - 3*s13**2*s24 - 13*s13*s14*s24 - &
                 6*s13*s23*s24 - 8*s14*s23*s24 - 2*s13*s24**2 - &
                 s12**2*(7*s13 - 5*s14 + 2*s23 + 4*s24) - &
                 2*m**4*(34*s12 + 32*s13 + 22*s14 + 35*s23 + 13*s24) - &
                 s12*(11*s13**2 + 6*s13*s14 - s14**2 + 23*s13*s23 + &
                    s14*s23 + 6*s23**2 + 25*s13*s24 + 7*s14*s24 + &
                    14*s23*s24 + 8*s24**2) + &
                 m**2*(76*s12**2 + 9*s13**2 + 32*s13*s14 - s14**2 + &
                    53*s13*s23 + 41*s14*s23 + 12*s23**2 + 25*s13*s24 + &
                    17*s14*s24 + 14*s23*s24 + 2*s24**2 + &
                    s12*(44*s13 + 20*s14 + 54*s23 + 50*s24))) + &
              2*(2*m**2 - s12 - s13 - s14)*(2*m**2 - s12 - s23 - s24)*&
               (8*m**8 + s12**4 + s13*s14**2*s23 + s14**2*s23**2 - &
                 8*m**6*(5*s12 - 3*s13 + 2*s14 + 2*s23 - 3*s24) - &
                 4*s13**3*s24 + s13**2*s14*s24 - 2*s13*s14**2*s24 - &
                 4*s13**2*s23*s24 + 2*s13*s14*s23*s24 - &
                 2*s13*s23**2*s24 + s14*s23**2*s24 + 5*s13**2*s24**2 - &
                 4*s13*s14*s24**2 + s13*s23*s24**2 - 4*s13*s24**3 + &
                 2*s12**3*(s13 + s14 + s23 + s24) + &
                 2*m**4*(19*s12**2 - 5*s13**2 - 7*s13*s14 + &
                    2*s14**2 + 11*s14*s23 + 2*s23**2 + &
                    s12*(-3*s13 + 17*s14 + 17*s23 - 3*s24) - &
                    23*s13*s24 - 7*s23*s24 - 5*s24**2) + &
                 s12**2*(s13**2 + 3*s13*s14 + s14**2 + 2*s13*s23 + &
                    4*s14*s23 + s23**2 + 2*s14*s24 + 3*s23*s24 + &
                    s24**2) - &
                 m**2*(12*s12**3 - 4*s13**3 + 5*s14**2*s23 + &
                    5*s14*s23**2 + s13**2*(s14 - 9*s24) + &
                    2*s14*s23*s24 - s23**2*s24 + s23*s24**2 - &
                    4*s24**3 + &
                    s12**2*(7*s13 + 17*s14 + 17*s23 + 7*s24) + &
                    s12*(3*s13**2 + 5*s14**2 + 22*s14*s23 + &
                       5*s23**2 + s13*(4*s14 + 4*s23 - 30*s24) + &
                       4*s14*s24 + 4*s23*s24 + 3*s24**2) - &
                    s13*(s14**2 - 2*s14*(s23 - 9*s24) + &
                       9*s24*(2*s23 + s24))) + &
                 s12*(s13**2*(s14 - 2*s24) + &
                    s23*(2*s14 + s24)*(s14 + s23 + s24) + &
                    s13*(s14**2 + s14*(3*s23 - s24) - &
                       s24*(s23 + 2*s24)))) + &
              gm**4*(736*m**8 - 2*s12**4 - 2*s13**3*s23 - &
                 5*s13**2*s14*s23 - 17*s13*s14**2*s23 + 2*s14**3*s23 + &
                 10*s13**2*s23**2 + 7*s13*s14*s23**2 + &
                 8*s14**2*s23**2 + 12*s13*s23**3 + 12*s14*s23**3 + &
                 s13**3*s24 - 9*s13**2*s14*s24 - 22*s13*s14**2*s24 + &
                 9*s13**2*s23*s24 - 10*s13*s14*s23*s24 - &
                 s14**2*s23*s24 - 7*s14*s23**2*s24 - &
                 15*s13*s14*s24**2 - 9*s13*s23*s24**2 + &
                 3*s14*s23*s24**2 - 15*s13*s24**3 - &
                 4*s12**3*(2*s13 + 2*s14 - 3*s23 + 4*s24) - &
                 2*m**6*(480*s12 + 37*s13 + 171*s14 + 199*s23 + &
                    289*s24) - &
                 s12**2*(11*s13**2 + 4*s14**2 - 14*s14*s23 - &
                    26*s23**2 + 21*s14*s24 + 7*s23*s24 + 11*s24**2 + &
                    s13*(33*s14 - 31*s23 + 34*s24)) + &
                 2*m**4*(201*s12**2 - 51*s13**2 - 17*s14**2 + &
                    93*s14*s23 + 7*s23**2 + &
                    s13*(-118*s14 + 76*s23 - 5*s24) + 168*s14*s24 + &
                    62*s23*s24 + 49*s24**2 + &
                    s12*(-8*s13 + 110*s14 + 162*s23 + 304*s24)) + &
                 s12*(-5*s13**3 + 2*s14**3 + 12*s23**3 + &
                    s13**2*(-16*s14 + 16*s23 - 9*s24) + &
                    5*s23**2*s24 - 4*s23*s24**2 + 3*s24**3 + &
                    s14**2*(4*s23 + s24) + &
                    2*s14*(17*s23**2 - 7*s23*s24 + s24**2) - &
                    s13*(15*s14**2 + 12*s14*s23 - 47*s23**2 + &
                       40*s14*s24 + 2*s23*s24 + 25*s24**2)) + &
                 m**2*(-48*s12**3 + s13**3 - 2*s14**3 + 8*s14**2*s23 - &
                    14*s14*s23**2 - 24*s23**3 + &
                    s12**2*(82*s13 - 80*s23 - 66*s24) + &
                    19*s14**2*s24 - 80*s14*s23*s24 + 7*s23**2*s24 - &
                    94*s14*s24**2 + 6*s23*s24**2 + 15*s24**3 + &
                    s13**2*(14*s14 + 2*s23 + 81*s24) + &
                    s13*(39*s14**2 + 72*s14*s23 - 25*s23**2 + &
                       182*s14*s24 - 42*s23*s24 + 11*s24**2) + &
                    2*s12*(34*s13**2 - 2*s14*s23 - 42*s23**2 - &
                       59*s14*s24 - 43*s23*s24 - 44*s24**2 + &
                       s13*(77*s14 - 35*s23 + 34*s24)))) + &
              gm**2*(656*m**10 + 8*s12**5 + 3*s13**3*s14*s23 + &
                 7*s13**2*s14**2*s23 + 10*s13*s14**3*s23 - &
                 4*s13**3*s23**2 + 2*s13**2*s14*s23**2 + &
                 14*s13*s14**2*s23**2 + 10*s14**3*s23**2 - &
                 4*s13**2*s23**3 + 2*s13*s14*s23**3 + &
                 10*s14**2*s23**3 - 5*s13**4*s24 + 5*s13**3*s14*s24 + &
                 16*s13**2*s14**2*s24 + 12*s13*s14**3*s24 + &
                 14*s13**3*s23*s24 + 29*s13**2*s14*s23*s24 + &
                 27*s13*s14**2*s23*s24 + 6*s14**3*s23*s24 + &
                 22*s13**2*s23**2*s24 + 27*s13*s14*s23**2*s24 + &
                 14*s14**2*s23**2*s24 + 12*s13*s23**3*s24 + &
                 10*s14*s23**3*s24 + 25*s13**3*s24**2 + &
                 39*s13**2*s14*s24**2 + 22*s13*s14**2*s24**2 + &
                 23*s13**2*s23*s24**2 + 17*s13*s14*s23*s24**2 + &
                 6*s14**2*s23*s24**2 + 16*s13*s23**2*s24**2 + &
                 7*s14*s23**2*s24**2 + 5*s13**2*s24**3 - &
                 2*s13*s14*s24**3 + 5*s13*s23*s24**3 + &
                 3*s14*s23*s24**3 - 5*s13*s24**4 - &
                 8*m**8*(136*s12 + 61*s13 + 74*s14 + 46*s23 + 33*s24) + &
                 s12**4*(22*s13 + 26*(s14 + s23 + s24)) + &
                 2*m**6*(322*s12**2 - 13*s13**2 + 55*s14**2 + &
                    116*s14*s23 - 25*s23**2 + &
                    2*s12*(51*s13 + 145*s14 + 65*s23 - 21*s24) + &
                    148*s14*s24 - 74*s23*s24 - 69*s24**2 + &
                    2*s13*(23*s14 + 86*s23 + 22*s24)) + &
                 4*s12**3*(5*s13**2 + 7*s14**2 + 7*s23**2 + &
                    16*s23*s24 + 7*s24**2 + 2*s14*(9*s23 + 7*s24) + &
                    s13*(15*s14 + 11*s23 + 23*s24)) + &
                 s12**2*(9*s13**3 + 10*s14**3 + 10*s23**3 + &
                    48*s23**2*s24 + 45*s23*s24**2 + 13*s24**3 + &
                    6*s14**2*(11*s23 + 6*s24) + &
                    s13**2*(41*s14 + 16*s23 + 89*s24) + &
                    6*s14*(11*s23**2 + 18*s23*s24 + 6*s24**2) + &
                    s13*(48*s14**2 + 96*s14*s23 + 24*s23**2 + &
                       143*s14*s24 + 143*s23*s24 + 77*s24**2)) + &
                 m**4*(-124*s12**3 + 43*s13**3 - 2*s14**3 + &
                    40*s14**2*s23 + 120*s14*s23**2 + 22*s23**3 - &
                    43*s14**2*s24 + 68*s14*s23*s24 + 147*s23**2*s24 + &
                    48*s14*s24**2 + 148*s23*s24**2 + 43*s24**3 + &
                    s13**2*(140*s14 - 48*s23 + 165*s24) + &
                    s12**2*(220*s13 - 62*s14 + 90*s23 + 356*s24) + &
                    s13*(115*s14**2 - 76*s14*s23 - 3*s23**2 + &
                       66*s14*s24 + 178*s23*s24 + 141*s24**2) + &
                    2*s12*(170*s13**2 + 3*s14**2 + 84*s14*s23 + &
                       79*s23**2 + 11*s14*s24 + 301*s23*s24 + &
                       222*s24**2 + s13*(197*s14 - 21*s23 + 202*s24))) &
+ s12*(3*s13**4 + s14**3*(20*s23 + 6*s24) + &
                    s13**3*(10*s14 + s23 + 26*s24) + &
                    2*s14**2*(24*s23**2 + 25*s23*s24 + 6*s24**2) + &
                    s13**2*(17*s14**2 + 29*s14*s23 - 4*s23**2 + &
                       77*s14*s24 + 88*s23*s24 + 66*s24**2) + &
                    s24*(10*s23**3 + 17*s23**2*s24 + 10*s23*s24**2 + &
                       3*s24**3) + &
                    s14*(20*s23**3 + 62*s23**2*s24 + 37*s23*s24**2 + &
                       9*s24**3) + &
                    s13*(10*s14**3 + 2*s23**3 + 71*s23**2*s24 + &
                       65*s23*s24**2 + 10*s24**3 + &
                       s14**2*(62*s23 + 71*s24) + &
                       2*s14*(19*s23**2 + 65*s23*s24 + 38*s24**2))) - &
                 m**2*(20*s12**4 - 5*s13**4 + 16*s14**3*s23 + &
                    80*s14**2*s23**2 + 28*s14*s23**3 - 2*s14**3*s24 + &
                    49*s14**2*s23*s24 + 81*s14*s23**2*s24 + &
                    22*s23**3*s24 + 8*s14**2*s24**2 + &
                    60*s14*s23*s24**2 + 23*s23**2*s24**2 + &
                    23*s14*s24**3 + 8*s23*s24**3 - 5*s24**4 + &
                    4*s12**3*(36*s13 + 23*s14 + 29*s23 + 44*s24) + &
                    s13**3*(8*s14 + 15*s23 + 63*s24) + &
                    s13**2*(23*s14**2 - 20*s23**2 + 69*s23*s24 + &
                       88*s24**2 + 6*s14*(8*s23 + 27*s24)) + &
                    s12**2*(175*s13**2 + 88*s14**2 + 268*s14*s23 + &
                       124*s23**2 + 203*s14*s24 + 371*s23*s24 + &
                       215*s24**2 + s13*(319*s14 + 159*s23 + 450*s24)) &
+ s13*(22*s14**3 + 2*s23**3 + 129*s23**2*s24 + 134*s23*s24**2 + &
                       23*s24**3 + s14**2*(65*s23 + 113*s24) + &
                       s14*(29*s23**2 + 56*s23*s24 + 41*s24**2)) + &
                    s12*(79*s13**3 + 16*s14**3 + 28*s23**3 + &
                       179*s23**2*s24 + 198*s23*s24**2 + 87*s24**3 + &
                       s14**2*(168*s23 + 43*s24) + &
                       s13**2*(186*s14 + 70*s23 + 297*s24) + &
                       2*s14*(102*s23**2 + 163*s23*s24 + 69*s24**2) + &
                       s13*(163*s14**2 + 254*s14*s23 + 35*s23**2 + &
                         388*s14*s24 + 420*s23*s24 + 241*s24**2)))))/&
            ((m**2 - s13)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s24)*(-gm**2 - 2*m**2 + s12 + s23 + s24)) + &
           (4*(-2*(2*m**2 - s12 - s23 - s24)*&
                 (-2*m**2 + s12 + s14 + s24)**2*&
                 (12*m**6 - s12**3 - s13*s14*s23 - s14*s23**2 - &
                   2*m**4*(11*s12 - 6*s13 + 2*s14 + 7*s23 - s24) + &
                   3*s13**2*s24 + 2*s13*s14*s24 + s13*s23*s24 - &
                   s12**2*(2*s13 + s14 + 2*s23 + s24) - &
                   s12*(s13**2 + s13*(s14 + 2*s23 - 2*s24) + &
                      s23*(2*s14 + s23 + s24)) + &
                   m**2*(10*s12**2 - 3*s13**2 + 5*s14*s23 + 3*s23**2 + &
                      s12*(5*s13 + 5*s14 + 13*s23 - 3*s24) - &
                      5*s23*s24 + 2*s24**2 - s13*(s14 - 2*s23 + 15*s24)&
)) + gm**6*(-64*m**6 + s12**3 - 6*s13**2*s23 + 6*s13*s14*s23 + &
                   s14**2*s23 - 30*s13*s23**2 - 21*s14*s23**2 - &
                   24*s23**3 + 5*s13*s14*s24 - 27*s13*s23*s24 - &
                   17*s14*s23*s24 - 42*s23**2*s24 + 5*s13*s24**2 - &
                   18*s23*s24**2 + &
                   m**4*(-38*s12 - 153*s13 - 33*s14 + 49*s23 + s24) + &
                   s12**2*(s13 + 2*(s14 - 10*s23 + s24)) + &
                   s12*(s14**2 - 19*s14*s23 - 45*s23**2 + 2*s14*s24 - &
                      38*s23*s24 + s24**2 + s13*(s14 - 27*s23 + 6*s24)&
) + m**2*(39*s12**2 + 6*s13**2 - 11*s13*s14 - s14**2 + 151*s13*s23 + &
                      49*s14*s23 + 37*s23**2 + 54*s13*s24 + &
                      22*s14*s24 + 52*s23*s24 + 9*s24**2 + &
                      s12*(38*s13 + 28*s14 + 78*s23 + 52*s24))) + &
                gm**4*(492*m**8 - 12*s12**4 - 18*s13**2*s14*s23 - &
                   13*s13*s14**2*s23 - 2*s14**3*s23 - &
                   39*s13*s14*s23**2 - 28*s14**2*s23**2 - &
                   30*s14*s23**3 - 12*s13**3*s24 - 23*s13**2*s14*s24 - &
                   10*s13*s14**2*s24 - 27*s13**2*s23*s24 - &
                   75*s13*s14*s23*s24 - 34*s14**2*s23*s24 - &
                   54*s13*s23**2*s24 - 85*s14*s23**2*s24 - &
                   36*s23**3*s24 - 41*s13**2*s24**2 - &
                   62*s13*s14*s24**2 - 18*s14**2*s24**2 - &
                   83*s13*s23*s24**2 - 80*s14*s23*s24**2 - &
                   72*s23**2*s24**2 - 52*s13*s24**3 - 36*s14*s24**3 - &
                   48*s23*s24**3 - 18*s24**4 - &
                   s12**3*(31*s13 + 26*s14 + 58*s23 + 56*s24) - &
                   2*m**6*(313*s12 + 85*s13 + 96*s14 + 95*s23 + &
                      316*s24) - &
                   s12**2*(31*s13**2 + 16*s14**2 + 100*s14*s23 + &
                      76*s23**2 + 92*s14*s24 + 175*s23*s24 + &
                      94*s24**2 + 2*s13*(23*s14 + 46*s23 + 58*s24)) - &
                   m**4*(102*s12**2 + 73*s13**2 + 45*s14**2 + &
                      49*s14*s23 + 166*s23**2 + &
                      s12*(263*s13 + 113*s14 + 129*s23 - 79*s24) + &
                      25*s14*s24 - 20*s23*s24 - 134*s24**2 + &
                      s13*(320*s14 + 25*s23 + 323*s24)) - &
                   s12*(12*s13**3 + 2*s14**3 + 30*s23**3 + &
                      151*s23**2*s24 + 165*s23*s24**2 + 68*s24**3 + &
                      4*s14**2*(11*s23 + 9*s24) + &
                      s13**2*(25*s14 + 39*s23 + 72*s24) + &
                      s14*(104*s23**2 + 191*s23*s24 + 102*s24**2) + &
                      s13*(15*s14**2 + 99*s14*s23 + 57*s23**2 + &
                        110*s14*s24 + 187*s23*s24 + 137*s24**2)) + &
                   m**2*(97*s12**3 + 12*s13**3 + 2*s14**3 + &
                      63*s14**2*s23 + 170*s14*s23**2 + 74*s23**3 + &
                      62*s14**2*s24 + 205*s14*s23*s24 + &
                      227*s23**2*s24 + 122*s14*s24**2 + &
                      147*s23*s24**2 + 68*s24**3 + &
                      s13**2*(41*s14 - 15*s23 + 156*s24) + &
                      s12**2*(270*s13 + 170*s14 + 285*s23 + 271*s24) + &
                      s13*(23*s14**2 + 205*s14*s23 + 71*s23**2 + &
                        291*s14*s24 + 331*s23*s24 + 305*s24**2) + &
                      s12*(152*s13**2 + 71*s14**2 + 330*s14*s23 + &
                        290*s23**2 + 293*s14*s24 + 472*s23*s24 + &
                        234*s24**2 + s13*(279*s14 + 386*s23 + 575*s24))&
)) - gm**2*(528*m**10 - 4*m**8*&
                    (276*s12 + 83*s13 + 143*s14 + 21*s23 + 97*s24) + &
                   2*m**6*(260*s12**2 - 14*s13**2 + 87*s14**2 - &
                      30*s14*s23 - 141*s23**2 + 261*s14*s24 - &
                      133*s23*s24 + 110*s24**2 + &
                      s13*(7*s14 + 101*s23 + 24*s24) + &
                      s12*(-58*s13 + 276*s14 - 148*s23 + 350*s24)) + &
                   m**4*(92*s12**3 + 18*s13**3 - 2*s14**3 + &
                      59*s14**2*s23 + 359*s14*s23**2 + 76*s23**3 - &
                      155*s14**2*s24 + 243*s14*s23*s24 + &
                      353*s23**2*s24 - 294*s14*s24**2 + &
                      164*s23*s24**2 - 201*s24**3 + &
                      2*s13**2*(34*s14 - 28*s23 + 65*s24) + &
                      s12**2*(483*s13 + 139*s14 + 633*s23 + 69*s24) + &
                      s13*(140*s14**2 - 3*s14*s23 + 54*s23**2 + &
                        313*s14*s24 + 49*s23*s24 + 157*s24**2) + &
                      s12*(196*s13**2 + 25*s14**2 + 608*s14*s23 + &
                        539*s23**2 - 197*s14*s24 + 827*s23*s24 - &
                        226*s24**2 + s13*(523*s14 + 223*s23 + 658*s24))&
) + (s12 + s14 + s24)*(12*s12**4 + 10*s14**2*s23**2 + 14*s14*s23**3 + &
                      9*s13**3*s24 + 6*s14**2*s23*s24 + &
                      30*s14*s23**2*s24 + 12*s23**3*s24 + &
                      9*s14*s23*s24**2 + 24*s23**2*s24**2 - &
                      6*s14*s24**3 + 6*s23*s24**3 - 6*s24**4 + &
                      s12**3*(33*s13 + 22*s14 + 38*s23 + 42*s24) + &
                      s13**2*&
                       (9*s14*s23 + 20*s14*s24 + 3*s23*s24 + &
                        11*s24**2) + &
                      s12**2*&
                       (30*s13**2 + 10*s14**2 + 58*s14*s23 + &
                        40*s23**2 + 46*s14*s24 + 98*s23*s24 + &
                        39*s24**2 + s13*(41*s14 + 64*s23 + 78*s24)) + &
                      s13*(2*s14**2*(5*s23 + 6*s24) + &
                        s24*(16*s23**2 + 18*s23*s24 + 3*s24**2) + &
                        s14*(17*s23**2 + 25*s23*s24 + 20*s24**2)) + &
                      s12*(9*s13**3 + 14*s23**3 + 68*s23**2*s24 + &
                        63*s23*s24**2 + 3*s24**3 + &
                        s14**2*(20*s23 + 6*s24) + &
                        s13**2*(19*s14 + 26*s23 + 41*s24) + &
                        s14*(50*s23**2 + 76*s23*s24 + 15*s24**2) + &
                        s13*(10*s14**2 + 58*s14*s23 + 31*s23**2 + &
                        57*s14*s24 + 86*s23*s24 + 48*s24**2))) - &
                   m**2*(95*s12**4 + 16*s14**3*s23 + &
                      117*s14**2*s23**2 + 70*s14*s23**3 - &
                      2*s14**3*s24 + 69*s14**2*s23*s24 + &
                      247*s14*s23**2*s24 + 66*s23**3*s24 - &
                      45*s14**2*s24**2 + 76*s14*s23*s24**2 + &
                      138*s23**2*s24**2 - 112*s14*s24**3 + &
                      25*s23*s24**3 - 73*s24**4 + &
                      9*s13**3*(s14 + 3*s24) + &
                      s12**3*(237*s13 + 204*s14 + 308*s23 + 269*s24) + &
                      s13**2*&
                       (29*s14**2 - 12*s14*s23 + 123*s14*s24 - &
                        20*s23*s24 + 80*s24**2) + &
                      s12**2*&
                       (151*s13**2 + 125*s14**2 + 283*s23**2 + &
                        666*s23*s24 + 173*s24**2 + &
                        6*s14*(89*s23 + 56*s24) + &
                        4*s13*(98*s14 + 76*s23 + 139*s24)) + &
                      s13*(22*s14**3 + s14**2*(79*s23 + 145*s24) + &
                        s24*(59*s23**2 + 101*s23*s24 + 55*s24**2) + &
                        s14*(61*s23**2 + 174*s23*s24 + 188*s24**2)) + &
                      s12*(27*s13**3 + 16*s14**3 + 70*s23**3 + &
                         425*s23**2*s24 + 385*s23*s24**2 - 74*s24**3 + &
                         s14**2*(242*s23 + 63*s24) + &
                         3*s13**2*(54*s14 + 6*s23 + 77*s24) + &
                         5*s14*(80*s23**2 + 125*s23*s24 + s24**2) + &
                         s13*&
                         (177*s14**2 + 359*s14*s23 + 85*s23**2 + &
                         581*s14*s24 + 413*s23*s24 + 374*s24**2))))))/&
            ((m**2 - s13)*(gm**2 - m**2 + s24)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) + &
           (4*(-2*(2*m**2 - s12 - s23 - s24)*&
                 (-2*m**2 + s12 + s14 + s24)**2*&
                 (40*m**6 + 2*s12**3 + s13*s14*s23 + 2*s14**2*s23 + &
                   s14*s23**2 + s13**2*s24 + s13*s23*s24 + &
                   4*s14*s23*s24 + 2*s14*s24**2 + 2*s23*s24**2 + &
                   2*s24**3 - &
                   4*m**4*(3*s12 - s13 - s14 + 3*s23 + 3*s24) + &
                   s12**2*(3*s13 + 4*s14 + 3*s23 + 4*s24) + &
                   s12*(s13**2 + 2*s14**2 + 5*s14*s23 + s23**2 + &
                      4*s14*s24 + 3*s23*s24 + 4*s24**2 + &
                      s13*(3*s14 + 2*s23 + 3*s24)) - &
                   m**2*(8*s12**2 + s13**2 + 2*s14**2 + 13*s14*s23 - &
                      3*s23**2 - 2*s14*s24 + 21*s23*s24 + 2*s24**2 + &
                      2*s12*(4*s13 + 5*s14 + 5*s23 + 6*s24) + &
                      s13*(s14 - 4*s23 + 9*s24))) + &
                gm**6*(-252*m**6 + 11*s12**3 + 13*s14**2*s23 + &
                   9*s14*s23**2 + 11*s13*s14*s24 + 6*s14**2*s24 + &
                   3*s13*s23*s24 + 31*s14*s23*s24 + 12*s23**2*s24 + &
                   11*s13*s24**2 + 12*s14*s24**2 + 18*s23*s24**2 + &
                   6*s24**3 + &
                   m**4*(-6*s12 + 17*s13 - 7*s14 + 187*s23 + 23*s24) + &
                   s12**2*(11*s13 + 22*s14 + 14*(s23 + 2*s24)) + &
                   s12*(11*s14**2 + 27*s14*s23 + 3*s23**2 + &
                      34*s14*s24 + 32*s23*s24 + 23*s24**2 + &
                      s13*(11*s14 + 3*s23 + 22*s24)) + &
                   m**2*(5*s12**2 - 19*s14**2 - 33*s14*s23 - &
                      13*s23**2 - &
                      2*s12*(11*s13 + 8*s14 + 10*s23 - 9*s24) - &
                      12*s14*s24 + 6*s23*s24 + 13*s24**2 - &
                      s13*(11*s14 + 9*s23 + 22*s24))) - &
                gm**4*(1200*m**8 + 11*s12**4 + 11*s13*s14**2*s23 - &
                   6*s13*s14*s23**2 - 14*s14**2*s23**2 - &
                   6*s14*s23**3 + 11*s13**2*s14*s24 + &
                   8*s13*s14**2*s24 + 10*s14**3*s24 - &
                   6*s13**2*s23*s24 + 19*s13*s14*s23*s24 + &
                   21*s14**2*s23*s24 - 6*s13*s23**2*s24 - &
                   12*s14*s23**2*s24 + 5*s13**2*s24**2 + &
                   21*s13*s14*s24**2 + 38*s14**2*s24**2 + &
                   2*s13*s23*s24**2 + 35*s14*s23*s24**2 + &
                   2*s23**2*s24**2 + 13*s13*s24**3 + 46*s14*s24**3 + &
                   14*s23*s24**3 + 18*s24**4 + &
                   2*m**6*(102*s12 + 79*s13 + 539*s14 - 171*s23 + &
                      41*s24) + &
                   s12**3*(16*s13 + 30*s14 + 16*s23 + 53*s24) + &
                   s12**2*(5*s13**2 + 27*s14**2 - s23**2 + &
                      45*s23*s24 + 91*s24**2 + &
                      5*s14*(5*s23 + 22*s24) + &
                      s13*(29*s14 + 4*s23 + 45*s24)) + &
                   s12*(8*s14**3 - 6*s23**3 - 2*s23**2*s24 + &
                      43*s23*s24**2 + 67*s24**3 + &
                      s13**2*(11*s14 - 6*s23 + 10*s24) + &
                      s14**2*(9*s23 + 67*s24) + &
                      s13*(13*s14**2 + 6*s14*s23 - 12*s23**2 + &
                        50*s14*s24 + 6*s23*s24 + 42*s24**2) + &
                      s14*(-15*s23**2 + 59*s23*s24 + 126*s24**2)) + &
                   m**2*(57*s12**3 - 10*s14**3 + 94*s14**2*s23 + &
                      22*s14*s23**2 - 22*s23**3 + &
                      s13**2*(-11*s14 + 6*s23 - 3*s24) + &
                      11*s14**2*s24 + 155*s14*s23*s24 + &
                      100*s23**2*s24 + 54*s14*s24**2 + &
                      149*s23*s24**2 + 37*s24**3 + &
                      s12**2*(-4*s13 + 88*s14 + 84*s23 + 152*s24) + &
                      s13*(-19*s14**2 + 49*s14*s23 - 24*s23**2 - &
                        9*s14*s24 + 39*s23*s24 + 6*s24**2) + &
                      s12*(-3*s13**2 + 17*s14**2 + 187*s14*s23 + &
                        19*s23**2 + 135*s14*s24 + 221*s23*s24 + &
                        132*s24**2 + 2*s13*(5*s14 + 2*s23 + s24))) - &
                   m**4*(500*s12**2 + &
                      s12*(241*s13 + 685*s14 + 563*s23 + 1067*s24) + &
                      2*(s13**2 + 75*s14**2 + 338*s14*s23 + &
                        61*s23**2 + 348*s14*s24 + 283*s23*s24 + &
                        275*s24**2 + s13*(37*s14 - 24*s23 + 118*s24)))) &
+ gm**2*(512*m**10 - 16*m**8*(30*s12 - 8*s13 + 26*s14 - s23 + 81*s24) + &
                   2*m**6*(56*s12**2 + 3*s13**2 - 63*s14**2 + &
                      56*s14*s23 - 37*s23**2 + 146*s14*s24 - &
                      48*s23*s24 + 305*s24**2 - &
                      2*s13*(8*s14 - 11*s23 + 8*s24) + &
                      s12*(-34*s13 + 50*s14 - 62*s23 + 366*s24)) + &
                   m**4*(-8*s12**3 + 93*s14**3 + 166*s14**2*s23 + &
                      35*s14*s23**2 - 38*s23**3 - &
                      4*s12**2*(s13 - 34*s14 - 28*s23 - 27*s24) + &
                      321*s14**2*s24 + 374*s14*s23*s24 + &
                      183*s23**2*s24 + 261*s14*s24**2 + &
                      382*s23*s24**2 + 117*s24**3 + &
                      s13**2*(11*s14 + 16*s23 + 3*s24) - &
                      2*s13*(2*s14**2 + 24*s14*s23 + 33*s23**2 - &
                        49*s14*s24 + 40*s23*s24 + 16*s24**2) + &
                      s12*(3*s13**2 + 229*s14**2 + 264*s14*s23 + &
                        19*s23**2 + 2*s13*(52*s14 - 27*s23 - 18*s24) + &
                        418*s14*s24 + 516*s23*s24 + 233*s24**2)) + &
                   (s12 + s14 + s24)*&
                    (8*s14**3*s23 + 15*s14**2*s23**2 + 8*s14*s23**3 + &
                      8*s14**3*s24 + 29*s14**2*s23*s24 + &
                      22*s14*s23**2*s24 + 16*s14**2*s24**2 + &
                      27*s14*s23*s24**2 - 4*s23**2*s24**2 + &
                      12*s14*s24**3 + 4*s24**4 + &
                      s13**2*s24*(7*s14 + 8*s23 + 6*s24) + &
                      s12**3*(6*s13 + 11*s14 + 10*s23 + 7*s24) + &
                      s12**2*&
                       (6*s13**2 + 19*s14**2 + 36*s14*s23 + &
                        18*s23**2 + 35*s14*s24 + 25*s23*s24 + &
                        18*s24**2 + 3*s13*(8*s14 + 8*s23 + 5*s24)) + &
                      s13*(7*s14**2*(s23 + 2*s24) + &
                        s24*(8*s23**2 + 12*s23*s24 + 3*s24**2) + &
                        s14*(8*s23**2 + 31*s23*s24 + 23*s24**2)) + &
                      s12*(8*s14**3 + 8*s23**3 + 16*s23**2*s24 + &
                        15*s23*s24**2 + 15*s24**3 + &
                        s13**2*(7*s14 + 8*s23 + 12*s24) + &
                        s14**2*(34*s23 + 33*s24) + &
                        s13*(15*s14**2 + 32*s14*s23 + 16*s23**2 + &
                        47*s14*s24 + 36*s23*s24 + 12*s24**2) + &
                        s14*(33*s23**2 + 57*s23*s24 + 36*s24**2))) + &
                   m**2*(4*s12**4 - 16*s14**4 - 76*s14**3*s23 - &
                      72*s14**2*s23**2 + 14*s14*s23**3 - &
                      93*s14**3*s24 - 239*s14**2*s23*s24 - &
                      206*s14*s23**2*s24 + 32*s23**3*s24 - &
                      179*s14**2*s24**2 - 344*s14*s23*s24**2 - &
                      100*s23**2*s24**2 - 191*s14*s24**3 - &
                      159*s23*s24**3 - 89*s24**4 - &
                      s12**3*(9*s13 + 63*s14 + 47*s23 + 89*s24) - &
                      s13**2*&
                       (7*s14**2 + 8*s14*(s23 + 3*s24) + &
                        3*s24*(8*s23 + 5*s24)) - &
                      s12**2*&
                       (15*s13**2 + 143*s14**2 + 47*s23**2 + &
                        284*s23*s24 + 279*s24**2 + &
                        8*s13*(13*s14 + 4*s23 + 2*s24) + &
                        8*s14*(24*s23 + 41*s24)) + &
                      s13*(-21*s14**3 + s14**2*(15*s23 - 94*s24) + &
                        s14*(16*s23**2 - 26*s23*s24 - 93*s24**2) + &
                        s24*(18*s23**2 - 5*s23*s24 + 2*s24**2)) - &
                      s12*(92*s14**3 - 14*s23**3 + 159*s23**2*s24 + &
                         396*s23*s24**2 + 275*s24**3 + &
                         6*s13**2*(4*s14 + 4*s23 + 5*s24) + &
                         s14**2*(221*s23 + 317*s24) + &
                         s13*&
                        (108*s14**2 + 27*s14*s23 - 6*s23**2 + &
                        197*s14*s24 + 37*s23*s24 + 5*s24**2) + &
                         s14*(119*s23**2 + 541*s23*s24 + 456*s24**2)))))&
)/((m**2 - s14)*(gm**2 - m**2 + s24)*(gm**2 - 2*m**2 + s12 + s14 + s24)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) + &
           (4*(-4*(-2*m**2 + s12 + s13 + s23)**2*&
                 (2*m**2 - s12 - s23 - s24)*&
                 (6*m**6 + m**4*&
                    (-9*s12 + 7*s13 + s14 - 8*s23 - 2*s24) + &
                   s13*(-s12**2 - s12*(s13 + s23 - s24) + &
                      (s13 + s14)*s24) + &
                   m**2*(3*s12**2 - s13**2 + 2*s23**2 + &
                      s12*(2*s13 + 5*s23 - s24) - s14*s24 + 2*s24**2 - &
                      s13*(s14 + 7*s24))) + &
                2*gm**6*(5*m**6 - 3*s13*s14*s24 + &
                   m**4*(-17*s13 - 3*s14 + 2*s23 + 5*s24) + &
                   m**2*(2*s12*(s13 - 3*s24) + s13*(3*s14 + 17*s24) + &
                      3*s24*(s14 - 2*(s23 + s24)))) - &
                gm**4*(952*m**8 - &
                   2*m**6*(358*s12 - 25*s13 + 49*s14 + 343*s23 + &
                      113*s24) + &
                   m**4*(-36*s12**2 - 61*s13**2 + 115*s14*s23 - &
                      53*s23**2 + s13*(125*s14 + 24*s23 - 225*s24) + &
                      10*s14*s24 - 7*s23*s24 - 56*s24**2 + &
                      s12*(65*s13 + 115*s14 - 89*s23 + 29*s24)) + &
                   s13*(s12**3 - 7*s13**2*s24 + &
                      s12**2*(2*s13 + 23*s14 + 2*s23 + 15*s24) + &
                      s13*(23*s14*s23 + 4*s14*s24 - 7*s23*s24) + &
                      s14*(23*s23**2 + 16*s23*s24 - 12*s24**2) + &
                      s12*(s13**2 + 46*s14*s23 + s23**2 + &
                        16*s14*s24 + 15*s23*s24 + &
                        s13*(23*s14 + 2*s23 + 8*s24))) + &
                   m**2*(43*s12**3 + 7*s13**3 - 23*s14*s23**2 + &
                      44*s23**3 - 16*s14*s23*s24 + 48*s23**2*s24 + &
                      12*s14*s24**2 + 8*s23*s24**2 - 24*s24**3 + &
                      s12**2*(26*s13 - 23*s14 + 130*s23 + 33*s24) + &
                      s13**2*(-27*s14 + 10*s23 + 58*s24) + &
                      s13*(45*s23**2 + 62*s23*s24 + 44*s24**2 - &
                        2*s14*(69*s23 + 7*s24)) + &
                      s12*(-2*s13**2 - 46*s14*s23 + 131*s23**2 - &
                        16*s14*s24 + 81*s23*s24 + 8*s24**2 + &
                        s13*(-138*s14 + 71*s23 + 11*s24)))) + &
                gm**2*(512*m**10 - &
                   4*m**8*(342*s12 + 145*s13 + 11*s14 + 287*s23 + &
                      13*s24) + &
                   2*m**6*(550*s12**2 + 85*s13**2 + 46*s14*s23 + &
                      404*s23**2 + s13*(39*s14 + 483*s23 - 44*s24) - &
                      21*s14*s24 + 135*s23*s24 + 9*s24**2 + &
                      2*s12*(336*s13 + 23*s14 + 477*s23 + 92*s24)) - &
                   s13*(s12 + s13 + s23)*&
                    (17*s12**3 + s13**2*(6*s23 - 4*s24) + &
                      s12**2*(21*s13 + 11*s14 + 34*s23 + 18*s24) + &
                      s14*(11*s23**2 - 3*s23*s24 - 16*s24**2) + &
                      s13*(8*s14*s23 + 6*s23**2 - 2*s14*s24 + &
                        s23*s24 - 7*s24**2) + &
                      s12*(4*s13**2 + 22*s14*s23 + 17*s23**2 - &
                        3*s14*s24 + 18*s23*s24 - 7*s24**2 + &
                        s13*(8*s14 + 27*s23 + 14*s24))) - &
                   m**4*(330*s12**3 + 32*s13**3 + 57*s14*s23**2 + &
                      205*s23**3 + &
                      s13**2*(40*s14 + 309*s23 - 167*s24) - &
                      31*s14*s23*s24 + 166*s23**2*s24 - &
                      28*s14*s24**2 + 69*s23*s24**2 + 56*s24**3 + &
                      s12**2*(875*s13 + 57*s14 + 865*s23 + 247*s24) + &
                      s13*(153*s14*s23 + 434*s23**2 - 71*s14*s24 - &
                        21*s23*s24 - 83*s24**2) + &
                      s12*(487*s13**2 + 114*s14*s23 + 740*s23**2 - &
                        31*s14*s24 + 413*s23*s24 + 59*s24**2 + &
                        s13*(153*s14 + 1309*s23 + 148*s24))) + &
                   m**2*(29*s12**4 + 2*s13**4 + &
                      s13**3*(6*s14 + 69*s23 - 35*s24) + &
                      s12**3*(208*s13 + 11*s14 + 99*s23 + 38*s24) + &
                      s13**2*&
                       (69*s14*s23 + 102*s23**2 - 31*s14*s24 - &
                        50*s23*s24 - 80*s24**2) + &
                      s12**2*&
                       (264*s13**2 + 33*s14*s23 + 123*s23**2 - &
                        3*s14*s24 + 96*s23*s24 + 17*s24**2 + &
                        s13*(76*s14 + 467*s23 + 107*s24)) + &
                      s12*(87*s13**3 + 33*s14*s23**2 + 65*s23**3 - &
                        6*s14*s23*s24 + 78*s23**2*s24 - &
                        16*s14*s24**2 + 41*s23*s24**2 + 32*s24**3 + &
                        s13**2*(69*s14 + 366*s23 + 34*s24) + &
                        s13*(152*s14*s23 + 310*s23**2 - 36*s14*s24 + &
                        102*s23*s24 - 63*s24**2)) + &
                      s13*(51*s23**3 - 5*s23**2*s24 - 46*s23*s24**2 + &
                        32*s24**3 + &
                        4*s14*(19*s23**2 - 9*s23*s24 - 11*s24**2)) + &
                      s23*(s14*(11*s23**2 - 3*s23*s24 - 16*s24**2) + &
                         4*(3*s23**3 + 5*s23**2*s24 + 6*s23*s24**2 + &
                         8*s24**3))))))/&
            ((m**2 - s13)**2*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (2*gm**6*(m**4*(15*s12 + 2*(s13 - s14 - s23 + s24)) + &
                 m**2*(2*s12**2 - &
                    2*(s13*(s14 + s24) + s14*(-s14 - 2*s23 + s24)) + &
                    s12*(-7*s13 - 7*s14 + 2*(s23 + s24))) - &
                 s14*(2*s12**2 + 2*s14*s23 - 2*s13*s24 + &
                    s12*(-s13 + 2*(s14 + s23 + s24)))) + &
              2*(2*m**2 - s12 - s13 - s14)*(2*m**2 - s12 - s23 - s24)*&
               (96*m**8 - 2*s12**4 - s13**2*s14*s23 + &
                 2*s13*s14**2*s23 - s14**3*s23 - 4*s13*s14*s23**2 + &
                 s14**2*s23**2 - 2*s14*s23**3 - s13**3*s24 + &
                 2*s13**2*s14*s24 - s13*s14**2*s24 - &
                 2*s13**2*s23*s24 + 2*s13*s14*s23*s24 - &
                 2*s14**2*s23*s24 - 2*s13*s23**2*s24 + s13**2*s24**2 - &
                 4*s13*s14*s24**2 - 2*s14*s23*s24**2 - 2*s13*s24**3 - &
                 4*s12**3*(s13 + s14 + s23 + s24) - &
                 4*m**6*(20*s12 + 9*s13 + 9*s14 + 13*s23 + 13*s24) + &
                 m**4*(-3*s13**2 - 3*s14**2 + 2*s14*s23 + 9*s23**2 + &
                    34*s14*s24 - 18*s23*s24 + 9*s24**2 + &
                    4*s12*(s13 + s14 + s23 + s24) + &
                    2*s13*(-9*s14 + 17*s23 + s24)) - &
                 s12**2*(3*s13**2 + 3*s14**2 + &
                    s13*(4*s14 + 6*s23 + 5*s24) + &
                    s14*(5*s23 + 6*s24) + &
                    4*(s23**2 + s23*s24 + s24**2)) - &
                 s12*(s13**3 + s14**3 + &
                    s13**2*(s14 + 3*s23 + 2*s24) + &
                    s14**2*(2*s23 + 3*s24) + &
                    s14*(3*s23**2 + 3*s23*s24 + 4*s24**2) + &
                    2*(s23**3 + s23**2*s24 + s23*s24**2 + s24**3) + &
                    s13*(s14**2 + 4*s23**2 + 3*s23*s24 + 3*s24**2 + &
                       3*s14*(s23 + s24))) + &
                 m**2*(12*s12**3 + s13**3 + s14**3 + 7*s14**2*s23 + &
                    2*s23**3 - s13**2*(s14 + 3*s23 - 7*s24) - &
                    3*s14**2*s24 + 10*s14*s23*s24 + 2*s23**2*s24 - &
                    6*s14*s24**2 + 2*s23*s24**2 + 2*s24**3 + &
                    s12**2*(15*s13 + 15*s14 + 19*(s23 + s24)) + &
                    s13*(-s14**2 + 12*s14*(s23 + s24) + &
                       2*s23*(-3*s23 + 5*s24)) + &
                    s12*(7*s13**2 + 7*s14**2 + 7*s23**2 + 22*s23*s24 + &
                       7*s24**2 + 6*s14*(3*s23 + s24) + &
                       2*s13*(7*s14 + 3*s23 + 9*s24)))) + &
              gm**2*(816*m**10 + 14*s12**5 - 3*s13**2*s14**2*s23 + &
                 5*s13*s14**3*s23 + 2*s14**4*s23 + 6*s13**3*s23**2 + &
                 7*s13**2*s14*s23**2 + 4*s13*s14**2*s23**2 + &
                 6*s14**3*s23**2 - 2*s13**2*s23**3 + 5*s14**2*s23**3 - &
                 8*s13*s23**4 - 8*s14*s23**4 + 5*s13**3*s14*s24 - &
                 5*s13**2*s14**2*s24 - 4*s13*s14**3*s24 + &
                 7*s13**3*s23*s24 + 9*s13**2*s14*s23*s24 + &
                 12*s13*s14**2*s23*s24 + 6*s14**3*s23*s24 - &
                 6*s13**2*s23**2*s24 + 8*s13*s14*s23**2*s24 + &
                 11*s14**2*s23**2*s24 - 10*s13*s23**3*s24 - &
                 5*s14*s23**3*s24 + 3*s13**3*s24**2 + &
                 4*s13*s14**2*s24**2 - 5*s13**2*s23*s24**2 + &
                 15*s13*s14*s23*s24**2 + 11*s14**2*s23*s24**2 + &
                 5*s13*s23**2*s24**2 + s14*s23**2*s24**2 + &
                 4*s13**2*s24**3 + 7*s13*s14*s24**3 + &
                 17*s13*s23*s24**3 + 4*s14*s23*s24**3 + 4*s13*s24**4 + &
                 s12**4*(29*s13 + 32*s14 + 29*s23 + 38*s24) - &
                 8*m**8*(240*s12 + 46*s13 + 56*s14 + 47*s23 + &
                    53*s24) + &
                 2*s12**3*(8*s13**2 + 13*s14**2 + 33*s14*s23 + &
                    6*s23**2 + 35*s14*s24 + 25*s23*s24 + 21*s24**2 + &
                    s13*(16*s14 + 26*s23 + 35*s24)) + &
                 2*m**6*(510*s12**2 - 25*s13**2 - 23*s14**2 - &
                    90*s14*s23 + 19*s23**2 + 148*s14*s24 + &
                    24*s23*s24 - 3*s24**2 - &
                    2*s13*(48*s14 - 40*s23 + 57*s24) + &
                    2*s12*(69*s13 + 83*s14 + 157*s23 + 147*s24)) + &
                 s12**2*(s13**3 + 10*s14**3 - 11*s23**3 + &
                    3*s23**2*s24 + 30*s23*s24**2 + 22*s24**3 + &
                    s13**2*(-3*s14 + 30*s23 + 36*s24) + &
                    s14**2*(51*s23 + 42*s24) + &
                    s14*(36*s23**2 + 93*s23*s24 + 57*s24**2) + &
                    s13*(63*s14*s23 + 19*s23**2 + 66*s14*s24 + &
                       76*s23*s24 + 63*s24**2)) + &
                 m**4*(68*s12**3 + 21*s13**3 + 29*s14**3 + &
                    268*s14**2*s23 + 193*s14*s23**2 - 72*s23**3 - &
                    4*s14**2*s24 + 142*s14*s23*s24 - 52*s23**2*s24 - &
                    31*s14*s24**2 + 20*s23*s24**2 + 8*s24**3 + &
                    2*s12**2*(173*s13 + 181*s14 + 32*s23 + 88*s24) + &
                    s13**2*(119*s14 + 32*s23 + 236*s24) + &
                    s13*(119*s14**2 + 284*s14*s23 + 5*s23**2 + &
                       288*s14*s24 + 162*s23*s24 + 249*s24**2) + &
                    2*s12*(141*s13**2 + 161*s14**2 + 255*s14*s23 - &
                       28*s23**2 + 31*s14*s24 + 72*s23*s24 + &
                       72*s24**2 + s13*(278*s14 + 43*s23 + 271*s24))) &
+ s12*(2*s14**4 - 8*s23**4 - 13*s23**3*s24 - 4*s23**2*s24**2 + &
                    5*s23*s24**3 + 4*s24**4 + &
                    8*s14**3*(2*s23 + s24) + &
                    s13**3*(-3*s14 + 7*s23 + 4*s24) + &
                    s14**2*(30*s23**2 + 51*s23*s24 + 17*s24**2) + &
                    s13**2*(-10*s14**2 + 7*s14*s23 + 13*s23**2 + &
                       3*s14*s24 + 27*s23*s24 + 24*s24**2) + &
                    s14*(-6*s23**3 + 22*s23**2*s24 + 41*s23*s24**2 + &
                       15*s24**3) + &
                    s13*(-5*s14**3 - 16*s23**3 + 3*s23**2*s24 + &
                       43*s23*s24**2 + 26*s24**3 + &
                       s14**2*(14*s23 + 5*s24) + &
                       s14*(35*s23**2 + 76*s23*s24 + 47*s24**2))) - &
                 m**2*(128*s12**4 + 2*s14**4 + 39*s14**3*s23 + &
                    120*s14**2*s23**2 - 25*s14*s23**3 - 16*s23**4 + &
                    2*s14**3*s24 + 116*s14**2*s23*s24 - &
                    3*s14*s23**2*s24 - 15*s23**3*s24 + &
                    9*s14**2*s24**2 + 5*s14*s23*s24**2 + &
                    6*s23**2*s24**2 - 13*s14*s24**3 + 21*s23*s24**3 + &
                    4*s24**4 + s13**3*(5*s14 + 11*s23 + 26*s24) + &
                    s12**3*(254*s13 + 272*s14 + 200*s23 + 258*s24) + &
                    s13**2*(-8*s14**2 + 57*s14*s23 + 29*s23**2 + &
                       78*s14*s24 + 82*s23*s24 + 98*s24**2) + &
                    s12**2*(158*s13**2 + 199*s14**2 + 19*s23**2 + &
                       205*s23*s24 + 168*s24**2 + &
                       7*s14*(66*s23 + 53*s24) + &
                       s13*(283*s14 + 313*s23 + 474*s24)) + &
                    s12*(32*s13**3 + 51*s14**3 - 65*s23**3 - &
                       58*s23**2*s24 + 37*s23*s24**2 + 46*s24**3 + &
                       s14**2*(305*s23 + 152*s24) + &
                       s13**2*(29*s14 + 141*s23 + 248*s24) + &
                       s14*(165*s23**2 + 324*s23*s24 + 97*s24**2) + &
                       s13*(32*s14**2 + 436*s14*s23 + 26*s23**2 + &
                        438*s14*s24 + 290*s23*s24 + 250*s24**2)) + &
                    s13*(s14**3 + s14**2*(85*s23 + 54*s24) + &
                       2*s14*(55*s23**2 + 94*s23*s24 + 56*s24**2) + &
                       4*(-11*s23**3 - 9*s23**2*s24 + 9*s23*s24**2 + &
                        8*s24**3)))) + &
              gm**4*(48*m**8 - 10*s12**4 + &
                 s12**3*(3*s13 - 13*s14 - 17*s23 - 29*s24) + &
                 2*m**6*(200*s12 + 19*s13 + 39*s14 + 105*s23 + &
                    77*s24) - &
                 2*m**4*(91*s12**2 - 16*s13**2 + 15*s14**2 + &
                    97*s14*s23 + 52*s23**2 + 39*s14*s24 + &
                    116*s23*s24 + 32*s24**2 + &
                    s13*(39*s14 + 50*s23 + 56*s24) + &
                    2*s12*(54*s13 + 89*s14 + 111*s23 + 102*s24)) + &
                 s12*(2*s13**3 + 2*s14**3 - s14**2*(5*s23 + 2*s24) + &
                    s13**2*(28*s14 + 10*s23 + 21*s24) - &
                    s14*(9*s23**2 + 33*s23*s24 + 14*s24**2) + &
                    s13*(28*s14**2 + 33*s14*s23 + 12*s23**2 + &
                       47*s14*s24 + 27*s23*s24 + 25*s24**2) + &
                    2*(s23**3 - 2*s23**2*s24 - 8*s23*s24**2 - 5*s24**3)&
) + s12**2*(15*s13**2 - s14**2 - 24*s14*s23 - 5*s23**2 - 26*s14*s24 - &
                    32*s23*s24 - 29*s24**2 + &
                    2*s13*(18*s14 + 7*(s23 + s24))) + &
                 2*(s13**3*s24 + &
                    s13**2*(11*s14*s23 + s23**2 + 17*s14*s24 + &
                       s23*s24 + 3*s24**2) + &
                    s14*s23*(s14**2 + s23**2 - 3*s23*s24 - 5*s24**2 - &
                       2*s14*(s23 + s24)) + &
                    s13*(s23**3 + s23**2*s24 + 4*s23*s24**2 + &
                       7*s24**3 + 2*s14**2*(2*s23 + 5*s24) + &
                       s14*(5*s23**2 + 11*s23*s24 + 5*s24**2))) + &
                 m**2*(136*s12**3 + &
                    2*s12**2*(46*s13 + 95*s14 + 98*s23 + 111*s24) + &
                    s12*(-7*s13**2 + 43*s14**2 + 55*s23**2 + &
                       154*s23*s24 + 83*s24**2 + &
                       6*s14*(45*s23 + 26*s24) + &
                       s13*(-64*s14 + 82*s23 + 108*s24)) - &
                    2*(s13**3 + s14**3 + 2*s23**3 - 2*s23**2*s24 - &
                       s23*s24**2 + 7*s24**3 - s14**2*(18*s23 + s24) + &
                       s13**2*(28*s14 + 11*s23 + 10*s24) - &
                       s14*(29*s23**2 + 57*s23*s24 + 18*s24**2) + &
                       s13*(14*s14**2 - 19*s23**2 - 49*s23*s24 - &
                         6*s24**2 + s14*(-19*s23 + s24))))))/&
            ((m**2 - s13)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s23)*(-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (16*(4*(-2*m**2 + s12 + s13 + s23)**2*&
                 (-2*m**2 + s12 + s14 + s24)**2*&
                 (2*m**4 - (s12 + s23 + s24)*&
                    (s12 + s13 + s14 + s23 + s24) - &
                   m**2*(2*s12 + s13 + s14 + 2*s23 + 2*s24)) + &
                2*gm**6*(238*m**6 + &
                   15*(s12 + s23 + s24)*&
                    (s12 + s13 + s14 + s23 + s24)**2 + &
                   m**4*(310*s12 + 232*s13 + 232*s14 + 310*s23 + &
                      310*s24) + &
                   m**2*(120*s12**2 + 45*s13**2 + &
                      11*s13*(8*s14 + 15*(s23 + s24)) + &
                      15*s12*(11*s13 + 11*s14 + 16*(s23 + s24)) + &
                      15*(3*s14**2 + 11*s14*(s23 + s24) + &
                        8*(s23 + s24)**2))) + &
                gm**4*(368*m**8 - &
                   4*m**6*(244*s12 + 163*s13 + 163*s14 + 129*s23 + &
                      129*s24) - &
                   m**4*(356*s12**2 + 179*s13**2 + 334*s13*s14 + &
                      179*s14**2 + 630*s13*s23 + 558*s14*s23 + &
                      419*s23**2 + 558*s13*s24 + 630*s14*s24 + &
                      718*s23*s24 + 419*s24**2 + &
                      s12*(548*s13 + 548*s14 + 820*(s23 + s24))) + &
                   4*(s12 + s23 + s24)*&
                    (5*s12**3 - 3*s13**3 - 3*s14**3 - 4*s14**2*s23 - &
                      4*s14*s23**2 - 3*s23**3 - 9*s14**2*s24 - &
                      8*s14*s23*s24 - 4*s23**2*s24 - 9*s14*s24**2 - &
                      4*s23*s24**2 - 3*s24**3 + &
                      7*s12**2*(s13 + s14 + s23 + s24) - &
                      s13**2*(4*s14 + 9*s23 + 4*s24) - &
                      s12*(s13**2 + s14**2 - 3*s14*s23 + s23**2 + &
                        s13*(-3*s14 + 2*s23 - 3*s24) + 2*s14*s24 - &
                        3*s23*s24 + s24**2) - &
                      s13*(4*s14**2 + 9*s23**2 + 8*s23*s24 + &
                        4*s24**2 + 8*s14*(s23 + s24))) + &
                   m**2*(72*s12**3 + 24*s13**3 + 24*s14**3 - &
                      65*s14**2*s23 - 161*s14*s23**2 - 110*s23**3 + &
                      s13**2*(30*s14 - 74*s23 - 65*s24) - &
                      74*s14**2*s24 - 309*s14*s23*s24 - &
                      230*s23**2*s24 - 208*s14*s24**2 - &
                      230*s23*s24**2 - 110*s24**3 + &
                      3*s12**2*(11*s13 + 11*s14 + 5*(s23 + s24)) + &
                      s13*(30*s14**2 - 208*s23**2 - 309*s23*s24 - &
                        161*s24**2 - 145*s14*(s23 + s24)) - &
                      s12*(5*s13**2 + 5*s14**2 + 167*s23**2 + &
                        234*s23*s24 + 167*s24**2 + &
                        4*s14*(35*s23 + 46*s24) + &
                        2*s13*(11*s14 + 92*s23 + 70*s24)))) - &
                2*gm**2*(272*m**10 + &
                   4*(s12 + s13 + s23)*(s12 + s14 + s24)*&
                    (s12 + s23 + s24)*&
                    (s12**2 + 3*s12*(s13 + s14 + s23 + s24) + &
                      2*(s13 + s14 + s23 + s24)**2) + &
                   8*m**8*(8*s12 + 7*(s13 + s14 + 3*(s23 + s24))) - &
                   4*m**6*(50*s12**2 + 28*s13**2 - 5*s13*s14 + &
                      28*s14**2 + 24*s13*s23 - 17*s14*s23 - s23**2 - &
                      17*s13*s24 + 24*s14*s24 - 23*s23*s24 - s24**2 + &
                      s12*(31*s13 + 31*s14 + 41*(s23 + s24))) + &
                   m**4*(32*s12**3 + 13*s13**3 + 13*s14**3 - &
                      43*s14**2*s23 - 63*s14*s23**2 - 43*s23**3 - &
                      23*s14**2*s24 - 122*s14*s23*s24 - &
                      73*s23**2*s24 - 79*s14*s24**2 - 73*s23*s24**2 - &
                      43*s24**3 - s13**2*(21*s14 + 23*s23 + 43*s24) - &
                      2*s12**2*(11*s13 + 11*s14 + 25*(s23 + s24)) - &
                      s13*(21*s14**2 + 79*s23**2 + 122*s23*s24 + &
                        63*s24**2 + 90*s14*(s23 + s24)) + &
                      4*s12*(4*s13**2 + 4*s14**2 - 29*s23**2 - &
                        45*s23*s24 - 29*s24**2 - &
                        7*s14*(5*s23 + 4*s24) - &
                        s13*(19*s14 + 28*s23 + 35*s24))) + &
                   m**2*(s12**4 - 14*s14**3*s23 + 4*s14**2*s23**2 - &
                      7*s14*s23**3 - 14*s23**4 - 14*s14**3*s24 - &
                      49*s14**2*s23*s24 - 16*s14*s23**2*s24 - &
                      24*s23**3*s24 - 42*s14**2*s24**2 - &
                      59*s14*s23*s24**2 - 20*s23**2*s24**2 - &
                      42*s14*s24**3 - 24*s23*s24**3 - 14*s24**4 - &
                      s12**2*&
                       (14*s13**2 + 14*s14**2 + 9*s23**2 + &
                        s13*(-17*s14 + 20*s23 - 5*s24) - &
                        5*s14*(s23 - 4*s24) + 13*s23*s24 + 9*s24**2) + &
                      s13**3*(3*s14 - 14*(s23 + s24)) + &
                      s12**3*(3*s13 + 3*s14 + 5*(s23 + s24)) + &
                      s13**2*&
                       (22*s14**2 - 42*s23**2 - 49*s23*s24 + &
                        4*s24**2 + 2*s14*(s23 + 13*s24)) + &
                      s13*(3*s14**3 - 42*s23**3 - 59*s23**2*s24 - &
                        16*s23*s24**2 - 7*s24**3 + &
                        2*s14**2*(13*s23 + s24) - &
                        2*s14*(4*s23**2 - 5*s23*s24 + 4*s24**2)) - &
                      s12*(14*s13**3 + 14*s14**3 + 27*s23**3 + &
                         41*s23**2*s24 + 41*s23*s24**2 + 27*s24**3 + &
                         s13**2*(-20*s14 + 52*s23 + 10*s24) + &
                         2*s14**2*(5*s23 + 26*s24) + &
                         s14*(5*s23**2 + 48*s23*s24 + 65*s24**2) + &
                         s13*&
                         (-20*s14**2 + 65*s23**2 + 48*s23*s24 + &
                         5*s24**2 - 18*s14*(s23 + s24)))))))/&
            ((m**2 - s13)*(m**2 - s14)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (4*(-2*(-2*m**2 + s12 + s13 + s23)**2*&
                 (2*m**2 - s12 - s23 - s24)*&
                 (32*m**6 + 2*s12**3 - s13*s14*s23 + s14**2*s23 + &
                   2*s13*s23**2 + 2*s23**3 - &
                   4*m**4*(s12 - 2*(s13 + s14 - s23 - s24)) + &
                   s13**2*s24 - s13*s14*s24 + 2*s13*s23*s24 + &
                   2*s14*s23*s24 + 2*s23**2*s24 + 2*s14*s24**2 + &
                   2*s23*s24**2 + 2*s24**3 + &
                   s12**2*(3*s13 + 3*s14 + 4*(s23 + s24)) + &
                   s12*(s13**2 + s14**2 + 3*s14*(s23 + s24) + &
                      4*(s23**2 + s23*s24 + s24**2) + &
                      s13*(2*s14 + 3*(s23 + s24))) - &
                   m**2*(10*s12**2 + s13**2 + s14**2 + 11*s14*s23 + &
                      2*s23**2 + s14*s24 + 20*s23*s24 + 2*s24**2 + &
                      s13*(-2*s14 + s23 + 11*s24) + &
                      2*s12*(5*s13 + 5*s14 + 7*(s23 + s24)))) - &
                2*gm**6*(2*m**6 + &
                   2*m**4*(6*s12 + 2*s13 + 3*s14 + 3*s23 - 10*s24) - &
                   m**2*(9*s12**2 - 3*s13**2 - 3*s14**2 - 3*s14*s23 - &
                      2*s23**2 + 9*s14*s24 + 2*s24**2 + &
                      s13*(-6*s14 + s23 + 3*s24) + &
                      s12*(6*s13 + 4*s14 + 7*s23 + 11*s24)) - &
                   3*(s12**3 + s14**2*s23 + s14*s23**2 + s13**2*s24 - &
                      s23**2*s24 - s14*s24**2 - 2*s23*s24**2 - &
                      s24**3 + s13*s14*(s23 + s24) + &
                      s12**2*(2*s13 + 2*s14 + 2*s23 + s24) + &
                      s12*(s13**2 + s14**2 + 3*s14*s23 + s23**2 + &
                        s14*s24 - s24**2 + 2*s13*(s14 + s23 + s24)))) + &
                gm**4*(-760*m**8 - 13*s12**4 + 26*s13**2*s14*s23 + &
                   27*s13*s14**2*s23 - 22*s13**2*s23**2 + &
                   5*s13*s14*s23**2 + 12*s14**2*s23**2 - &
                   44*s13*s23**3 - 21*s14*s23**3 - 22*s23**4 - &
                   2*s13**3*s24 - 9*s13**2*s14*s24 - &
                   6*s13*s14**2*s24 - 33*s13**2*s23*s24 - &
                   25*s13*s14*s23*s24 + 3*s14**2*s23*s24 - &
                   77*s13*s23**2*s24 - 31*s14*s23**2*s24 - &
                   46*s23**3*s24 + 9*s13**2*s24**2 - s13*s14*s24**2 - &
                   19*s13*s23*s24**2 + 2*s14*s23*s24**2 - &
                   28*s23**2*s24**2 + 14*s13*s24**3 + 12*s14*s24**3 + &
                   8*s23*s24**3 + 12*s24**4 - &
                   s12**3*(28*s13 + s14 + 69*s23 + 29*s24) - &
                   2*m**6*(170*s12 + 141*s13 + 345*s14 - 53*s23 + &
                      51*s24) - &
                   s12**2*(17*s13**2 - 12*s14**2 + 121*s23**2 + &
                      127*s23*s24 + 14*s24**2 + s14*(23*s23 + s24) + &
                      s13*(-24*s14 + 116*s23 + 35*s24)) + &
                   m**4*(306*s12**2 - 23*s13**2 + 36*s14**2 + &
                      394*s14*s23 + 240*s23**2 + 221*s14*s24 + &
                      429*s23*s24 + 179*s24**2 + &
                      s13*(-141*s14 + 187*s23 + 134*s24) + &
                      s12*(21*s13 + 395*s14 + 641*s23 + 575*s24)) + &
                   s12*(-2*s13**3 - 87*s23**3 + &
                      s13**2*(25*s14 - 47*s23 - 8*s24) - &
                      144*s23**2*s24 - 57*s23*s24**2 + 14*s24**3 + &
                      3*s14**2*(8*s23 + s24) + &
                      s14*(-43*s23**2 - 32*s23*s24 + 5*s24**2) + &
                      s13*(27*s14**2 + 29*s14*s23 - 132*s23**2 + &
                        17*s14*s24 - 135*s23*s24 + 7*s24**2)) + &
                   m**2*(23*s12**3 + 2*s13**3 - 24*s14**2*s23 + &
                      83*s14*s23**2 - 19*s23**3 - 27*s14**2*s24 + &
                      25*s14*s23*s24 - 8*s23**2*s24 + 5*s14*s24**2 - &
                      17*s23*s24**2 + 28*s24**3 + &
                      s13**2*(-17*s14 + 55*s23 + 14*s24) + &
                      s12**2*(53*s13 + 42*s14 + 30*s23 + 31*s24) + &
                      s13*(-21*s14**2 + 59*s14*s23 + 24*s23**2 + &
                        103*s14*s24 + 31*s23*s24 + 32*s24**2) + &
                      s12*(36*s13**2 - 24*s14**2 + 125*s14*s23 - &
                        12*s23**2 + 23*s14*s24 + 19*s23*s24 + &
                        29*s24**2 + 4*s13*(5*s14 + 27*s23 + 18*s24)))) &
+ gm**2*(64*m**10 + 16*m**8*(33*s12 - 6*s13 + 34*s14 - 39*s23 + &
                      13*s24) - &
                   4*m**6*(188*s12**2 + 15*s13**2 + 15*s14**2 + &
                      170*s14*s23 - 107*s23**2 + 66*s14*s24 + &
                      52*s23*s24 + 3*s24**2 + &
                      s13*(74*s14 - 20*s23 + 44*s24) + &
                      s12*(101*s13 + 189*s14 + 85*s23 + 145*s24)) + &
                   2*m**4*(168*s12**3 + 6*s13**3 + 32*s14**2*s23 + &
                      135*s14*s23**2 + 13*s23**3 + 21*s14**2*s24 + &
                      112*s14*s23*s24 + 166*s23**2*s24 + &
                      22*s14*s24**2 + 86*s23*s24**2 - s24**3 + &
                      s13**2*(s14 + 57*s23 + 76*s24) + &
                      2*s12**2*&
                       (106*s13 + 95*s14 + 171*s23 + 112*s24) + &
                      s13*(17*s14**2 + 142*s14*s23 + 54*s23**2 + &
                        32*s14*s24 + 230*s23*s24 + 63*s24**2) + &
                      s12*(63*s13**2 + 32*s14**2 + 325*s14*s23 + &
                        187*s23**2 + 138*s14*s24 + 375*s23*s24 + &
                        44*s24**2 + s13*(195*s14 + 264*s23 + 305*s24))) &
- m**2*(56*s12**4 - 2*s13**4 + 27*s14**2*s23**2 + 21*s14*s23**3 + &
                      58*s23**4 + 29*s14**2*s23*s24 + &
                      60*s14*s23**2*s24 + 160*s23**3*s24 + &
                      61*s14*s23*s24**2 + 166*s23**2*s24**2 + &
                      28*s14*s24**3 + 60*s23*s24**3 + 28*s24**4 + &
                      s13**3*(2*s14 - s23 + 23*s24) + &
                      s12**3*(133*s13 + 85*s14 + 197*s23 + 137*s24) + &
                      s13**2*&
                       (40*s14*s23 + 30*s23**2 - 50*s14*s24 + &
                        157*s23*s24 + 95*s24**2) + &
                      s12**2*&
                       (94*s13**2 + 27*s14**2 + 191*s14*s23 + &
                        284*s23**2 + 118*s14*s24 + 387*s23*s24 + &
                        131*s24**2 + s13*(181*s14 + 302*s23 + 325*s24)&
) + s13*(87*s23**3 + 282*s23**2*s24 + 251*s23*s24**2 + 34*s24**3 + &
                        11*s14**2*(3*s23 + s24) + &
                        s14*(47*s23**2 + 6*s23*s24 + 17*s24**2)) + &
                      s12*(11*s13**3 + 201*s23**3 + 410*s23**2*s24 + &
                        275*s23*s24**2 + 74*s24**3 + &
                        7*s13**2*(12*s14 + 14*s23 + 29*s24) + &
                        s14**2*(54*s23 + 29*s24) + &
                        s14*(127*s23**2 + 178*s23*s24 + 71*s24**2) + &
                        s13*(33*s14**2 + 228*s14*s23 + 256*s23**2 + &
                        68*s14*s24 + 574*s23*s24 + 226*s24**2))) + &
                   (s12 + s13 + s23)*&
                    (3*s12**4 - 2*s13**3*s24 + &
                      2*s12**3*(7*s13 + 4*s14 + 3*s23 + 8*s24) + &
                      s13**2*&
                       (8*s14*s23 - 4*s23**2 - 6*s14*s24 + 5*s23*s24 + &
                        11*s24**2) + &
                      s12**2*&
                       (9*s13**2 + 5*s14**2 + 10*s14*s23 + 9*s23**2 + &
                        23*s14*s24 + 26*s23*s24 + 35*s24**2 + &
                        s13*(22*s14 + 19*s23 + 46*s24)) + &
                      s13*(6*s14**2*(s23 - s24) + &
                        2*(s23 + s24)**2*(s23 + 7*s24) - &
                        s14*(3*s23**2 + 8*s23*s24 + 3*s24**2)) + &
                      (s23 + s24)*&
                       (5*s14**2*s23 + &
                        s14*(-6*s23**2 + 6*s23*s24 + 16*s24**2) + &
                        2*(3*s23**3 + 5*s23**2*s24 + 6*s23*s24**2 + &
                        8*s24**3)) + &
                      s12*(-2*s13**3 + 12*s23**3 + 26*s23**2*s24 + &
                         44*s23*s24**2 + 38*s24**3 + &
                         5*s14**2*(2*s23 + s24) + &
                         s13**2*(4*s14 + 3*s23 + 20*s24) + &
                         s14*(-4*s23**2 + 23*s23*s24 + 27*s24**2) + &
                         s13*&
                         (6*s14**2 + 7*s23**2 + 49*s23*s24 + &
                         46*s24**2 + 19*s14*(s23 + s24)))))))/&
            ((m**2 - s13)*(m**2 - s14)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) + &
           (16*(20*gm**8*(4*m**4 + &
                   10*m**2*(s12 + s13 + s14 + s23 + s24) + &
                   3*(s12 + s13 + s14 + s23 + s24)**2) - &
                4*(-2*m**2 + s12 + s13 + s23)**2*&
                 (-2*m**2 + s12 + s14 + s24)**2*&
                 (2*m**4 - (s12 + s13 + s14)*&
                    (s12 + s13 + s14 + s23 + s24) - &
                   m**2*(2*s12 + 2*s13 + 2*s14 + s23 + s24)) + &
                2*gm**6*(186*m**6 + 5*s12**3 - 27*s13**3 - &
                   61*s13**2*s14 - 61*s13*s14**2 - 27*s14**3 - &
                   66*s13**2*s23 - 92*s13*s14*s23 - 46*s14**2*s23 - &
                   51*s13*s23**2 - 31*s14*s23**2 - 12*s23**3 - &
                   46*s13**2*s24 - 92*s13*s14*s24 - 66*s14**2*s24 - &
                   62*s13*s23*s24 - 62*s14*s23*s24 - 16*s23**2*s24 - &
                   31*s13*s24**2 - 51*s14*s24**2 - 16*s23*s24**2 - &
                   12*s24**3 - &
                   2*m**4*(207*s12 + 172*s13 + 172*s14 + 159*s23 + &
                      159*s24) - &
                   s12**2*(17*s13 + 17*s14 + 2*(s23 + s24)) - &
                   s12*(49*s13**2 + 49*s14**2 + 48*s14*s23 + &
                      19*s23**2 + 68*s14*s24 + 18*s23*s24 + &
                      19*s24**2 + s13*(78*s14 + 68*s23 + 48*s24)) - &
                   m**2*(182*s12**2 + 225*s13**2 + 438*s13*s14 + &
                      225*s14**2 + 401*s13*s23 + 391*s14*s23 + &
                      176*s23**2 + 391*s13*s24 + 401*s14*s24 + &
                      342*s23*s24 + 176*s24**2 + &
                      s12*(417*s13 + 417*s14 + 368*(s23 + s24)))) - &
                gm**4*(1456*m**8 + &
                   m**6*(-816*s12 + 76*s13 + 76*s14 + 68*s23 + &
                      68*s24) - &
                   m**4*(820*s12**2 + 607*s13**2 + 607*s14**2 + &
                      1102*s14*s23 + 423*s23**2 + 1062*s14*s24 + &
                      934*s23*s24 + 423*s24**2 + &
                      2*s13*(603*s14 + 531*s23 + 551*s24) + &
                      20*s12*(79*s13 + 79*s14 + 71*(s23 + s24))) + &
                   m**2*(96*s12**3 - 178*s13**3 - 178*s14**3 - &
                      221*s14**2*s23 - 101*s14*s23**2 - 44*s23**3 - &
                      412*s14**2*s24 - 241*s14*s23*s24 - &
                      6*s23**2*s24 - 278*s14*s24**2 - 6*s23*s24**2 - &
                      44*s24**3 - &
                      s13**2*(290*s14 + 412*s23 + 221*s24) + &
                      7*s12**2*(s13 + s14 + 7*(s23 + s24)) - &
                      s13*(290*s14**2 + 278*s23**2 + 241*s23*s24 + &
                        101*s24**2 + 405*s14*(s23 + s24)) - &
                      s12*(275*s13**2 + 275*s14**2 + 89*s23**2 + &
                        54*s23*s24 + 89*s24**2 + &
                        4*s14*(49*s23 + 94*s24) + &
                        2*s13*(157*s14 + 188*s23 + 98*s24))) + &
                   4*(9*s12**4 - 3*s13**4 - 3*s14**4 + 4*s14**3*s23 + &
                      12*s14**2*s23**2 + 5*s14*s23**3 - 9*s14**3*s24 + &
                      16*s14**2*s23*s24 + 28*s14*s23**2*s24 + &
                      8*s23**3*s24 - 9*s14**2*s24**2 + &
                      20*s14*s23*s24**2 + 16*s23**2*s24**2 - &
                      3*s14*s24**3 + 8*s23*s24**3 + &
                      s13**3*(s14 - 9*s23 + 4*s24) + &
                      s13**2*&
                       (8*s14**2 + 7*s14*s23 - 9*s23**2 + &
                        20*s14*s24 + 16*s23*s24 + 12*s24**2) + &
                      s12**3*(28*s13 + 28*s14 + 23*(s23 + s24)) + &
                      s12**2*&
                       (26*s13**2 + 26*s14**2 + 19*s23**2 + &
                        47*s23*s24 + 19*s24**2 + &
                        9*s14*(6*s23 + 5*s24) + &
                        s13*(61*s14 + 45*s23 + 54*s24)) + &
                      s13*(s14**3 - 3*s23**3 + 20*s23**2*s24 + &
                        28*s23*s24**2 + 5*s24**3 + &
                        s14**2*(20*s23 + 7*s24) + &
                        s14*(11*s23**2 + 48*s23*s24 + 11*s24**2)) + &
                      s12*(4*s13**3 + 4*s14**3 + 5*s23**3 + &
                        32*s23**2*s24 + 32*s23*s24**2 + 5*s24**3 + &
                        s14**2*(35*s23 + 13*s24) + &
                        s13**2*(34*s14 + 13*s23 + 35*s24) + &
                        s14*(31*s23**2 + 67*s23*s24 + 14*s24**2) + &
                        s13*(34*s14**2 + 14*s23**2 + 67*s23*s24 + &
                        31*s24**2 + 65*s14*(s23 + s24))))) + &
                2*gm**2*(-48*m**10 + &
                   8*m**8*(64*s12 + 45*s13 + 45*s14 + 31*s23 + &
                      31*s24) - &
                   4*m**6*(90*s12**2 - 17*s13**2 + 17*s13*s14 - &
                      17*s14**2 - 8*s13*s23 + 23*s14*s23 + 12*s23**2 + &
                      23*s13*s24 - 8*s14*s24 + 35*s23*s24 + &
                      12*s24**2 + &
                      s12*(65*s13 + 65*s14 + 55*(s23 + s24))) + &
                   4*(s12 + s13 + s23)*(s12 + s14 + s24)*&
                    (2*s13**3 + 2*s14**3 + 3*s14**2*s23 + s14*s23**2 + &
                      4*s14**2*s24 + 2*s14*s23*s24 - s23**2*s24 + &
                      2*s14*s24**2 - s23*s24**2 + &
                      s12**2*(2*s13 + 2*s14 + s23 + s24) + &
                      s13**2*(5*s14 + 4*s23 + 3*s24) + &
                      s13*(5*s14**2 + 2*s23**2 + 2*s23*s24 + s24**2 + &
                        6*s14*(s23 + s24)) + &
                      s12*(4*s13**2 + 4*s14**2 + 4*s14*s23 + s23**2 + &
                        5*s14*s24 + s23*s24 + s24**2 + &
                        s13*(7*s14 + 5*s23 + 4*s24))) - &
                   m**4*(71*s13**3 + 71*s14**3 + 99*s14**2*s23 + &
                      79*s14*s23**2 + 15*s23**3 + 163*s14**2*s24 + &
                      162*s14*s23*s24 + 57*s23**2*s24 + &
                      107*s14*s24**2 + 57*s23*s24**2 + 15*s24**3 + &
                      s13**2*(109*s14 + 163*s23 + 99*s24) + &
                      2*s12**2*(73*s13 + 73*s14 + 59*(s23 + s24)) + &
                      s13*(109*s14**2 + 107*s23**2 + 162*s23*s24 + &
                        79*s24**2 + 194*s14*(s23 + s24)) + &
                      4*s12*(55*s13**2 + 55*s14**2 + 55*s14*s23 + &
                        22*s23**2 + 80*s14*s24 + 39*s23*s24 + &
                        22*s24**2 + s13*(65*s14 + 80*s23 + 55*s24))) + &
                   m**2*(29*s12**4 - 14*s13**4 - 14*s14**4 + &
                      9*s14**3*s23 + 32*s14**2*s23**2 + 2*s14*s23**3 - &
                      42*s14**3*s24 + 40*s14**2*s23*s24 + &
                      82*s14*s23**2*s24 + 19*s23**3*s24 - &
                      42*s14**2*s24**2 + 50*s14*s23*s24**2 + &
                      50*s23**2*s24**2 - 14*s14*s24**3 + &
                      19*s23*s24**3 + &
                      s13**3*(-8*s14 - 42*s23 + 9*s24) + &
                      s13**2*&
                       (8*s14**2 - 11*s14*s23 - 42*s23**2 + &
                        40*s14*s24 + 40*s23*s24 + 32*s24**2) + &
                      s12**3*(77*s13 + 77*s14 + 75*(s23 + s24)) + &
                      s12**2*&
                       (51*s13**2 + 51*s14**2 + 149*s14*s23 + &
                        46*s23**2 + 100*s14*s24 + 161*s23*s24 + &
                        46*s24**2 + s13*(131*s14 + 100*s23 + 149*s24)) &
- s13*(8*s14**3 + 14*s23**3 - 50*s23**2*s24 - 82*s23*s24**2 - &
                        2*s24**3 + s14**2*(-40*s23 + 11*s24) + &
                        s14*(s23**2 - 122*s23*s24 + s24**2)) + &
                      s12*(-11*s13**3 - 11*s14**3 + &
                         s14**2*(83*s23 - 17*s24) + &
                         s13**2*(47*s14 - 17*s23 + 83*s24) + &
                         2*s14*(39*s23**2 + 97*s23*s24 - 2*s24**2) + &
                         2*(s23**3 + 54*s23**2*s24 + 54*s23*s24**2 + &
                        s24**3) + &
                         s13*&
                         (47*s14**2 - 4*s23**2 + 194*s23*s24 + &
                         78*s24**2 + 128*s14*(s23 + s24)))))))/&
            ((gm**2 - m**2 + s23)*(gm**2 - 2*m**2 + s12 + s13 + s23)*&
              (gm**2 - m**2 + s24)*(gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (4*(-2*(2*m**2 - s12 - s13 - s14)*&
                 (-2*m**2 + s12 + s14 + s24)**2*&
                 (8*m**6 + 2*s12**3 + 2*s13*s14**2 + 2*s14**3 + &
                   s13*s14*s23 + s14*s23**2 + s13**2*s24 + &
                   4*s13*s14*s24 + 2*s14**2*s24 + s13*s23*s24 + &
                   2*s13*s24**2 - &
                   12*m**4*(s12 + s13 + s14 + s23 + s24) + &
                   s12**2*(3*s13 + 4*s14 + 3*s23 + 4*s24) + &
                   m**2*(3*s13**2 + 11*s13*s14 - 2*s14**2 + &
                      4*s13*s23 + 7*s14*s23 - s23**2 + &
                      s12*(6*s13 + 4*s14 - 2*s24) + 3*s13*s24 + &
                      2*s14*s24 - s23*s24 - 2*s24**2) + &
                   s12*(s13**2 + 3*s13*s14 + 4*s14**2 + 2*s13*s23 + &
                      3*s14*s23 + s23**2 + 5*s13*s24 + 4*s14*s24 + &
                      3*s23*s24 + 2*s24**2)) + &
                gm**4*(896*m**8 + 11*s12**4 + 2*s13**2*s14**2 + &
                   30*s13*s14**3 + 10*s14**4 + 6*s13**2*s14*s23 + &
                   24*s13*s14**2*s23 + 23*s14**3*s23 + &
                   6*s13*s14*s23**2 + 7*s14**2*s23**2 - &
                   2*m**6*(42*s12 + 349*s13 + 17*s14 - 97*s23 - &
                      205*s24) + 6*s13**3*s24 + 18*s13**2*s14*s24 + &
                   53*s13*s14**2*s24 + 34*s14**3*s24 + &
                   6*s13**2*s23*s24 + 19*s13*s14*s23*s24 + &
                   37*s14**2*s23*s24 + s14*s23**2*s24 + &
                   16*s13**2*s24**2 + 37*s13*s14*s24**2 + &
                   38*s14**2*s24**2 + s13*s23*s24**2 + &
                   14*s14*s23*s24**2 + 14*s13*s24**3 + 14*s14*s24**3 + &
                   s12**3*(18*s13 + 41*s14 + 18*(s23 + 2*s24)) + &
                   s12**2*(13*s13**2 + 59*s14**2 + 59*s14*s23 + &
                      7*s23**2 + 102*s14*s24 + 33*s23*s24 + &
                      39*s24**2 + s13*(61*s14 + 20*s23 + 59*s24)) + &
                   s12*(6*s13**3 + 39*s14**3 + &
                      4*s14**2*(16*s23 + 25*s24) + &
                      s13**2*(18*s14 + 12*s23 + 29*s24) + &
                      s24*(s23**2 + 15*s23*s24 + 14*s24**2) + &
                      s13*(73*s14**2 + 44*s14*s23 + 6*s23**2 + &
                        107*s14*s24 + 30*s23*s24 + 55*s24**2) + &
                      s14*(14*s23**2 + 70*s23*s24 + 75*s24**2)) - &
                   m**4*(200*s12**2 + &
                      3*s12*(55*s13 + 139*s14 + 49*s23 + 105*s24) + &
                      2*(-45*s13**2 + 97*s14**2 + 54*s14*s23 - &
                        7*s23**2 + 184*s14*s24 - 13*s23*s24 + &
                        39*s24**2 + 7*s13*(11*s14 + 8*s23 + 26*s24))) &
+ m**2*(5*s12**3 + 18*s13**3 - 9*s14**3 - 74*s14**2*s23 - &
                      21*s14*s23**2 + &
                      2*s12**2*(22*s13 + 5*(s14 - 3*s23 - 2*s24)) - &
                      12*s14**2*s24 - 61*s14*s23*s24 - s23**2*s24 - &
                      35*s14*s24**2 - 15*s23*s24**2 - 28*s24**3 + &
                      s13**2*(26*s14 + 24*s23 + 60*s24) + &
                      s13*(17*s14**2 + 23*s14*s23 - 6*s23**2 + &
                        163*s14*s24 - 27*s23*s24 + 22*s24**2) + &
                      s12*(51*s13**2 - 4*s14**2 - 104*s14*s23 - &
                        21*s23**2 - 11*s14*s24 - 74*s23*s24 - &
                        53*s24**2 + s13*(69*s14 + 26*s23 + 93*s24)))) + &
                gm**2*(-448*m**10 + &
                   16*m**8*(36*s12 + 15*s13 + 81*s14 - 20*s23 - &
                      2*s24) - &
                   2*m**6*(144*s12**2 - 27*s13**2 + 551*s14**2 - &
                      184*s14*s23 + 21*s23**2 + &
                      2*s13*(172*s14 - 75*s23 - 40*s24) + &
                      2*s12*(31*s13 + 361*s14 - 71*s23 - 33*s24) + &
                      78*s14*s24 - 72*s23*s24 - 97*s24**2) + &
                   m**4*(80*s12**3 - 30*s13**3 + 341*s14**3 - &
                      144*s14**2*s23 + 75*s14*s23**2 + &
                      133*s14**2*s24 + 10*s14*s23*s24 + &
                      35*s23**2*s24 - 103*s14*s24**2 + &
                      52*s23*s24**2 + 13*s24**3 + &
                      4*s12**2*(2*s13 + 141*s14 - 5*s23 + 2*s24) - &
                      3*s13**2*(11*s14 + 22*s23 + 31*s24) + &
                      s12*(-93*s13**2 + 825*s14**2 - 164*s14*s23 + &
                        75*s23**2 + &
                        2*s13*(194*s14 - 75*s23 - 84*s24) + &
                        146*s14*s24 + 72*s23*s24 - 35*s24**2) + &
                      2*s13*(167*s14**2 + 8*s23**2 - 60*s23*s24 - &
                        61*s24**2 - 9*s14*(12*s23 + s24))) + &
                   (s12 + s14 + s24)*&
                    (8*s13**3*s24 + &
                      s12**3*(10*s13 - s14 + 6*s23 + 11*s24) + &
                      s13**2*&
                       (-12*s14**2 + 8*s14*s23 + 10*s14*s24 + &
                        8*s23*s24 + 11*s24**2) + &
                      s12**2*&
                       (18*s13**2 - 6*s14**2 + 11*s14*s23 + &
                        6*s23**2 + 19*s14*s24 + 24*s23*s24 + &
                        19*s24**2 + s13*(9*s14 + 24*s23 + 32*s24)) + &
                      s14*(-4*s14**3 - s14**2*(s23 + 4*s24) + &
                        s24*(7*s23**2 + 14*s23*s24 + 8*s24**2) + &
                        s14*(6*s23**2 + 19*s23*s24 + 8*s24**2)) + &
                      s13*(-16*s14**3 + s14**2*(8*s23 - s24) + &
                        s24**2*(7*s23 + 8*s24) + &
                        s14*(8*s23**2 + 27*s23*s24 + 17*s24**2)) + &
                      s12*(8*s13**3 - 9*s14**3 + &
                        4*s14**2*(s23 + s24) + &
                        s13**2*(8*s14 + 16*s23 + 29*s24) + &
                        s24*(7*s23**2 + 15*s23*s24 + 8*s24**2) + &
                        s14*(12*s23**2 + 43*s23*s24 + 25*s24**2) + &
                        s13*(-17*s14**2 + 32*s14*s23 + 8*s23**2 + &
                        25*s14*s24 + 32*s23*s24 + 30*s24**2))) - &
                   m**2*(12*s12**4 + 21*s14**4 - 22*s14**3*s23 + &
                      39*s14**2*s23**2 + 3*s14**3*s24 + &
                      77*s14**2*s23*s24 + 48*s14*s23**2*s24 + &
                      7*s14**2*s24**2 + 98*s14*s23*s24**2 + &
                      7*s23**2*s24**2 + 41*s14*s24**3 + &
                      21*s23*s24**3 + 16*s24**4 - &
                      2*s13**3*(16*s14 + 7*s24) + &
                      s12**3*(23*s13 + 81*s14 + 33*s23 + 55*s24) - &
                      2*s13**2*&
                       (28*s14**2 + 9*s14*s23 + 5*s14*s24 + &
                        8*s23*s24 - 6*s24**2) + &
                      s12**2*&
                       (-9*s13**2 + 147*s14**2 + 44*s14*s23 + &
                        39*s23**2 + 128*s14*s24 + 132*s23*s24 + &
                        91*s24**2 + s13*(72*s14 + 48*s23 + 76*s24)) - &
                      s13*(s14**3 + s14**2*(23*s23 + 4*s24) + &
                        s14*(-24*s23**2 - 42*s23*s24 + s24**2) - &
                        s24*(8*s23**2 + 29*s23*s24 + 24*s24**2)) + &
                      s12*(-14*s13**3 + 99*s14**3 + &
                        s13**2*(-53*s14 - 6*s23 + 3*s24) + &
                        s14**2*(-11*s23 + 76*s24) + &
                        16*s24*(3*s23**2 + 7*s23*s24 + 4*s24**2) + &
                        s13*(48*s14**2 + 25*s14*s23 + 24*s23**2 + &
                        73*s14*s24 + 87*s23*s24 + 77*s24**2) + &
                        s14*(78*s23**2 + 209*s23*s24 + 85*s24**2)))) - &
                gm**6*(380*m**6 + &
                   m**4*(-82*s12 - 203*s13 + 13*s14 + 39*s23 + &
                      115*s24) - &
                   m**2*(59*s12**2 - 15*s13**2 + 84*s14**2 + &
                      81*s14*s23 + 6*s23**2 + 98*s14*s24 + &
                      18*s23*s24 + 12*s24**2 + &
                      s12*(65*s13 + 151*s14 + 65*s23 + 71*s24) + &
                      s13*(175*s14 - 9*s23 + 74*s24)) + &
                   3*(2*s12**3 + s13**2*(4*s14 + s24) + &
                      2*s14*(s14 + s23 + s24)**2 + &
                      s12**2*(3*s13 + 6*s14 + 4*(s23 + s24)) + &
                      s13*(12*s14**2 + 2*s24*(s23 + s24) + &
                        7*s14*(s23 + 2*s24)) + &
                      s12*(s13**2 + s13*(15*s14 + 3*s23 + 5*s24) + &
                         2*(3*s14**2 + 4*s14*(s23 + s24) + &
                         (s23 + s24)**2))))))/&
            ((m**2 - s14)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s24)*(gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (4*(-4*gm**6*(11*m**6 + &
                   2*m**4*(s12 - 5*s13 - 4*s14 + s23 + s24) + &
                   2*s13*s14*(s12 + s13 + s14 + s23 + s24) - &
                   m**2*(-s13**2 + 2*s12*(s13 + s14) + &
                      2*s14*(s23 + s24) + 2*s13*(-s14 + s23 + s24))) + &
                gm**4*(348*m**8 + 18*s13**3*s14 + 16*s13**2*s14**2 - &
                   2*s13*s14**3 + 4*s13**3*s23 + 14*s13**2*s14*s23 - &
                   11*s13*s14**2*s23 + 4*s13**2*s23**2 - &
                   11*s13*s14*s23**2 + 6*s13**3*s24 - &
                   7*s13**2*s14*s24 - 34*s13*s14**2*s24 + &
                   3*s13**2*s23*s24 - 51*s13*s14*s23*s24 - &
                   2*s14**2*s23*s24 - 10*s13*s23**2*s24 + &
                   2*s14*s23**2*s24 - 13*s13**2*s24**2 - &
                   50*s13*s14*s24**2 - 32*s13*s23*s24**2 + &
                   2*s14*s23*s24**2 - 22*s13*s24**3 + &
                   s12**3*(-15*s13 + 2*s24) + &
                   m**4*(-39*s12**2 + 75*s13**2 + 25*s14**2 - &
                      79*s14*s23 + 17*s23**2 + &
                      s13*(20*s14 - 58*s23 - 107*s24) + &
                      2*s12*(4*s13 - 35*s23 - 9*s24) - 36*s14*s24 + &
                      50*s23*s24 + 65*s24**2) + &
                   m**6*(-140*s12 - 263*s13 + &
                      3*(-71*s14 + 45*s23 + 43*s24)) - &
                   s12**2*(9*s13**2 - 4*s24*(s23 + s24) + &
                      s13*(30*s14 + 26*s23 + 50*s24)) + &
                   s12*(6*s13**3 + s13**2*(9*s14 - s23 - 22*s24) - &
                      s13*(17*s14**2 + 37*s14*s23 + 11*s23**2 + &
                        86*s14*s24 + 56*s23*s24 + 57*s24**2) + &
                      2*s24*(-s14**2 + s14*s23 + (s23 + s24)**2)) + &
                   m**2*(5*s12**3 - 4*s13**3 + 3*s14**2*s23 - &
                      7*s14*s23**2 - 2*s14**2*s24 + 15*s14*s23*s24 + &
                      8*s23**2*s24 + 12*s14*s24**2 + 30*s23*s24**2 + &
                      22*s24**3 + &
                      2*s12**2*(5*s13 + 4*s14 - s23 + 11*s24) + &
                      s13**2*(-19*s14 + s23 + 18*s24) - &
                      s13*(s14**2 + 9*s14*s23 + 3*s23**2 - &
                        33*s14*s24 + 15*s23*s24 + 14*s24**2) + &
                      s12*(10*s13**2 + 3*s14**2 + s14*s23 - 7*s23**2 + &
                        22*s14*s24 + 18*s23*s24 + 39*s24**2 + &
                        s13*(s14 + 11*s23 + 2*s24)))) - &
                2*(2*m**2 - s12 - s13 - s14)*(s13 - s24)*&
                 (8*m**8 + 2*s13**2*s14**2 + 2*s13*s14**3 + &
                   s13**2*s14*s23 + s13*s14*s23**2 + &
                   2*s12**3*(s13 - s24) + s13**3*s24 + &
                   4*s13**2*s14*s24 + 2*s13*s14**2*s24 + &
                   s13**2*s23*s24 - 3*s13*s14*s23*s24 - &
                   s14**2*s23*s24 - 2*s14*s23**2*s24 + s13**2*s24**2 - &
                   3*s13*s14*s24**2 - 2*s13*s23*s24**2 - &
                   2*s14*s23*s24**2 - 2*s13*s24**3 - &
                   4*m**6*(2*s12 - s13 + s14 + s23 + 5*s24) + &
                   m**4*(2*s12**2 - 12*s13**2 + 5*s14**2 - &
                      2*s14*s23 - s23**2 + 21*s14*s24 + 13*s23*s24 + &
                      16*s24**2 + s13*(-13*s14 - 9*s23 + 6*s24) + &
                      s12*(-10*s13 + 4*s14 + 22*s24)) + &
                   m**2*(3*s13**3 - 2*s14**3 + s14**2*s23 + &
                      s14*s23**2 + s13**2*(11*s14 + 4*s23) + &
                      s12**2*(-s14 + s23 - 2*s24) - 5*s14**2*s24 - &
                      3*s14*s23*s24 + 2*s23**2*s24 - 7*s14*s24**2 + &
                      4*s23*s24**2 + 2*s24**3 + &
                      s12*(6*s13**2 - 3*s14**2 + 2*s14*s23 + &
                        s23**2 + s13*(3*s14 + s23 - 10*s24) - &
                        9*s14*s24 + s23*s24) - &
                      s13*(4*s14**2 - 9*s14*s23 + s23**2 + &
                        9*s14*s24 + 7*s23*s24 + 7*s24**2)) + &
                   s12**2*(3*s13**2 + s13*(4*s14 + 3*s23 + s24) - &
                      s24*(3*s14 + 4*(s23 + s24))) + &
                   s12*(s13**3 + s13**2*(3*s14 + 2*s23 + 4*s24) + &
                      s13*(4*s14**2 + 3*s14*s23 + s23**2 + &
                        2*s14*s24 - 3*s24**2) - &
                      s24*(s14**2 + 2*(s23 + s24)**2 + &
                        s14*(5*s23 + 3*s24)))) + &
                gm**2*(288*m**10 - 14*s13**4*s14 - 24*s13**3*s14**2 - &
                   6*s13**2*s14**3 + 4*s13*s14**4 - 18*s13**3*s14*s23 - &
                   10*s13**2*s14**2*s23 + 4*s13*s14**3*s23 - &
                   2*s13**2*s14*s23**2 - 2*s13*s14**2*s23**2 + &
                   s12**4*(3*s13 - 2*s24) - 10*s13**4*s24 - &
                   8*s13**3*s14*s24 + 30*s13**2*s14**2*s24 + &
                   24*s13*s14**3*s24 - 8*s13**3*s23*s24 + &
                   26*s13**2*s14*s23*s24 + 25*s13*s14**2*s23*s24 + &
                   2*s14**3*s23*s24 + 4*s13**2*s23**2*s24 - &
                   4*s13*s14*s23**2*s24 - 2*s14**2*s23**2*s24 + &
                   6*s13**3*s24**2 + 39*s13**2*s14*s24**2 + &
                   22*s13*s14**2*s24**2 + 18*s13**2*s23*s24**2 - &
                   4*s14**2*s23*s24**2 - 10*s13*s23**2*s24**2 - &
                   s14*s23**2*s24**2 + 8*s13**2*s24**3 - &
                   17*s13*s23*s24**3 - 4*s14*s23*s24**3 - &
                   4*s13*s24**4 - &
                   8*m**8*(26*s12 + 24*s13 + 47*s14 - 19*s23 + &
                      14*s24) + &
                   s12**3*(-4*s13**2 - 2*s24*(s14 + 2*s23 + 4*s24) + &
                      s13*(14*s14 + s23 + 15*s24)) + &
                   m**6*(-4*s12**2 - 145*s13**2 + 183*s14**2 - &
                      188*s14*s23 + 13*s23**2 - &
                      4*s12*(2*s13 - 37*s14 + 36*s23 - 17*s24) + &
                      56*s14*s24 + 90*s23*s24 + 41*s24**2 + &
                      2*s13*(97*s14 - 118*s23 + 84*s24)) + &
                   m**4*(16*s12**3 + 142*s13**3 - 32*s14**3 + &
                      69*s14**2*s23 - 21*s14*s23**2 + &
                      s13**2*(83*s14 + 162*s23 - 50*s24) + &
                      25*s14**2*s24 - 20*s14*s23*s24 + 12*s23**2*s24 + &
                      10*s14*s24**2 + 29*s23*s24**2 + 27*s24**3 + &
                      4*s12**2*(7*s13 + 8*s14 + 4*s23 + 7*s24) + &
                      s12*(194*s13**2 - 16*s14**2 + 85*s14*s23 - &
                        21*s23**2 + &
                        s13*(-28*s14 + 77*s23 - 199*s24) + &
                        69*s14*s24 - 18*s23*s24 + 65*s24**2) - &
                      s13*(109*s14**2 - 170*s14*s23 + 34*s23**2 + &
                        36*s14*s24 + 184*s23*s24 + 99*s24**2)) - &
                   s12**2*(17*s13**3 + &
                      s13**2*(8*s14 + 11*s23 - 16*s24) + &
                      s24*(-2*s14**2 + 6*s14*s23 + 2*s23**2 + &
                        10*s14*s24 + 9*s23*s24 + 10*s24**2) - &
                      s13*(23*s14**2 - 2*s23**2 + 6*s23*s24 + &
                        14*s24**2 + 6*s14*(s23 + 10*s24))) - &
                   s12*(10*s13**4 + &
                      s13**3*(36*s14 + 12*s23 + 11*s24) + &
                      s13**2*&
                       (10*s14**2 + 21*s14*s23 + 2*s23**2 - &
                        52*s14*s24 - 8*s23*s24 - 28*s24**2) + &
                      s13*(-16*s14**3 - 3*s14**2*(3*s23 + 23*s24) + &
                        s14*(4*s23**2 - 31*s23*s24 - 39*s24**2) + &
                        s24*(4*s23**2 + 9*s23*s24 + 2*s24**2)) + &
                      s24*(-2*s14**3 + 2*s14**2*s24 + &
                        s24*(s23**2 + 5*s23*s24 + 4*s24**2) + &
                        s14*(4*s23**2 + 13*s23*s24 + 8*s24**2))) + &
                   m**2*(s12**4 - 28*s13**4 - 8*s14**3*s23 + &
                      8*s14**2*s23**2 + &
                      s12**3*(6*s13 - 6*s14 + 9*s23 - 13*s24) - &
                      2*s13**3*(7*s14 + 19*s23 - 11*s24) - &
                      12*s14**3*s24 - 11*s14**2*s23*s24 - &
                      8*s14*s23**2*s24 - 14*s14**2*s24**2 - &
                      16*s14*s23*s24**2 + 11*s23**2*s24**2 - &
                      20*s14*s24**3 + 21*s23*s24**3 + 4*s24**4 + &
                      s13**2*&
                       (34*s14**2 + 10*s23**2 + 72*s23*s24 + &
                        11*s24**2 - 28*s14*(s23 + s24)) + &
                      s13*(12*s14**3 - s14**2*(31*s23 + 69*s24) + &
                        4*s14*(7*s23**2 + 2*s23*s24 - 4*s24**2) - &
                        s24*(2*s23**2 + 27*s23*s24 + 15*s24**2)) - &
                      s12*(45*s13**3 + 8*s14**3 + &
                        s13**2*(9*s14 + 3*s23 - 55*s24) + &
                        s14**2*(7*s23 + 51*s24) + &
                        s24*(8*s23**2 - s23*s24 + s24**2) + &
                        s13*(-2*s14**2 + 3*s14*s23 - 28*s23**2 + &
                        67*s14*s24 - 43*s23*s24 + 30*s24**2) + &
                        s14*(-16*s23**2 + 19*s23*s24 + 54*s24**2)) - &
                      s12**2*&
                       (12*s13**2 + 15*s14**2 - 10*s14*s23 - 8*s23**2 + &
                         52*s14*s24 + 8*s23*s24 + 25*s24**2 + &
                         2*s13*(2*s14 - 7*(2*s23 + s24)))))))/&
            ((m**2 - s13)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s23)*(gm**2 - m**2 + s24)) + &
           (4*(-28*gm**6*m**2*(m**2 - s13)*(m**2 - s14) + &
                2*(2*m**2 - s12 - s13 - s14)*&
                 (-2*m**2 + s12 + s13 + s23)**2*&
                 (16*m**6 + 2*s12**3 + 3*s13*s14*s23 + s14**2*s23 + &
                   2*s14*s23**2 + s13**2*s24 + 3*s13*s14*s24 + &
                   2*s13*s23*s24 + 2*s14*s23*s24 + 2*s13*s24**2 + &
                   s12**2*(3*s13 + 3*s14 + 4*(s23 + s24)) - &
                   4*m**4*(5*s12 + 4*(s13 + s14 + s23 + s24)) + &
                   s12*(s13**2 + s14**2 + 2*(s23 + s24)**2 + &
                      s14*(5*s23 + 3*s24) + &
                      s13*(2*s14 + 3*s23 + 5*s24)) + &
                   m**2*(2*s12**2 + 3*s13**2 + 3*s14**2 + &
                      8*s12*(s13 + s14) + 5*s14*s23 - 2*s23**2 + &
                      7*s14*s24 - 4*s23*s24 - 2*s24**2 + &
                      s13*(10*s14 + 7*s23 + 5*s24))) - &
                gm**4*(48*m**8 + 5*s12**4 + 8*s13**3*s14 - &
                   10*s13**2*s14**2 - 6*s13*s14**3 + 2*s13**3*s23 + &
                   17*s13**2*s14*s23 - 6*s13*s14**2*s23 + &
                   3*s14**3*s23 + 4*s13**2*s23**2 + &
                   11*s13*s14*s23**2 + 4*s14**2*s23**2 + &
                   2*s13*s23**3 + 2*s14*s23**3 + 5*s13**3*s24 + &
                   32*s13**2*s14*s24 - 9*s13*s14**2*s24 + &
                   9*s13**2*s23*s24 + 31*s13*s14*s23*s24 + &
                   4*s13*s23**2*s24 + 2*s14*s23**2*s24 + &
                   5*s13**2*s24**2 + 2*s13*s23*s24**2 + &
                   s12**3*(15*s13 + 9*s14 + 12*s23 + 10*s24) + &
                   4*m**6*(76*s12 + 54*s13 - 20*s14 + 69*s23 + &
                      29*s24) + &
                   s12**2*(15*s13**2 + 7*s14**2 + 20*s14*s23 + &
                      9*s23**2 + 9*s14*s24 + 14*s23*s24 + 5*s24**2 + &
                      s13*(38*s14 + 26*s23 + 25*s24)) + &
                   m**4*(-60*s12**2 - 24*s13**2 + 32*s14**2 - &
                      273*s14*s23 + 53*s23**2 - &
                      4*s12*(13*s13 + 73*s14 - 11*s23 - 3*s24) - &
                      55*s14*s24 + 72*s23*s24 + 23*s24**2 + &
                      s13*(-180*s14 - 17*s23 + 49*s24)) + &
                   s12*(5*s13**3 + 3*s14**3 + 2*s23*(s23 + s24)**2 + &
                      s14**2*(11*s23 + 3*s24) + &
                      s14*s23*(13*s23 + 11*s24) + &
                      s13**2*(37*s14 + 16*s23 + 20*s24) + &
                      s13*(9*s14**2 + 49*s14*s23 + 13*s23**2 + &
                        41*s14*s24 + 23*s23*s24 + 10*s24**2)) - &
                   m**2*(44*s12**3 + 41*s13**3 - 9*s14**3 - &
                      59*s14**2*s23 + 35*s14*s23**2 + 4*s23**3 - &
                      9*s14**2*s24 + 39*s14*s23*s24 + 6*s23**2*s24 + &
                      2*s23*s24**2 + &
                      s12**2*(143*s13 + 21*s14 + 84*s23 + 72*s24) + &
                      s13**2*(-s14 + 72*s23 + 80*s24) + &
                      s13*(-27*s14**2 - 11*s14*s23 + 37*s23**2 + &
                        67*s14*s24 + 73*s23*s24 + 28*s24**2) + &
                      2*s12*(70*s13**2 - 34*s14**2 + 28*s14*s23 + &
                        22*s23**2 + 10*s14*s24 + 35*s23*s24 + &
                        14*s24**2 + s13*(31*s14 + 84*s23 + 76*s24)))) - &
                gm**2*(32*m**10 - &
                   8*m**8*(10*s12 - 11*s13 + 7*s14 + 37*s23 + 11*s24) + &
                   2*m**6*(-21*s13**2 + 27*s14**2 + 178*s14*s23 + &
                      95*s23**2 + s12*(-36*s13 + 96*s14 + 148*s23) + &
                      66*s14*s24 + 30*s23*s24 - 5*s24**2 + &
                      s13*(-38*s14 + 190*s23 + 22*s24)) + &
                   m**4*(32*s12**3 - 35*s13**3 - 12*s14**3 - &
                      131*s14**2*s23 - 158*s14*s23**2 + 21*s23**3 - &
                      54*s14**2*s24 - 58*s14*s23*s24 + 44*s23**2*s24 + &
                      10*s14*s24**2 + 19*s23*s24**2 + &
                      s13**2*(-64*s14 - 171*s23 + 10*s24) + &
                      2*s12**2*(35*s13 - 61*s14 - 3*s23 + 21*s24) - &
                      s13*(77*s14**2 + 336*s14*s23 + 95*s23**2 + &
                        90*s14*s24 - 80*s23*s24 - 9*s24**2) + &
                      s12*(3*s13**2 - 113*s14**2 - 316*s14*s23 - &
                        11*s23**2 - 2*s13*(69*s14 + 76*s23 - 26*s24) - &
                        40*s14*s24 + 66*s23*s24 + 9*s24**2)) - &
                   (s12 + s13 + s23)*&
                    (3*s12**4 + s13**3*(22*s14 - 8*s23 - s24) + &
                      s12**3*(5*s13 - s14 - 2*s23 + 6*s24) - &
                      s14*s23*&
                       (5*s14**2 + 5*s14*s23 + 8*s23**2 + 7*s14*s24 + &
                        5*s23*s24) + &
                      s13**2*&
                       (28*s14**2 + 7*s14*s23 - 16*s23**2 - s14*s24 - &
                        13*s23*s24 + 3*s24**2) + &
                      s12**2*&
                       (s13**2 - 9*s14**2 - 11*s14*s23 - 13*s23**2 - &
                        8*s14*s24 - 7*s23*s24 + 3*s24**2 + &
                        s13*(9*s14 - 16*s23 + 11*s24)) - &
                      s12*(s13**3 + 5*s14**3 + &
                        s13**2*(-32*s14 + 22*s23 - 4*s24) + &
                        2*s14**2*(7*s23 + 6*s24) + &
                        s13*&
                        (-12*s14**2 + 5*s14*s23 + 29*s23**2 + &
                        9*s14*s24 + 20*s23*s24 - 6*s24**2) + &
                        s23*(8*s23**2 + 13*s23*s24 + 5*s24**2) + &
                        s14*(18*s23**2 + 14*s23*s24 + 7*s24**2)) + &
                      s13*(6*s14**3 + s14**2*(7*s23 - 3*s24) - &
                        s23*(8*s23**2 + 10*s23*s24 + 5*s24**2) - &
                        s14*(21*s23**2 + 30*s23*s24 + 7*s24**2))) - &
                   m**2*(2*s12**4 - 15*s13**4 + &
                      2*s12**3*(6*s13 - 9*s14 + 16*s23 - s24) + &
                      s13**3*(-98*s14 - 13*s23 + 7*s24) - &
                      s13**2*&
                       (96*s14**2 - 47*s23**2 - 77*s23*s24 + &
                        4*s24**2 + 12*s14*(13*s23 + s24)) + &
                      s12**2*&
                       (3*s13**2 - 37*s14**2 - 9*s14*s23 + 72*s23**2 + &
                        29*s14*s24 + 50*s23*s24 - 4*s24**2 + &
                        s13*(-92*s14 + 81*s23 + 3*s24)) + &
                      s23*(-11*s14**3 - s14**2*(19*s23 + 22*s24) + &
                        s23*(16*s23**2 + 15*s23*s24 + 5*s24**2) + &
                        s14*(18*s23**2 + 34*s23*s24 + 7*s24**2)) + &
                      s13*(-35*s14**3 - 3*s14**2*(25*s23 + 12*s24) + &
                        s14*(-50*s23**2 + 82*s23*s24 + 17*s24**2) + &
                        s23*(61*s23**2 + 75*s23*s24 + 21*s24**2)) + &
                      s12*(-22*s13**3 - 11*s14**3 - &
                         2*s14**2*(28*s23 + 9*s24) + &
                         s13*&
                        (-115*s14**2 - 143*s14*s23 + 124*s23**2 + &
                        17*s14*s24 + 127*s23*s24 - 8*s24**2) + &
                         s14*(27*s23**2 + 73*s23*s24 + 17*s24**2) + &
                         s23*(58*s23**2 + 65*s23*s24 + 21*s24**2) - &
                         4*s13**2*(43*s14 - 3*(3*s23 + s24)))))))/&
            ((m**2 - s13)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s23)*(gm**2 - 2*m**2 + s12 + s13 + s23)) + &
           (4*(-2*(s13 - s24)*(-2*m**2 + s12 + s23 + s24)*&
                 (2*m**6*(2*s12 + 7*s13 + 3*s14 - s23 - 9*s24) - &
                   m**4*(4*s12**2 - 13*s13**2 + 5*s14*s23 - s23**2 + &
                      s12*(23*s13 + 5*s14 + 3*s23 - 19*s24) + &
                      4*s14*s24 - 21*s23*s24 - 6*s24**2 + &
                      s13*(5*s14 + 16*s23 + 11*s24)) - &
                   s13*(s12**3 + s13*(s23 - 2*s24)*(s14 - s24) + &
                      s12**2*(2*s13 + s14 + 2*s23 - s24) - &
                      3*s13**2*s24 + s14*(s23**2 + 2*s24**2) + &
                      s12*(s13**2 + 2*s14*s23 + s23**2 + &
                        s13*(s14 + 2*s23 - 4*s24) - s23*s24 + 2*s24**2&
)) + m**2*(s12**3 - 3*s13**3 + s14*s23**2 + &
                      s12**2*(10*s13 + s14 + 2*s23 - 5*s24) - &
                      4*s23**2*s24 + 2*s14*s24**2 - 4*s24**3 - &
                      s13**2*(s14 - 2*s23 + 14*s24) + &
                      s12*(4*s13**2 + 2*s14*s23 + s23**2 + &
                        s13*(6*s14 + 13*s23 - 7*s24) - 9*s23*s24 + &
                        2*s24**2) + &
                      s13*(6*s14*s23 + 3*s23**2 + 2*s14*s24 - &
                        6*s23*s24 + 16*s24**2))) - &
                2*gm**6*(m**6 + &
                   m**4*(7*s12 - 12*s13 - 4*s14 + 4*s23 + 7*s24) - &
                   s13*(s12**2 + 4*s14*s23 - s13*s24 + &
                      s12*(s13 + 4*s14 + s23 + s24)) - &
                   m**2*(5*s12**2 + s13**2 - &
                      2*s13*(2*s14 + 9*s23 - 3*s24) + &
                      s12*(-16*s13 - 4*s14 + 11*s23 + 5*s24) + &
                      2*s23*(-2*s14 + 3*(s23 + s24)))) + &
                gm**4*(198*m**8 + &
                   m**6*(-26*s12 + 837*s13 + 117*s14 - 143*s23 - &
                      319*s24) - &
                   m**4*(59*s12**2 + 89*s13**2 + 43*s14*s23 + &
                      4*s23**2 + &
                      s12*(433*s13 + 43*s14 + 63*s23 - 97*s24) + &
                      39*s14*s24 - 131*s23*s24 - 61*s24**2 + &
                      s13*(129*s14 + 331*s23 + 349*s24)) + &
                   m**2*(-34*s12**3 + 2*s13**3 + 2*s14*s23**2 - &
                      24*s23**3 + &
                      s12**2*(47*s13 + 2*s14 - 92*s23 - s24) - &
                      15*s14*s23*s24 + 8*s23**2*s24 - 22*s14*s24**2 + &
                      48*s23*s24**2 + 44*s24**3 + &
                      4*s13**2*(3*s14 + 20*s23 + 3*s24) + &
                      s13*(57*s14*s23 - 2*s23**2 + 37*s14*s24 - &
                        79*s23*s24 - 76*s24**2) + &
                      s12*(69*s13**2 + 4*s14*s23 - 82*s23**2 + &
                        s13*(57*s14 + 45*s23 - 54*s24) - 15*s14*s24 + &
                        7*s23*s24 + 35*s24**2)) + &
                   s13*(10*s12**3 + s13**2*(-6*s23 + 4*s24) + &
                      s12**2*(-2*s14 + 20*s23 + 9*s24) + &
                      s14*(-2*s23**2 + 15*s23*s24 + 22*s24**2) + &
                      s13*(-6*s23**2 - 4*s23*s24 + 7*s24**2 + &
                        2*s14*(-7*s23 + s24)) + &
                      s12*(-10*s13**2 - 4*s14*s23 + 10*s23**2 + &
                        15*s14*s24 + 9*s23*s24 + 13*s24**2 + &
                        s13*(-14*s14 - 6*s23 + 5*s24)))) + &
                gm**2*(96*m**10 - &
                   4*m**8*(18*s12 + 13*s13 + s14 + 17*s23 + 15*s24) + &
                   2*m**6*(8*s12**2 - 56*s13**2 + 7*s14*s23 + s23**2 + &
                      s12*(3*s13 + 7*s14 + 9*s23 - 7*s24) + &
                      19*s14*s24 - 32*s23*s24 - 83*s24**2 + &
                      s13*(-2*s14 + 19*s23 + 199*s24)) - &
                   m**4*(10*s12**3 + 11*s13**3 + 14*s14*s23**2 - &
                      4*s23**3 + &
                      2*s12**2*(35*s13 + 7*s14 + 8*s23 - 47*s24) + &
                      36*s14*s23*s24 - 112*s23**2*s24 + &
                      27*s14*s24**2 - 125*s23*s24**2 - 107*s24**3 - &
                      3*s13**2*(s14 + 17*s23 + 29*s24) + &
                      s13*(18*s14*s23 + 50*s23**2 + 28*s14*s24 + &
                        198*s23*s24 + 267*s24**2) + &
                      2*s12*(-35*s13**2 + 14*s14*s23 + s23**2 + &
                        18*s14*s24 - 103*s23*s24 - 42*s24**2 + &
                        s13*(9*s14 + 60*s23 + 98*s24))) + &
                   m**2*(4*s12**4 + 7*s13**4 + 4*s14*s23**3 + &
                      4*s12**3*(12*s13 + s14 + 3*s23 - 9*s24) + &
                      8*s14*s23**2*s24 - 32*s23**3*s24 + &
                      11*s14*s23*s24**2 - 24*s23**2*s24**2 + &
                      6*s14*s24**3 - 20*s23*s24**3 - 12*s24**4 + &
                      s13**3*(5*s14 - 17*s23 + 10*s24) + &
                      s13**2*&
                       (3*s14*s23 + 20*s23**2 - 4*s14*s24 + &
                        12*s23*s24 - 43*s24**2) + &
                      s13*(20*s14*s23**2 + 20*s23**3 + &
                        40*s14*s23*s24 - 2*s23**2*s24 + &
                        19*s14*s24**2 + 55*s23*s24**2 + 58*s24**3) + &
                      s12**2*&
                       (35*s13**2 + 12*s14*s23 + 12*s23**2 + &
                        8*s14*s24 - 104*s23*s24 - 17*s24**2 + &
                        2*s13*(10*s14 + 58*s23 + 3*s24)) + &
                      s12*(-s13**3 + 12*s14*s23**2 + 4*s23**3 + &
                        s13**2*(3*s14 + 55*s23 - 29*s24) + &
                        16*s14*s23*s24 - 100*s23**2*s24 + &
                        11*s14*s24**2 - 41*s23*s24**2 - 13*s24**3 + &
                        s13*(88*s23**2 + 4*s23*s24 + 79*s24**2 + &
                        40*s14*(s23 + s24)))) + &
                   s13*(-4*s12**4 - &
                      2*s12**3*(7*s13 + 2*s14 + 6*s23 - 2*s24) - &
                      7*s13**3*s24 - &
                      s12**2*&
                       (9*s13**2 + 12*s14*s23 + 12*s23**2 + &
                        s13*(6*s14 + 28*s23 - 8*s24) + 8*s14*s24 - &
                        8*s23*s24 + 7*s24**2) - &
                      s14*(4*s23**3 + 8*s23**2*s24 + 11*s23*s24**2 + &
                        6*s24**3) + &
                      s13**2*&
                       (s14*(s23 - 6*s24) + 6*s24*(s23 + 2*s24)) - &
                      s13*(s14*(6*s23**2 + 4*s23*s24 - 8*s24**2) + &
                        s24*(2*s23**2 + 8*s23*s24 + 5*s24**2)) + &
                      s12*(s13**3 - 4*s23**3 + &
                         s13**2*(s14 - 9*s23 - 5*s24) + 4*s23**2*s24 - &
                         7*s23*s24**2 - 7*s24**3 - &
                         s14*(12*s23**2 + 16*s23*s24 + 11*s24**2) + &
                         s13*&
                         (-14*s23**2 + 6*s23*s24 + 9*s24**2 - &
                         4*s14*(3*s23 + s24)))))))/&
            ((m**2 - s13)**2*(gm**2 - m**2 + s24)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) + &
           (4*(gm**6*(-28*m**6 + 45*s12**3 + 38*s13**3 + &
                   22*s13**2*s14 - 34*s13*s14**2 - 18*s14**3 + &
                   76*s13**2*s23 + 43*s13*s14*s23 - 4*s14**2*s23 + &
                   38*s13*s23**2 + 21*s14*s23**2 + 73*s13**2*s24 + &
                   20*s13*s14*s24 - 24*s14**2*s24 + 73*s13*s23*s24 + &
                   20*s14*s23*s24 + 30*s13*s24**2 - 6*s14*s24**2 - &
                   2*m**4*(150*s12 + 83*s13 - 7*s14 + 119*s23 + &
                      73*s24) + &
                   s12**2*(128*s13 + 83*s14 + 90*s23 + 75*s24) + &
                   m**2*(44*s12**2 + 57*s13**2 + 117*s13*s14 - &
                      2*s14**2 + 38*s13*s23 + 85*s14*s23 - &
                      59*s23**2 + &
                      s12*(129*s13 + 135*s14 - 25*s23 - 15*s24) + &
                      7*s13*s24 + 70*s14*s24 - 93*s23*s24 - 24*s24**2) &
+ s12*(121*s13**2 + 105*s13*s14 + 20*s14**2 + 166*s13*s23 + &
                      104*s14*s23 + 45*s23**2 + 148*s13*s24 + &
                      62*s14*s24 + 75*s23*s24 + 30*s24**2)) - &
                10*gm**8*(8*m**4 - &
                   3*s14*(s12 + s13 + s14 + s23 + s24) + &
                   m**2*(3*s12 + s13 + 3*(-s14 + s23 + s24))) + &
                gm**4*(568*m**8 + 7*s12**4 - 28*s13**4 - &
                   84*s13**3*s14 - 86*s13**2*s14**2 - 18*s13*s14**3 + &
                   12*s14**4 - 42*s13**3*s23 - 139*s13**2*s14*s23 - &
                   107*s13*s14**2*s23 - 12*s14**3*s23 - &
                   57*s13*s14*s23**2 - 21*s14**2*s23**2 + &
                   14*s13*s23**3 - 2*s14*s23**3 - &
                   2*m**6*(22*s12 + 207*s13 + 63*s14 - 143*s23 - &
                      227*s24) - 13*s13**3*s24 - 57*s13**2*s14*s24 - &
                   30*s13*s14**2*s24 + 12*s14**3*s24 + &
                   35*s13**2*s23*s24 - 55*s13*s14*s23*s24 - &
                   33*s14**2*s23*s24 + 48*s13*s23**2*s24 - &
                   13*s14*s23**2*s24 + 18*s13**2*s24**2 - &
                   3*s13*s14*s24**2 + 33*s13*s23*s24**2 - &
                   12*s14*s23*s24**2 + &
                   s12**3*(-15*s13 - 13*s14 + 24*s23 + 25*s24) - &
                   s12**2*(79*s13**2 + 44*s14**2 + 17*s14*s23 - &
                      27*s23**2 + s13*(133*s14 + 10*s23 - 37*s24) + &
                      5*s14*s24 - 68*s23*s24 - 18*s24**2) - &
                   m**4*(114*s12**2 - 92*s13**2 + 205*s14**2 + &
                      398*s14*s23 + 143*s23**2 + 347*s14*s24 + &
                      97*s23*s24 - 72*s24**2 + &
                      s12*(75*s13 + 289*s14 + 307*s23 + 177*s24) + &
                      s13*(359*s14 + 269*s23 + 322*s24)) + &
                   m**2*(s12**3 + 53*s13**3 + 52*s14**3 + &
                      154*s14**2*s23 + 122*s14*s23**2 - 12*s23**3 + &
                      s12**2*(86*s13 + 65*s14 + 43*s23 - 82*s24) + &
                      49*s14**2*s24 + 145*s14*s23*s24 - &
                      35*s23**2*s24 - 3*s14*s24**2 - 21*s23*s24**2 + &
                      s13**2*(242*s14 + 154*s23 + 59*s24) + &
                      s12*(138*s13**2 + 143*s14**2 + 266*s14*s23 + &
                        38*s23**2 + &
                        s13*(359*s14 + 260*s23 - 23*s24) + &
                        77*s14*s24 - 66*s23*s24 - 84*s24**2) + &
                      s13*(301*s14**2 + 373*s14*s23 + 99*s23**2 + &
                        195*s14*s24 + 5*s23*s24 - 84*s24**2)) - &
                   s12*(85*s13**3 + 12*s14**3 + &
                      s13**2*(204*s14 + 76*s23 + s24) + &
                      s14**2*(53*s23 + 27*s24) + &
                      s13*(145*s14**2 + 179*s14*s23 - 19*s23**2 + &
                        62*s14*s24 - 103*s23*s24 - 36*s24**2) + &
                      3*s14*(2*s23**2 - 3*s23*s24 + s24**2) - &
                      s23*(10*s23**2 + 43*s23*s24 + 33*s24**2))) + &
                2*(2*m**2 - s12 - s13 - s14)*&
                 (-2*m**2 + s12 + s13 + s23)**2*&
                 (-2*s12**3 - 2*s13**3 - 2*s13**2*s14 - 2*s13*s14**2 - &
                   2*s14**3 - 2*s13**2*s23 - 2*s13*s14*s23 - &
                   s14*s23**2 - 2*s13*s14*s24 - 2*s14**2*s24 + &
                   s13*s23*s24 + s14*s23*s24 - s13*s24**2 + &
                   m**2*(2*s12**2 + 2*s13**2 + 2*s14**2 - 5*s14*s23 + &
                      s23**2 + s13*(-12*s14 + s23 - 5*s24) - &
                      2*s12*(s13 + s14 - s23 - s24) + s14*s24 - &
                      2*s23*s24 + s24**2) - &
                   s12**2*(4*s13 + 4*s14 + 3*(s23 + s24)) + &
                   4*m**4*(s12 + 2*(s13 + s14 + s23 + s24)) - &
                   s12*(4*s13**2 + 4*s14**2 + 3*s14*(s23 + s24) + &
                      (s23 + s24)**2 + s13*(4*s14 + 3*(s23 + s24)))) + &
                gm**2*(128*m**10 - &
                   16*m**8*(9*s12 - 11*s13 + 41*s14 + 2*s23 + 18*s24) + &
                   4*m**6*(-16*s12**2 - 81*s13**2 + 113*s14**2 + &
                      100*s14*s23 + 17*s23**2 + 62*s14*s24 + &
                      54*s23*s24 - 15*s24**2 + &
                      s12*(-69*s13 + 191*s14 + 11*s23 + 51*s24) + &
                      2*s13*(98*s14 - 14*s23 + 59*s24)) + &
                   2*m**4*(52*s12**3 + 61*s13**3 - 9*s14**3 - &
                      113*s14**2*s23 - 64*s14*s23**2 - 2*s23**3 + &
                      s13**2*(-210*s14 + 30*s23 - 161*s24) + &
                      6*s14**2*s24 - 120*s14*s23*s24 - 7*s23**2*s24 + &
                      9*s14*s24**2 + 17*s23*s24**2 + &
                      2*s12**2*(45*s13 - 62*s14 + 18*s23 + 7*s24) - &
                      s13*(218*s14**2 + 234*s14*s23 + 27*s23**2 + &
                        144*s14*s24 + 122*s23*s24 - 44*s24**2) + &
                      s12*(99*s13**2 - 156*s14**2 - 175*s14*s23 + &
                        3*s23**2 + s13*(-385*s14 + 8*s23 - 147*s24) - &
                        62*s14*s24 - 5*s23*s24 + 44*s24**2)) - &
                   (s12 + s13 + s23)*&
                    (s12**4 + 2*s13**4 + &
                      2*s12**3*(7*s13 - 3*s23 - 2*s24) + &
                      s13**2*&
                       (2*s14**2 + 22*s14*s23 + 12*s23**2 + &
                        16*s14*s24 + 11*s23*s24 - 5*s24**2) + &
                      2*s13**3*(4*s14 + 7*(s23 + s24)) + &
                      s12**2*&
                       (27*s13**2 - 15*s14**2 - 18*s14*s23 - &
                        5*s23**2 - 11*s14*s24 - 18*s23*s24 - &
                        5*s24**2 + s13*(30*s14 + 13*s23 + 6*s24)) + &
                      s14*(-16*s14**3 - 2*s14**2*(3*s23 + 8*s24) + &
                        s14*s23*(-3*s23 + 11*s24) + &
                        2*s23*(s23**2 + 3*s23*s24 + 3*s24**2)) - &
                      s13*(20*s14**3 - 2*s14**2*(s23 - 7*s24) + &
                        2*s23*s24*(4*s23 + 3*s24) + &
                        s14*(-11*s23**2 - 24*s23*s24 + 5*s24**2)) + &
                      s12*(16*s13**3 - 30*s14**3 - &
                        s14**2*(18*s23 + 19*s24) + &
                        s13**2*(38*s14 + 33*s23 + 24*s24) + &
                        s13*(19*s14*s23 + 9*s23**2 + 5*s14*s24 - &
                        7*s23*s24 - 10*s24**2) + &
                        2*s23*(s23**2 - 2*s23*s24 - 3*s24**2) - &
                        s14*(8*s23**2 + 7*s23*s24 + 5*s24**2))) + &
                   m**2*(-24*s12**4 - 6*s13**4 - 28*s14**4 - &
                      14*s14**3*s23 + 25*s14**2*s23**2 + 5*s14*s23**3 + &
                      2*s23**4 - 28*s14**3*s24 + 15*s14**2*s23*s24 + &
                      58*s14*s23**2*s24 - 2*s23**3*s24 + &
                      s14*s23*s24**2 - &
                      s12**3*(13*s13 - 15*s14 + 53*s23 + 37*s24) + &
                      s13**3*(108*s14 + 37*s23 + 107*s24) + &
                      s12**2*&
                       (40*s13**2 + 25*s14**2 + 3*s14*s23 - &
                        42*s23**2 - 22*s14*s24 - 93*s23*s24 - &
                        39*s24**2 + s13*(237*s14 + 26*s23 + 33*s24)) + &
                      s13**2*&
                       (134*s14**2 + 62*s23**2 + 121*s23*s24 - &
                        39*s24**2 + 2*s14*(97*s23 + 58*s24)) + &
                      s13*(-40*s14**3 + 21*s23**3 + &
                        s14**2*(169*s23 - 29*s24) - 45*s23*s24**2 + &
                        s14*(79*s23**2 + 178*s23*s24 - 17*s24**2)) + &
                      s12*(23*s13**3 - 54*s14**3 + &
                         s14**2*(50*s23 - 39*s24) + &
                         s13**2*(330*s14 + 116*s23 + 177*s24) + &
                         s14*(s23**2 + 36*s23*s24 - 17*s24**2) - &
                         s23*(7*s23**2 + 44*s23*s24 + 45*s24**2) + &
                         s13*&
                         (181*s14**2 + 54*s23**2 + 28*s23*s24 - &
                         78*s24**2 + 94*s14*(3*s23 + s24)))))))/&
            ((-gm**2 - 2*m**2 + s12 + s13 + s14)*(gm**2 - m**2 + s23)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)*(gm**2 - m**2 + s24)) + &
           (4*(2*(2*m**2 - s12 - s23 - s24)*&
                 (-2*m**2 + s12 + s14 + s24)**2*&
                 (32*m**6 + 2*s12**3 - s13*s14*s23 + s14**2*s23 + &
                   2*s13*s23**2 + 2*s23**3 - &
                   4*m**4*(s12 - 2*(s13 + s14 - s23 - s24)) + &
                   s13**2*s24 - s13*s14*s24 + 2*s13*s23*s24 + &
                   2*s14*s23*s24 + 2*s23**2*s24 + 2*s14*s24**2 + &
                   2*s23*s24**2 + 2*s24**3 + &
                   s12**2*(3*s13 + 3*s14 + 4*(s23 + s24)) + &
                   s12*(s13**2 + s14**2 + 3*s14*(s23 + s24) + &
                      4*(s23**2 + s23*s24 + s24**2) + &
                      s13*(2*s14 + 3*(s23 + s24))) - &
                   m**2*(10*s12**2 + s13**2 + s14**2 + 11*s14*s23 + &
                      2*s23**2 + s14*s24 + 20*s23*s24 + 2*s24**2 + &
                      s13*(-2*s14 + s23 + 11*s24) + &
                      2*s12*(5*s13 + 5*s14 + 7*(s23 + s24)))) + &
                2*gm**6*(2*m**6 + &
                   2*m**4*(6*s12 + 3*s13 + 2*s14 - 10*s23 + 3*s24) - &
                   m**2*(9*s12**2 - 3*s13**2 - 3*s14**2 + 3*s14*s23 + &
                      2*s23**2 + s14*s24 - 2*s24**2 - &
                      3*s13*(2*s14 - 3*s23 + s24) + &
                      s12*(4*s13 + 6*s14 + 11*s23 + 7*s24)) - &
                   3*(s12**3 + s13**2*s24 + &
                      s13*(s14 - s23 + s24)*(s23 + s24) + &
                      s12**2*(2*s13 + 2*s14 + s23 + 2*s24) - &
                      s23*(-s14**2 + (s23 + s24)**2) + &
                      s12*(s13**2 + s14**2 - s23**2 + s24**2 + &
                        2*s14*(s23 + s24) + s13*(2*s14 + s23 + 3*s24)))&
) + gm**4*(760*m**8 + 13*s12**4 + 6*s13**2*s14*s23 + &
                   9*s13*s14**2*s23 + 2*s14**3*s23 + s13*s14*s23**2 - &
                   9*s14**2*s23**2 - 12*s13*s23**3 - 14*s14*s23**3 - &
                   12*s23**4 + &
                   2*m**6*(170*s12 + 345*s13 + 141*s14 + 51*s23 - &
                      53*s24) - 27*s13**2*s14*s24 - &
                   26*s13*s14**2*s24 - 3*s13**2*s23*s24 + &
                   25*s13*s14*s23*s24 + 33*s14**2*s23*s24 - &
                   2*s13*s23**2*s24 + 19*s14*s23**2*s24 - &
                   8*s23**3*s24 - 12*s13**2*s24**2 - &
                   5*s13*s14*s24**2 + 22*s14**2*s24**2 + &
                   31*s13*s23*s24**2 + 77*s14*s23*s24**2 + &
                   28*s23**2*s24**2 + 21*s13*s24**3 + 44*s14*s24**3 + &
                   46*s23*s24**3 + 22*s24**4 + &
                   s12**3*(s13 + 28*s14 + 29*s23 + 69*s24) + &
                   s12**2*(-12*s13**2 + 17*s14**2 + 35*s14*s23 + &
                      14*s23**2 + 116*s14*s24 + 127*s23*s24 + &
                      121*s24**2 + s13*(-24*s14 + s23 + 23*s24)) - &
                   m**4*(306*s12**2 + 36*s13**2 - 23*s14**2 + &
                      134*s14*s23 + 179*s23**2 + 187*s14*s24 + &
                      429*s23*s24 + 240*s24**2 + &
                      s13*(-141*s14 + 221*s23 + 394*s24) + &
                      s12*(395*s13 + 21*s14 + 575*s23 + 641*s24)) + &
                   s12*(2*s14**3 - 14*s23**3 + 57*s23**2*s24 + &
                      144*s23*s24**2 + 87*s24**3 - &
                      3*s13**2*(9*s14 + s23 + 8*s24) + &
                      s14**2*(8*s23 + 47*s24) - &
                      s13*(25*s14**2 + 17*s14*s23 + 5*s23**2 + &
                        29*s14*s24 - 32*s23*s24 - 43*s24**2) + &
                      s14*(-7*s23**2 + 135*s23*s24 + 132*s24**2)) - &
                   m**2*(23*s12**3 + 2*s14**3 + 14*s14**2*s23 + &
                      32*s14*s23**2 + 28*s23**3 + 55*s14**2*s24 + &
                      31*s14*s23*s24 - 17*s23**2*s24 + 24*s14*s24**2 - &
                      8*s23*s24**2 - 19*s24**3 - &
                      3*s13**2*(7*s14 + 9*s23 + 8*s24) + &
                      s12**2*(42*s13 + 53*s14 + 31*s23 + 30*s24) + &
                      s13*(-17*s14**2 + 103*s14*s23 + 5*s23**2 + &
                        59*s14*s24 + 25*s23*s24 + 83*s24**2) + &
                      s12*(-24*s13**2 + 36*s14**2 + 72*s14*s23 + &
                        29*s23**2 + 108*s14*s24 + 19*s23*s24 - &
                        12*s24**2 + s13*(20*s14 + 23*s23 + 125*s24)))) &
- gm**2*(64*m**10 + 16*m**8*(33*s12 + 34*s13 - 6*s14 + 13*s23 - &
                      39*s24) - &
                   4*m**6*(188*s12**2 + 15*s13**2 + 15*s14**2 + &
                      44*s14*s23 + 3*s23**2 - 20*s14*s24 + &
                      52*s23*s24 - 107*s24**2 + &
                      2*s13*(37*s14 + 33*s23 + 85*s24) + &
                      s12*(189*s13 + 101*s14 + 145*s23 + 85*s24)) + &
                   2*m**4*(168*s12**3 + 6*s14**3 + 76*s14**2*s23 + &
                      63*s14*s23**2 - s23**3 + 57*s14**2*s24 + &
                      230*s14*s23*s24 + 86*s23**2*s24 + &
                      54*s14*s24**2 + 166*s23*s24**2 + 13*s24**3 + &
                      s13**2*(17*s14 + 21*s23 + 32*s24) + &
                      2*s12**2*&
                       (95*s13 + 106*s14 + 112*s23 + 171*s24) + &
                      s13*(s14**2 + 32*s14*s23 + 22*s23**2 + &
                        142*s14*s24 + 112*s23*s24 + 135*s24**2) + &
                      s12*(32*s13**2 + 63*s14**2 + 305*s14*s23 + &
                        44*s23**2 + 264*s14*s24 + 375*s23*s24 + &
                        187*s24**2 + s13*(195*s14 + 138*s23 + 325*s24))&
) - m**2*(56*s12**4 - 2*s14**4 + 23*s14**3*s23 + 95*s14**2*s23**2 + &
                      34*s14*s23**3 + 28*s23**4 - s14**3*s24 + &
                      157*s14**2*s23*s24 + 251*s14*s23**2*s24 + &
                      60*s23**3*s24 + 30*s14**2*s24**2 + &
                      282*s14*s23*s24**2 + 166*s23**2*s24**2 + &
                      87*s14*s24**3 + 160*s23*s24**3 + 58*s24**4 + &
                      s12**3*(85*s13 + 133*s14 + 137*s23 + 197*s24) + &
                      s13**2*&
                       (11*s14*(s23 + 3*s24) + s24*(29*s23 + 27*s24)) &
+ s12**2*(27*s13**2 + 94*s14**2 + 325*s14*s23 + 131*s23**2 + &
                        302*s14*s24 + 387*s23*s24 + 284*s24**2 + &
                        s13*(181*s14 + 118*s23 + 191*s24)) + &
                      s13*(2*s14**3 + 28*s23**3 + 61*s23**2*s24 + &
                        60*s23*s24**2 + 21*s24**3 + &
                        s14**2*(-50*s23 + 40*s24) + &
                        s14*(17*s23**2 + 6*s23*s24 + 47*s24**2)) + &
                      s12*(11*s14**3 + 74*s23**3 + 275*s23**2*s24 + &
                        410*s23*s24**2 + 201*s24**3 + &
                        7*s14**2*(29*s23 + 14*s24) + &
                        s13**2*(33*s14 + 29*s23 + 54*s24) + &
                        s13*(84*s14**2 + 68*s14*s23 + 71*s23**2 + &
                        228*s14*s24 + 178*s23*s24 + 127*s24**2) + &
                        s14*(226*s23**2 + 574*s23*s24 + 256*s24**2))) + &
                   (s12 + s14 + s24)*&
                    (3*s12**4 - 2*s14**3*s23 + 11*s14**2*s23**2 + &
                      14*s14*s23**3 + 16*s23**4 + 5*s14**2*s23*s24 + &
                      30*s14*s23**2*s24 + 28*s23**3*s24 - &
                      4*s14**2*s24**2 + 18*s14*s23*s24**2 + &
                      22*s23**2*s24**2 + 2*s14*s24**3 + 16*s23*s24**3 + &
                      6*s24**4 + &
                      2*s12**3*(4*s13 + 7*s14 + 8*s23 + 3*s24) + &
                      s13**2*(-6*s14*(s23 - s24) + 5*s24*(s23 + s24)) + &
                      s12**2*&
                       (5*s13**2 + 9*s14**2 + 46*s14*s23 + 35*s23**2 + &
                        19*s14*s24 + 26*s23*s24 + 9*s24**2 + &
                        s13*(22*s14 + 23*s23 + 10*s24)) - &
                      s13*(-16*s23**3 + s14**2*(6*s23 - 8*s24) - &
                        22*s23**2*s24 + 6*s24**3 + &
                        s14*(3*s23**2 + 8*s23*s24 + 3*s24**2)) + &
                      s12*(-2*s14**3 + 38*s23**3 + 44*s23**2*s24 + &
                         26*s23*s24**2 + 12*s24**3 + &
                         s14**2*(20*s23 + 3*s24) + &
                         s14*(46*s23**2 + 49*s23*s24 + 7*s24**2) + &
                         s13*&
                        (4*s14**2 + 27*s23**2 + 23*s23*s24 - &
                        4*s24**2 + 19*s14*(s23 + s24)) + &
                         s13**2*(6*s14 + 5*(s23 + 2*s24)))))))/&
            ((m**2 - s13)*(m**2 - s14)*&
              (gm**2 - 2*m**2 + s12 + s14 + s24)*&
              (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
           (16*(4*(-2*m**2 + s12 + s13 + s23)**2*(-s14 + s23)*&
                 (s13**2*s14 + s13*s14**2 - 3*m**4*(s14 - s23) + &
                   s12**2*(s14 - s23) + 2*s13*s14*s23 + s14**2*s23 - &
                   s13*s23**2 - s23**3 + s13*s14*s24 - s13*s23*s24 - &
                   2*s23**2*s24 - s23*s24**2 - &
                   m**2*(s13**2 - 2*s14**2 + 2*s13*s23 + 2*s23**2 + &
                      s12*(s13 - 2*s14 + 2*s23 - s24) - 3*s14*s24 + &
                      s23*s24 - s24**2) + &
                   s12*(s14**2 + s13*(2*s14 - s23) + s14*(s23 + s24) - &
                      2*s23*(s23 + s24))) + &
                2*gm**6*(24*m**6 - &
                   3*s14*(s12 - 2*s13 + s23 + s24)*&
                    (s12 + s13 + s14 + s23 + s24) + &
                   m**4*(16*s12 + 9*s13 + 39*s14 + 16*s23 + 16*s24) - &
                   m**2*(s12**2 - 17*s13*s14 + 5*s14**2 + 7*s13*s23 - &
                      7*s14*s23 + s23**2 + 7*s13*s24 - 7*s14*s24 + &
                      2*s23*s24 + s24**2 + &
                      s12*(7*s13 - 7*s14 + 2*(s23 + s24)))) + &
                gm**4*(-152*m**8 - 3*s12**4 + 4*s13**3*s14 + &
                   34*s13**2*s14**2 + 30*s13*s14**3 - &
                   18*s13**2*s14*s23 + 35*s13*s14**2*s23 + &
                   9*s14**3*s23 + 4*s13**2*s23**2 - &
                   32*s13*s14*s23**2 - 2*s14**2*s23**2 + &
                   8*s13*s23**3 - 10*s14*s23**3 + 4*s23**4 - &
                   17*s13**2*s14*s24 + 27*s13*s14**2*s24 + &
                   4*s13**2*s23*s24 - 33*s13*s14*s23*s24 - &
                   3*s14**2*s23*s24 + 12*s13*s23**2*s24 - &
                   22*s14*s23**2*s24 + 8*s23**3*s24 - &
                   3*s13**2*s24**2 - 3*s13*s14*s24**2 + &
                   4*s13*s23*s24**2 - 12*s14*s23*s24**2 + &
                   4*s23**2*s24**2 - &
                   2*s12**3*(3*s13 + 4*s14 + s23 + 3*s24) - &
                   2*m**6*(82*s12 + 39*s13 + 215*s14 + 75*s23 + &
                      115*s24) - &
                   s12**2*(3*s13**2 - 4*s14**2 + 23*s14*s23 - &
                      9*s23**2 + 11*s14*s24 - 2*s23*s24 + 3*s24**2 + &
                      s13*(21*s14 - 2*s23 + 12*s24)) + &
                   m**4*(64*s12**2 + 23*s13**2 + 9*s14**2 - &
                      89*s14*s23 + 12*s23**2 - 209*s14*s24 - &
                      8*s23*s24 - 52*s24**2 + &
                      s12*(103*s13 - 55*s14 + 107*s23 + 21*s24) + &
                      s13*(56*s14 + 89*s23 + 65*s24)) + &
                   s12*(9*s14**3 + s13**2*(-9*s14 + 4*s23 - 6*s24) + &
                      2*s14**2*(s23 + 3*s24) + &
                      2*s13*&
                       (13*s14**2 - 25*s14*s23 + 8*s23**2 - &
                        14*s14*s24 + 3*s23*s24 - 3*s24**2) + &
                      4*s23*(3*s23**2 + 4*s23*s24 + s24**2) - &
                      s14*(25*s23**2 + 30*s23*s24 + 3*s24**2)) + &
                   m**2*(13*s12**3 + 19*s14**3 + 56*s14**2*s23 + &
                      4*s14*s23**2 + 2*s23**3 + &
                      s13**2*(3*s14 - 24*s23 - 10*s24) - &
                      4*s14**2*s24 + 19*s14*s23*s24 + 10*s23**2*s24 - &
                      3*s14*s24**2 + 8*s23*s24**2 + &
                      s12**2*(3*s13 + 35*s14 + 44*s23 + 38*s24) + &
                      s13*(194*s14**2 - 4*s14*s23 - 22*s23**2 + &
                        58*s14*s24 + 13*s23*s24 + 25*s24**2) + &
                      s12*(-10*s13**2 + 30*s14**2 + 60*s14*s23 + &
                        33*s23**2 + 51*s14*s24 + 64*s23*s24 + &
                        25*s24**2 + s13*(30*s14 - 11*s23 + 28*s24)))) - &
                gm**2*(192*m**10 - &
                   8*m**8*(22*s12 + 19*s13 + 35*s14 - 13*s23 - 5*s24) + &
                   2*m**6*(12*s12**2 + 19*s13**2 - 85*s14**2 + &
                      48*s14*s23 + 49*s23**2 + &
                      s12*(34*s13 - 30*s14 + 54*s23 - 34*s24) + &
                      s13*(-32*s14 + 46*s23 - 24*s24) - 138*s14*s24 + &
                      108*s23*s24 - 7*s24**2) + &
                   m**4*(12*s12**3 - 5*s13**3 + 32*s14**3 + &
                      s14**2*s23 + 76*s14*s23**2 - 65*s23**3 - &
                      46*s14**2*s24 + 188*s14*s23*s24 - &
                      20*s23**2*s24 - 34*s14*s24**2 + 83*s23*s24**2 + &
                      s13**2*(148*s14 - 119*s23 + 12*s24) + &
                      2*s12**2*(5*s13 + 67*s14 - 41*s23 + 13*s24) + &
                      s13*(219*s14**2 - 46*s14*s23 - 163*s23**2 + &
                        128*s14*s24 - 106*s23*s24 + 5*s24**2) + &
                      s12*(-7*s13**2 + 83*s14**2 + 166*s14*s23 - &
                        165*s23**2 + 126*s14*s24 - 34*s23*s24 + &
                        5*s24**2 + s13*(274*s14 - 214*s23 + 38*s24))) - &
                   m**2*(2*s12**4 + s13**3*(21*s14 - 22*s23 - s24) + &
                      s12**3*(3*s13 + 9*s14 + 15*s23 + s24) + &
                      s13**2*&
                       (18*s14**2 + 6*s14*s23 - 30*s23**2 - &
                        11*s14*s24 + 6*s23*s24 - s24**2) + &
                      s12**2*&
                       (-17*s14**2 + 65*s14*s23 + 28*s23**2 - &
                        12*s14*s24 + 67*s23*s24 - s24**2 + &
                        s13*(39*s14 - 10*s23 + s24)) + &
                      s23*(-3*s14**3 + s14**2*(9*s23 - 16*s24) + &
                        s14*(16*s23**2 + 35*s23*s24 - 11*s24**2) + &
                        6*s23*(2*s23**2 + 7*s23*s24 + 6*s24**2)) + &
                      s13*(-39*s14**3 + s14**2*(79*s23 - 54*s24) + &
                        s14*(3*s23**2 + 96*s23*s24 - 13*s24**2) + &
                        s23*(4*s23**2 + 51*s23*s24 + 55*s24**2)) - &
                      s12*(s13**3 + 3*s14**3 + &
                        s13**2*(-51*s14 + 47*s23 + s24) + &
                        8*s14**2*(s23 + 3*s24) + &
                        s13*(-7*s14**2 - 63*s14*s23 + 21*s23**2 + &
                        23*s14*s24 - 73*s23*s24 + 2*s24**2) + &
                        s14*(-72*s23**2 - 57*s23*s24 + 13*s24**2) - &
                        s23*(27*s23**2 + 106*s23*s24 + 55*s24**2))) + &
                   (s12 + s13 + s23)*&
                    (-4*s13**3*s14 - 4*s12**3*(s14 - 2*s23) - &
                      s13**2*&
                       (18*s14**2 - 20*s14*s23 + 4*s23**2 + s14*s24 - &
                        2*s23*s24) + &
                      s12**2*&
                       (-3*s14**2 + s13*(-9*s14 + 10*s23) + &
                        s14*(3*s23 - s24) + 16*s23*(s23 + s24)) + &
                      s14*s23*&
                       (s14**2 + 2*s24*(s23 + s24) + &
                        s14*(7*s23 + 3*s24)) + &
                      s13*(-14*s14**3 + 11*s14**2*(s23 - s24) + &
                        4*s23*(-s23**2 + s23*s24 + 2*s24**2) + &
                        s14*(26*s23**2 + 31*s23*s24 + 3*s24**2)) + &
                      s12*(s14**3 + s13**2*(-9*s14 + 2*s23) + &
                         4*s14**2*(s23 + s24) + 8*s23*(s23 + s24)**2 + &
                         s14*(7*s23**2 + 12*s23*s24 + 3*s24**2) - &
                         2*s13*&
                         (9*s14**2 + s14*(-10*s23 + s24) - &
                         3*s23*(s23 + 3*s24)))))))/&
            ((-m**2 + s13)*(-m**2 + s14)*(gm**2 - m**2 + s23)*&
              (gm**2 - 2*m**2 + s12 + s13 + s23)) + &
           (4*(2*(2*m**2 - s12 - s13 - s14)*&
                 (-2*m**2 + s12 + s14 + s24)**2*&
                 (8*m**6 + 2*s12**3 + 2*s13*s14**2 + 2*s14**3 + &
                   s13*s14*s23 + s14*s23**2 + s13**2*s24 + &
                   4*s13*s14*s24 + 2*s14**2*s24 + s13*s23*s24 + &
                   2*s13*s24**2 - &
                   12*m**4*(s12 + s13 + s14 + s23 + s24) + &
                   s12**2*(3*s13 + 4*s14 + 3*s23 + 4*s24) + &
                   m**2*(3*s13**2 + 11*s13*s14 - 2*s14**2 + &
                      4*s13*s23 + 7*s14*s23 - s23**2 + &
                      s12*(6*s13 + 4*s14 - 2*s24) + 3*s13*s24 + &
                      2*s14*s24 - s23*s24 - 2*s24**2) + &
                   s12*(s13**2 + 3*s13*s14 + 4*s14**2 + 2*s13*s23 + &
                      3*s14*s23 + s23**2 + 5*s13*s24 + 4*s14*s24 + &
                      3*s23*s24 + 2*s24**2)) + &
                gm**6*(200*m**6 - 30*s12**3 + 66*s13**2*s14 + &
                   38*s13*s14**2 - 28*s14**3 + 6*s13**2*s23 + &
                   39*s13*s14*s23 - 58*s14**2*s23 + 6*s13*s23**2 - &
                   30*s14*s23**2 + 21*s13**2*s24 + 56*s13*s14*s24 - &
                   56*s14**2*s24 + 24*s13*s23*s24 - 58*s14*s23*s24 + &
                   18*s13*s24**2 - 28*s14*s24**2 + &
                   m**4*(140*s12 - 125*s13 - 19*s14 + 129*s23 + &
                      111*s24) - &
                   s12**2*(9*s13 + 88*s14 + 60*(s23 + s24)) - &
                   m**2*(63*s12**2 - s13**2 + 26*s14**2 + &
                      61*s14*s23 - 24*s23**2 + 66*s14*s24 - &
                      34*s23*s24 - 10*s24**2 + &
                      s12*(107*s13 + 117*s14 + 39*s23 + 53*s24) + &
                      s13*(107*s14 + 55*s23 + 66*s24)) + &
                   s12*(21*s13**2 + s13*(29*s14 - 3*s23 + 9*s24) - &
                      2*(43*s14**2 + 15*(s23 + s24)**2 + &
                        s14*(59*s23 + 58*s24)))) + &
                gm**4*(-680*m**8 + 4*s12**4 - 6*s13**3*s14 + &
                   38*s13**2*s14**2 + 72*s13*s14**3 + 28*s14**4 + &
                   2*s12**3*(10*s13 + 24*s14 - 7*s23) - &
                   3*s13**2*s14*s23 + 53*s13*s14**2*s23 + &
                   24*s14**3*s23 + 3*s13*s14*s23**2 - &
                   18*s14**2*s23**2 + &
                   4*m**6*(50*s12 + 60*s13 + 149*s14 - 114*s23 - &
                      21*s24) - 9*s13**3*s24 + 57*s13**2*s14*s24 + &
                   138*s13*s14**2*s24 + 40*s14**3*s24 + &
                   3*s13**2*s23*s24 + 84*s13*s14*s23*s24 - &
                   22*s14**2*s23*s24 + 12*s13*s23**2*s24 - &
                   33*s14*s23**2*s24 + 4*s13**2*s24**2 + &
                   82*s13*s14*s24**2 - 4*s14**2*s24**2 + &
                   31*s13*s23*s24**2 - 46*s14*s23*s24**2 + &
                   16*s13*s24**3 - 16*s14*s24**3 + &
                   s12**2*(7*s13**2 + 112*s14**2 - 4*s14*s23 - &
                      18*s23**2 + 56*s14*s24 - 55*s23*s24 - &
                      12*s24**2 + s13*(135*s14 + s23 + 44*s24)) + &
                   m**4*(26*s12**2 + 128*s13**2 - 209*s14**2 + &
                      315*s14*s23 - 72*s23**2 + 58*s14*s24 + &
                      53*s23*s24 + 67*s24**2 + &
                      2*s12*(125*s13 - 65*s14 + 85*s23 + 77*s24) + &
                      s13*(281*s14 + 356*s23 + 231*s24)) + &
                   s12*(-9*s13**3 + 96*s14**3 + &
                      s13**2*(60*s14 - 6*s23 + 11*s24) + &
                      s14**2*(34*s23 + 96*s24) - &
                      s24*(33*s23**2 + 41*s23*s24 + 8*s24**2) - &
                      s14*(36*s23**2 + 77*s23*s24 + 8*s24**2) + &
                      s13*(187*s14**2 + 54*s14*s23 + 3*s23**2 + &
                        205*s14*s24 + 20*s23*s24 + 40*s24**2)) - &
                   m**2*(4*s12**3 + 39*s13**3 + 28*s14**3 + &
                      75*s14**2*s23 - 84*s14*s23**2 + 84*s14**2*s24 + &
                      24*s14*s23*s24 - 21*s23**2*s24 + 76*s14*s24**2 - &
                      15*s23*s24**2 + &
                      s12**2*(56*s13 + 67*s14 - 66*s23 + 67*s24) + &
                      s13**2*(216*s14 + 60*s23 + 85*s24) + &
                      s13*(205*s14**2 + 154*s14*s23 - 3*s23**2 + &
                        262*s14*s24 + 94*s23*s24 + 73*s24**2) + &
                      s12*(100*s13**2 + 91*s14**2 + 9*s14*s23 - &
                        84*s23**2 + 214*s14*s24 - 47*s23*s24 + &
                        63*s24**2 + s13*(313*s14 + 36*s23 + 153*s24)))) &
- gm**2*(128*m**10 - 16*m**8*(19*s12 + 39*s13 - 5*s14 + 24*s23) + &
                   4*m**6*(36*s12**2 + 111*s13**2 - 55*s14**2 + &
                      148*s14*s23 - 15*s23**2 - 38*s14*s24 + &
                      66*s23*s24 + 9*s24**2 + &
                      2*s13*(92*s14 + 48*s23 + 47*s24) + &
                      3*s12*(71*s13 + 3*(s14 + 9*s23 + s24))) + &
                   2*m**4*(16*s12**3 - 42*s13**3 + 53*s14**3 - &
                      177*s14**2*s23 + 44*s14*s23**2 - &
                      2*s12**2*(73*s13 - 5*s14 + s23 - 17*s24) + &
                      47*s14**2*s24 - 145*s14*s23*s24 + &
                      17*s23**2*s24 - 4*s14*s24**2 - 7*s23*s24**2 + &
                      6*s24**3 - s13**2*(192*s14 + 41*s23 + 97*s24) - &
                      s13*(155*s14**2 + 193*s14*s23 - 9*s23**2 + &
                        195*s14*s24 + 137*s23*s24 + 55*s24**2) - &
                      s12*(169*s13**2 - 47*s14**2 + 179*s14*s23 - &
                        44*s23**2 - 23*s14*s24 + 28*s23*s24 - &
                        18*s24**2 + s13*(352*s14 + 111*s23 + 165*s24))) &
+ (s12 + s14 + s24)*(3*s12**4 + &
                      s12**3*(17*s13 + 2*s14 + 8*s23 + 5*s24) + &
                      s13**3*(6*s14 + 11*s24) + &
                      s13**2*&
                       (14*s14**2 + 11*s14*s23 + 19*s14*s24 + &
                        5*s23*s24 + 12*s24**2) + &
                      s12**2*&
                       (25*s13**2 - 3*s14**2 + 6*s14*s23 + 5*s23**2 - &
                        13*s14*s24 + 13*s23*s24 - 2*s24**2 + &
                        s13*(22*s14 + 24*s23 + 31*s24)) + &
                      s14*(2*s14**3 + 6*s23*s24*(s23 + s24) - &
                        2*s14**2*(5*s23 + 6*s24) + &
                        s14*(5*s23**2 - 16*s23*s24 - 14*s24**2)) + &
                      s13*(10*s14**3 - s14**2*(3*s23 + 8*s24) + &
                        s14*(5*s23**2 - 19*s23*s24 - 10*s24**2) - &
                        2*s24*(3*s23**2 + 5*s23*s24 + 2*s24**2)) + &
                      s12*(11*s13**3 - 6*s14**2*(2*s23 + 5*s24) + &
                        s13**2*(26*s14 + 16*s23 + 37*s24) + &
                        s14*(10*s23**2 - 3*s23*s24 - 18*s24**2) + &
                        2*s24*(3*s23**2 + s23*s24 - 2*s24**2) + &
                        s13*(15*s14**2 + 21*s14*s23 + 5*s23**2 + &
                        8*s14*s24 + 12*s23*s24 + 10*s24**2))) + &
                   m**2*(-28*s12**4 - 20*s14**4 + 97*s14**3*s23 - &
                      39*s14**2*s23**2 + 14*s14**3*s24 + &
                      134*s14**2*s23*s24 - 45*s14*s23**2*s24 + &
                      46*s14**2*s24**2 + 15*s14*s23*s24**2 + &
                      16*s14*s24**3 + 4*s23*s24**3 + 4*s24**4 + &
                      s13**3*(19*s14 + 15*s24) - &
                      s12**3*(23*s13 + 39*s14 + 47*s23 + 59*s24) + &
                      s12**2*&
                       (20*s13**2 - 14*s14**2 - 39*s23**2 + &
                        s13*(78*s14 - 33*s23 - 61*s24) + &
                        3*s14*(s23 - 3*s24) - 80*s23*s24 - 33*s24**2) + &
                      s13**2*&
                       (72*s14**2 + 30*s14*s23 + 93*s14*s24 + &
                        44*s23*s24 - s24**2) + &
                      s13*(25*s14**3 + 3*s14**2*(35*s23 + 34*s24) + &
                        s24*(s23**2 + 33*s23*s24 - 12*s24**2) + &
                        s14*(-17*s23**2 + 154*s23*s24 + 39*s24**2)) + &
                      s12*(15*s13**3 - 23*s14**3 + &
                         s13**2*(114*s14 + 20*s23 + 19*s24) + &
                         s14**2*(147*s23 + 64*s24) + &
                         s24*(-45*s23**2 - 29*s23*s24 + 2*s24**2) + &
                         s14*(-78*s23**2 + 54*s23*s24 + 47*s24**2) + &
                         s13*&
                         (126*s14**2 - 17*s23**2 + 12*s23*s24 - &
                         50*s24**2 + 18*s14*(4*s23 + 7*s24)))))))/&
            ((-gm**2 - 2*m**2 + s12 + s13 + s14)*(gm**2 - m**2 + s23)*&
              (gm**2 - m**2 + s24)*(gm**2 - 2*m**2 + s12 + s14 + s24)) + &
           (16*(4*(s14 - s23)*(s13 - s24)*&
                 (-(s12**2*s13*s14) - 2*s12*s13**2*s14 - s13**3*s14 - &
                   2*s12*s13*s14**2 - 2*s13**2*s14**2 - s13*s14**3 + &
                   s12**2*s13*s23 + s12*s13**2*s23 + s12*s13*s14*s23 + &
                   s12*s13*s23**2 + s13*s14*s23**2 + &
                   4*m**4*(s14 - s23)*(s13 - s24) + s12**2*s14*s24 + &
                   s12*s13*s14*s24 + s12*s14**2*s24 - s12**2*s23*s24 + &
                   s12*s13*s23*s24 + s13**2*s23*s24 + &
                   s12*s14*s23*s24 + 4*s13*s14*s23*s24 + &
                   s14**2*s23*s24 - 2*s12*s23**2*s24 - s23**3*s24 + &
                   s12*s14*s24**2 + s13*s14*s24**2 - &
                   2*s12*s23*s24**2 - 2*s23**2*s24**2 - s23*s24**3 + &
                   m**2*(s13 - s14 + s23 - s24)**2*&
                    (s12 + s13 + s14 + s23 + s24)) + &
                2*gm**6*(230*m**6 + 3*s12**3 - 4*s13**2*s14 - &
                   4*s13*s14**2 - 4*s13*s14*s23 + 3*s13*s23**2 + &
                   3*s14*s23**2 + 3*s23**3 - 4*s13*s14*s24 + &
                   6*s13*s23*s24 + 6*s14*s23*s24 + 9*s23**2*s24 + &
                   3*s13*s24**2 + 3*s14*s24**2 + 9*s23*s24**2 + &
                   3*s24**3 + &
                   2*m**4*(65*s12 + 10*s13 + 2*s14 + 65*s23 + &
                      65*s24) + 3*s12**2*(s13 + s14 + 3*(s23 + s24)) + &
                   s12*(3*(s23 + s24)*(2*s14 + 3*(s23 + s24)) + &
                      s13*(-4*s14 + 6*(s23 + s24))) + &
                   m**2*(30*s12**2 + s13*(-6*s14 + 19*(s23 + s24)) + &
                      (s23 + s24)*(11*s14 + 30*(s23 + s24)) + &
                      s12*(19*s13 + 11*s14 + 60*(s23 + s24)))) + &
                gm**4*(192*m**8 - &
                   4*m**6*(52*s12 + 209*s13 + 137*s14 + 123*s23 + &
                      51*s24) - &
                   m**4*(488*s12**2 - 175*s13**2 + 73*s14**2 + &
                      646*s14*s23 + 457*s23**2 + 1102*s14*s24 + &
                      994*s23*s24 + 649*s24**2 + &
                      8*s12*(65*s13 + 92*s14 + 120*s23 + 147*s24) + &
                      s13*(-54*s14 + 534*s23 + 702*s24)) - &
                   m**2*(202*s12**3 + 71*s14**2*s23 + &
                      219*s14*s23**2 + 128*s23**3 + 146*s14**2*s24 + &
                      679*s14*s23*s24 + 464*s23**2*s24 + &
                      512*s14*s24**2 + 628*s23*s24**2 + 292*s24**3 - &
                      s13**2*(202*s14 + 50*s23 + 85*s24) + &
                      s12**2*&
                       (125*s13 + 293*s14 + 537*s23 + 705*s24) + &
                      s13*(-202*s14**2 - 193*s14*s23 + 112*s23**2 - &
                        153*s14*s24 + 271*s23*s24 + 211*s24**2) + &
                      s12*(-85*s13**2 + 71*s14**2 + 512*s14*s23 + &
                        463*s23**2 + 812*s14*s24 + 1174*s23*s24 + &
                        795*s24**2 + &
                        s13*(-218*s14 + 236*s23 + 336*s24))) - &
                   2*(12*s12**4 + 7*s13**3*s14 + 6*s14**2*s23**2 + &
                      12*s14*s23**3 + 6*s23**4 + 22*s14**2*s23*s24 + &
                      50*s14*s23**2*s24 + 28*s23**3*s24 + &
                      15*s14**2*s24**2 + 71*s14*s23*s24**2 + &
                      56*s23**2*s24**2 + 33*s14*s24**3 + &
                      52*s23*s24**3 + 18*s24**4 + &
                      6*s12**3*(s13 + 3*s14 + 7*s23 + 9*s24) - &
                      s13**2*&
                       (2*s14**2 + 19*s14*s23 + s23**2 + 35*s14*s24 + &
                        6*s23*s24 + 6*s24**2) + &
                      s12**2*&
                       (-6*s13**2 + 6*s14**2 + 48*s14*s23 + &
                        54*s23**2 - 6*s13*(6*s14 - 3*s23 - 4*s24) + &
                        70*s14*s24 + 136*s23*s24 + 90*s24**2) + &
                      s12*(12*s14**2*s23 + 42*s14*s23**2 + &
                        30*s23**3 + 22*s14**2*s24 + 120*s14*s23*s24 + &
                        110*s23**2*s24 + 85*s14*s24**2 + &
                        146*s23*s24**2 + 66*s24**3 - &
                        s13**2*(29*s14 + 6*s23 + 12*s24) + &
                        s13*(-45*s14**2 - 56*s14*s23 + 17*s23**2 - &
                        68*s14*s24 + 40*s23*s24 + 30*s24**2)) - &
                      s13*(9*s14**3 - 5*s23**3 - 15*s23**2*s24 - &
                        22*s23*s24**2 - 12*s24**3 + &
                        s14**2*(35*s23 + 51*s24) + &
                        s14*(21*s23**2 + 52*s23*s24 + 33*s24**2)))) - &
                2*gm**2*(-2*s13**4*s14 - 11*s13**3*s14**2 - &
                   7*s13**2*s14**3 + 2*s13*s14**4 + 15*s13**3*s14*s23 + &
                   14*s13**2*s14**2*s23 + 8*s13*s14**3*s23 + &
                   11*s13**2*s14*s23**2 - 2*s13**2*s23**3 - &
                   8*s13*s14*s23**3 - 2*s13*s23**4 + &
                   12*s12**3*(s14 - s23)*(s13 - s24) + &
                   8*s13**3*s14*s24 + 24*s13**2*s14**2*s24 + &
                   25*s13*s14**3*s24 + 4*s13**3*s23*s24 + &
                   5*s13**2*s14*s23*s24 - s13*s14**2*s23*s24 - &
                   4*s14**3*s23*s24 - 9*s13**2*s23**2*s24 - &
                   49*s13*s14*s23**2*s24 - 8*s14**2*s23**2*s24 - &
                   7*s13*s23**3*s24 + 4*s14*s23**3*s24 + 8*s23**4*s24 + &
                   8*s13**2*s14*s24**2 + 15*s13*s14**2*s24**2 - &
                   6*s14**3*s24**2 - 16*s13**2*s23*s24**2 - &
                   55*s13*s14*s23*s24**2 - 17*s14**2*s23*s24**2 - &
                   12*s13*s23**2*s24**2 + 10*s14*s23**2*s24**2 + &
                   29*s23**3*s24**2 - 8*s13*s14*s24**3 - &
                   12*s14**2*s24**3 - 4*s13*s23*s24**3 + &
                   3*s14*s23*s24**3 + 37*s23**2*s24**3 - 6*s14*s24**4 + &
                   16*s23*s24**4 + &
                   2*m**6*(12*s13**2 + 12*s14**2 - 24*s14*s23 + &
                      12*s23**2 + s13*(-53*s14 + 53*s23 - 24*s24) + &
                      53*s14*s24 - 53*s23*s24 + 12*s24**2) + &
                   m**4*(-25*s13**3 - 25*s14**3 + 37*s14**2*s23 + &
                      s14*s23**2 - 13*s23**3 - 108*s14**2*s24 + &
                      66*s14*s23*s24 + 42*s23**2*s24 - 70*s14*s24**2 + &
                      20*s23*s24**2 - 13*s24**3 + &
                      s13**2*(80*s14 - 130*s23 + 37*s24) + &
                      s13*(58*s14**2 + 34*s14*s23 - 92*s23**2 - &
                        10*s14*s24 + 110*s23*s24 + s24**2) - &
                      2*s12*(11*s13**2 + 11*s14**2 - 22*s14*s23 + &
                        11*s23**2 + s13*(-19*s14 + 19*s23 - 22*s24) + &
                        19*s14*s24 - 19*s23*s24 + 11*s24**2)) + &
                   8*s12**2*(s13**2*(2*s14 - s23) + &
                      s13*(3*s14**2 + 2*s14*s24 - &
                       s23*(3*s23 + 4*s24)) + &
                      s24*(-2*s14**2 - 2*s14*(s23 + 2*s24) + &
                        s23*(4*s23 + 5*s24))) + &
                   s12*(2*s13**3*(s14 + 2*s23) + &
                      s13**2*&
                       (7*s14**2 - 8*s23*(s23 + 3*s24) + &
                        5*s14*(5*s23 + 6*s24)) + &
                      s13*(14*s14**3 + s14**2*(18*s23 + 47*s24) - &
                        2*s14*(9*s23**2 + 29*s23*s24 + 3*s24**2) - &
                        s23*(14*s23**2 + 37*s23*s24 + 24*s24**2)) - &
                      s24*(4*s14**3 + 6*s14**2*(4*s23 + 5*s24) + &
                        s14*s24*(15*s23 + 26*s24) - &
                        s23*(28*s23**2 + 69*s23*s24 + 44*s24**2))) + &
                   m**2*(-7*s14**3*s23 + 10*s14**2*s23**2 + &
                      s14*s23**3 - 4*s23**4 + &
                      s13**3*(3*s14 + 13*s23 - 7*s24) - 12*s14**3*s24 - &
                      57*s14**2*s23*s24 + 27*s14*s23**2*s24 + &
                      42*s23**3*s24 - 82*s14**2*s24**2 + &
                      3*s14*s23*s24**2 + 114*s23**2*s24**2 - &
                      59*s14*s24**3 + 67*s23*s24**3 - 4*s24**4 - &
                      7*s12**2*&
                       (s13**2 + s14**2 - 2*s14*s23 + s23**2 + &
                        s13*(-9*s14 + 9*s23 - 2*s24) + 9*s14*s24 - &
                        9*s23*s24 + s24**2) + &
                      s13**2*&
                       (38*s14**2 + 19*s14*s23 - 22*s23**2 + &
                        58*s14*s24 - 82*s23*s24 + 10*s24**2) + &
                      s13*(28*s14**3 - 34*s23**3 - 57*s23**2*s24 + &
                        2*s23*s24**2 + s24**3 + &
                        s14**2*(33*s23 + 79*s24) - &
                        s14*(27*s23**2 + 92*s23*s24 + 2*s24**2)) + &
                      s12*(-7*s13**3 - 7*s14**3 - 11*s23**3 + &
                         s14**2*(3*s23 - 86*s24) + 102*s23**2*s24 + &
                         130*s23*s24**2 - 11*s24**3 + &
                         s13**2*(62*s14 - 58*s23 + 3*s24) + &
                         s14*(15*s23**2 - 16*s23*s24 - 126*s24**2) + &
                         s13*&
                         (90*s14**2 - 98*s23**2 - 72*s23*s24 + &
                         15*s24**2 + 8*s14*(s23 + 8*s24)))))))/&
            ((-m**2 + s13)*(-m**2 + s14)*(gm**2 - m**2 + s23)*&
              (gm**2 - m**2 + s24)) + &
           (4*(-(gm**6*(40*m**6 + &
                     m**4*(-26*s12 + 167*s13 - 31*s14 + 5*s23 + &
                        75*s24) + &
                     s13*(5*s12**2 + 10*s13**2 - 2*s14**2 + &
                        5*s14*s23 + 12*s14*s24 + 6*s23*s24 + &
                        6*s24**2 + &
                        s12*(15*s13 + 3*s14 + 5*s23 + 11*s24) + &
                        s13*(4*s14 + 10*s23 + 21*s24)) + &
                     m**2*(3*s12**2 - 87*s13**2 + 3*s14*s23 - &
                        6*s23*s24 - 6*s24**2 - &
                        3*s12*(41*s13 - s14 - s23 + s24) - &
                        s13*(101*s14 + 23*s23 + 108*s24)))) - &
                2*(2*m**2 - s12 - s13 - s14)*(s13 - s24)*&
                 (16*m**8 - 2*m**6*&
                    (10*s12 + 19*s13 + 7*s14 + 3*s23 - 5*s24) + &
                   m**4*(8*s12**2 + 18*s13**2 + 3*s14**2 + 5*s14*s23 + &
                      s13*(23*s14 + 4*s23 - s24) - 4*s14*s24 + &
                      5*s23*s24 - 5*s24**2 + &
                      s12*(25*s13 + 11*s14 + 5*s23 + 3*s24)) - &
                   m**2*(s12**3 + 4*s13**3 + 2*s13**2*s23 + &
                      s14**2*s23 - s14**2*s24 + 6*s14*s23*s24 - &
                      2*s14*s24**2 - s23*s24**2 - 3*s24**3 + &
                      s12**2*(3*s13 + 2*s14 + s23 + 6*s24) + &
                      s12*(2*s13**2 + 7*s13*s14 + s14**2 + &
                        2*s14*s23 + 5*s13*s24 + 5*s14*s24 + 6*s23*s24) &
+ 2*s13*(2*s14**2 + 3*s14*s24 + (s23 - s24)*s24)) + &
                   s24*(s12**3 + s14*s23*(s14 + s24) + &
                      2*s13**2*(s23 + s24) + &
                      s12**2*(-s13 + 2*s14 + s23 + 2*s24) - &
                      s13*s24*(s14 + 2*s23 + 3*s24) + &
                      s12*(2*s13**2 + s14**2 + 2*s14*(s23 + s24) + &
                         s24*(s23 + s24) - s13*(s14 + 4*s24)))) + &
                gm**4*(10*m**8 - 10*s13**4 - 6*s13**3*s14 + &
                   4*s13*s14**3 - 10*s13**3*s23 - 5*s13**2*s14*s23 + &
                   4*s13*s14**2*s23 - 13*s13**3*s24 + &
                   8*s13**2*s14*s24 + 26*s13*s14**2*s24 - &
                   2*s13**2*s23*s24 + 11*s13*s14*s23*s24 + &
                   2*s14**2*s23*s24 + 17*s13**2*s24**2 + &
                   32*s13*s14*s24**2 - s14*s23*s24**2 + 13*s13*s24**3 + &
                   2*s12**3*(2*s13 + s24) + &
                   m**6*(14*s12 + 333*s13 - 11*s14 + 25*s23 + 33*s24) + &
                   s12**2*(-s13**2 + s24*(4*s14 + 2*s23 + s24) + &
                      s13*(12*s14 + 4*s23 + 21*s24)) - &
                   m**4*(21*s12**2 + 179*s13**2 + 10*s14**2 + &
                      11*s14*s23 + &
                      s12*(189*s13 + 31*s14 + 11*s23 - 65*s24) - &
                      77*s14*s24 + 3*s23*s24 + 13*s24**2 + &
                      s13*(149*s14 + 37*s23 + 139*s24)) + &
                   s12*(-15*s13**3 - s13**2*(s14 + 5*s23 - 4*s24) + &
                      s13*(12*s14**2 + 8*s14*s23 + 47*s14*s24 + &
                        11*s23*s24 + 36*s24**2) + &
                      s24*(2*s14**2 - s24*(s23 + s24) + &
                        s14*(4*s23 + s24))) + &
                   m**2*(2*s12**3 + 45*s13**3 + 2*s14**2*s23 + &
                      s12**2*(-17*s13 + 4*s14 + 2*s23 - 19*s24) - &
                      18*s14**2*s24 - 7*s14*s23*s24 - 9*s14*s24**2 + &
                      s23*s24**2 - 13*s24**3 + &
                      s13**2*(-s14 + 35*s23 + 51*s24) + &
                      s12*(29*s13**2 + 2*s14**2 + &
                        s14*(4*s23 - 37*s24) - 7*s24*(s23 + s24) - &
                        s13*(43*s14 + 3*s23 + 16*s24)) - &
                      s13*(26*s14**2 + s14*(3*s23 + 25*s24) + &
                         s24*(s23 + 27*s24)))) + &
                gm**2*(96*m**10 + 4*s13**5 + 4*s13**4*s14 + &
                   4*s13**3*s14**2 + 4*s13**2*s14**3 + 4*s13**4*s23 + &
                   4*s13**3*s14*s23 + 2*s13**2*s14**2*s23 + &
                   2*s13*s14**3*s23 - &
                   4*m**8*(26*s12 + 19*s13 + 21*s14 + 5*s23 - 27*s24) + &
                   2*s12**4*(s13 - s24) + 2*s13**3*s14*s24 - &
                   2*s13**2*s14**2*s24 - 4*s13*s14**3*s24 - &
                   18*s13**3*s23*s24 - 11*s13**2*s14*s23*s24 + &
                   4*s13*s14**2*s23*s24 - 2*s14**3*s23*s24 - &
                   25*s13**3*s24**2 - 20*s13**2*s14*s24**2 + &
                   4*s13*s14**2*s24**2 + 12*s13**2*s23*s24**2 + &
                   18*s13*s14*s23*s24**2 + 18*s13**2*s24**3 + &
                   24*s13*s14*s24**3 + 6*s13*s23*s24**3 - &
                   s14*s23*s24**3 + 7*s13*s24**4 + &
                   2*s12**3*(2*s13**2 + s13*(3*s14 + s23) - &
                      s24*(3*s14 + s23 + s24)) + &
                   2*m**6*(16*s12**2 + 5*s13**2 + 9*s14**2 + &
                      7*s14*s23 + &
                      s12*(-31*s13 + 25*s14 + 7*s23 - 21*s24) - &
                      45*s14*s24 + 18*s23*s24 - 32*s24**2 - &
                      s13*(28*s14 + 5*s23 + 65*s24)) + &
                   s12**2*(6*s13**3 + s13**2*(12*s14 + 2*s23 - 7*s24) - &
                      s24*(6*s14**2 + 6*s14*s23 + 4*s14*s24 + s24**2) + &
                      2*s13*(3*s14**2 + 3*s14*s23 - 2*s14*s24 + &
                         2*s23*s24 + 5*s24**2)) + &
                   s12*(8*s13**4 + s13**3*(10*s14 + 4*s23 - 17*s24) + &
                      s13**2*&
                       (12*s14**2 + 4*s14*s23 - 9*s14*s24 - &
                        11*s23*s24 - 5*s24**2) - &
                      s24*(2*s14**3 + s14*s24**2 + &
                        s24**2*(s23 + s24) + 2*s14**2*(3*s23 + s24)) + &
                      s13*(2*s14**3 + s14**2*(6*s23 - 8*s24) + &
                         2*s14*s24*(4*s23 + 7*s24) + &
                         s24**2*(18*s23 + 25*s24))) + &
                   m**4*(-2*s12**3 - 3*s13**3 - 2*s14**2*s23 + &
                      18*s14**2*s24 - 42*s14*s23*s24 + 37*s14*s24**2 + &
                      17*s23*s24**2 + 39*s24**3 + &
                      3*s13**2*(33*s14 + s23 + 9*s24) + &
                      s13*(60*s14**2 + 40*s14*s23 + 74*s14*s24 - &
                        16*s23*s24 + 65*s24**2) + &
                      s12**2*(90*s13 - 2*(2*s14 + s23 + 15*s24)) + &
                      2*s12*(50*s13**2 - s14**2 - 2*s14*(s23 + 3*s24) + &
                         3*s24*(-7*s23 + 5*s24) + &
                         s13*(75*s14 + 20*s23 + 26*s24))) - &
                   m**2*(4*s13**4 + s13**3*(30*s14 + 6*s23 - 4*s24) + &
                      8*s12**3*(3*s13 - 2*s24) + &
                      s13**2*&
                       (36*s14**2 + 13*s14*s23 + 3*s14*s24 - &
                         43*s23*s24 - 39*s24**2) + &
                      s12**2*&
                       (45*s13**2 + 2*s13*(29*s14 + 9*s23 + 3*s24) - &
                         s24*(34*s14 + 14*s23 + 7*s24)) + &
                      s24*(-2*s14**3 + s14**2*(-14*s23 + 4*s24) + &
                         s24**2*(5*s23 + 7*s24) + s14*s24*(s23 + 13*s24)&
) + 2*s13*(5*s14**3 + 3*s14**2*(3*s23 + s24) + &
                         4*s14*s24*(s23 + 4*s24) + &
                         s24**2*(23*s23 + 34*s24)) + &
                      s12*(33*s13**3 + &
                         s13**2*(81*s14 + 13*s23 - 31*s24) + &
                         s24*&
                         (-20*s14**2 - s14*(28*s23 + 3*s24) + &
                         s24*(s23 + 9*s24)) + &
                         s13*(44*s14**2 + 12*s14*(3*s23 + s24) + &
                         s24*(8*s23 + 61*s24)))))))/&
            ((m**2 - s13)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
              (gm**2 - m**2 + s24)**2))/(12.*gm**4) - &
       ((160*gm**2*(gm**4*(10*m**2 - s12 - s13 - s14 - s23 - s24) - &
               (2*m**2 - s12 - s13 - s23)*&
                (2*m**4 + s23*(s12 + s23 + s24) - &
                  m**2*(s12 + 2*s14 + s23 + s24)) + &
               gm**2*(-17*m**4 + s12**2 + s13*s14 + 2*s13*s23 + &
                  s14*s23 + 2*s23**2 + m**2*(2*s13 + s23 - s24) + &
                  s13*s24 + s12*(s13 + s14 + 3*s23 + s24))))/&
           (gm**2 - m**2 + s23)**2 + &
          (32*(-2*(-2*m**2 + s12 + s13 + s23)**2 + &
               gm**2*(18*m**2 - 5*(s12 + s13 + s23)))*&
             (2*gm**4*(2*m**2 + s12 + s13 + s14 + s23 + s24) - &
               (2*m**2 - s12 - s13 - s23)*&
                (2*m**4 + s23*(s12 + s23 + s24) - &
                  m**2*(s12 + 2*s14 + s23 + s24)) + &
               gm**2*(-2*m**4 + s12**2 + s13*s14 + 2*s13*s23 + s14*s23 + &
                  2*s23**2 + s13*s24 + 3*s23*s24 + &
                  s12*(s13 + s14 + 3*s23 + s24) - &
                  2*m**2*(3*s12 + 2*s13 + 3*s14 + s23 + 2*s24))))/&
           ((gm**2 - m**2 + s23)**2*(gm**2 - 2*m**2 + s12 + s13 + s23)) - &
          (160*gm**2*((2*m**4 + s14*(s12 + s13 + s14) - &
                  m**2*(s12 + s13 + 5*s14 - 2*s23))*&
                (2*m**2 - s12 - s14 - s24) + &
               gm**2*(m**4 + s13*s14 + &
                  m**2*(2*s12 - s13 - 5*s14 + 2*s23 + 2*s24))))/&
           (m**2 - s14)**2 - (32*&
             (-2*(-2*m**2 + s12 + s14 + s24)**2 + &
               gm**2*(18*m**2 - 5*(s12 + s14 + s24)))*&
             (-((2*m**4 + s14*(s12 + s13 + s14) - &
                    m**2*(s12 + s13 + 5*s14 - 2*s23))*&
                  (2*m**2 - s12 - s14 - s24)) + &
               2*gm**2*(7*m**4 + s13*s14 + &
                  m**2*(2*s12 - s13 + s14 + 2*s23 + 2*s24))))/&
           ((m**2 - s14)**2*(gm**2 - 2*m**2 + s12 + s14 + s24)) + &
          (40*gm**2*(28*m**8 - &
               4*m**6*(7*s12 + 3*s13 + 15*s14 - s23 + 5*s24) + &
               m**4*(7*s12**2 + 16*s13*s14 + 28*s14**2 + 8*s13*s23 + &
                  28*s14*s23 - 13*s23**2 + 12*s13*s24 + 56*s14*s24 - &
                  22*s23*s24 - s24**2 + &
                  2*s12*(6*s13 + 34*s14 - 9*s23 + 3*s24) + &
                  2*gm**2*(6*s12 - 2*s13 + 5*(-2*s14 + s23 + s24))) + &
               s14*(2*s12**3 + s12**2*(3*s13 + 4*s14 + 2*s23 + 4*s24) + &
                  (s23 + s24)*&
                   (-2*gm**2*s13 + 2*s14*(s14 + s24) + &
                     s13*(2*s14 + s23 + 3*s24)) + &
                  2*s12*(s14**2 + 2*s14*s23 + gm**2*(-s13 + s23) + &
                     3*s14*s24 + s23*s24 + s24**2 + &
                     s13*(s14 + 2*s23 + 3*s24))) - &
               m**2*(4*s13*s14**2 + 4*s14**3 + 10*s13*s14*s23 + &
                  14*s14**2*s23 + s13*s23**2 - s14*s23**2 - 2*s23**3 + &
                  14*s13*s14*s24 + 18*s14**2*s24 + 4*s13*s23*s24 + &
                  12*s14*s23*s24 - 10*s23**2*s24 + 3*s13*s24**2 + &
                  13*s14*s24**2 - 10*s23*s24**2 - 2*s24**3 + &
                  2*gm**2*(2*s12**2 - 5*s14*s23 + 2*s23**2 - &
                     s12*(s13 + 4*s14 - 7*s23 - 4*s24) - 5*s14*s24 + &
                     6*s23*s24 + 2*s24**2 - s13*(2*s14 + s23 + s24)) + &
                  s12**2*(3*s13 + 23*s14 - 2*(4*s23 + s24)) + &
                  2*s12*(11*s14**2 - 5*s23**2 - 9*s23*s24 - 2*s24**2 + &
                     9*s14*(s23 + 2*s24) + s13*(7*s14 + 2*s23 + 3*s24))))&
)/((m**2 - s14)**2*(-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
          (32*(-2*(2*m**2 - s12 - s13 - s23)*(s14 - s23)**2*&
                (2*m**2 - s12 - s14 - s24) + &
               2*gm**4*(23*m**4 + 2*s12*s14 + s13*s14 + 2*s14**2 - &
                  5*s12*s23 - 5*s13*s23 - 3*s14*s23 - 5*s23**2 + &
                  2*s14*s24 - 5*s23*s24 + &
                  m**2*(11*s12 + 10*s13 + 16*s14 + s23 + 11*s24)) + &
               gm**2*(40*m**6 - s13*s14**2 - 4*s14**3 + &
                  2*s12**2*(s14 - 3*s23) + s13*s14*s23 + 6*s14**2*s23 - &
                  4*s13*s23**2 - 2*s14*s23**2 - 4*s23**3 + &
                  2*s13*s14*s24 - 4*s14**2*s24 - 6*s13*s23*s24 + &
                  9*s14*s23*s24 - 9*s23**2*s24 - &
                  4*m**4*(10*s12 + 5*s13 + 5*s14 + 9*s23 + 5*s24) + &
                  2*s12*(s13*s14 - s14**2 - 3*s13*s23 + 2*s14*s23 - &
                     5*s23**2 + s14*s24 - 3*s23*s24) + &
                  m**2*(10*s12**2 + 11*s13*s14 - 9*s14**2 + 7*s13*s23 + &
                     32*s14*s23 + 3*s23**2 + 10*s13*s24 - 5*s14*s24 + &
                     23*s23*s24 + 2*s12*(5*s13 + 3*s14 + 15*s23 + 5*s24))&
)))/((m**2 - s14)*(gm**2 - m**2 + s23)) + &
          (16*(4*gm**2*m**2 - (-2*m**2 + s12 + s13 + s23)**2)*&
             (gm**6*(38*m**2 - s12 - s13 - s14 - s23 - s24) + &
               gm**4*(-27*m**4 + s12**2 + 4*s13**2 + s13*s14 + &
                  2*s13*s23 + s14*s23 - 2*s23**2 + &
                  m**2*(8*s12 - 6*s13 + 39*s23 - s24) + s13*s24 + &
                  s12*(5*s13 + s14 - s23 + s24)) + &
               2*(-2*m**2 + s12 + s13 + s23)**2*&
                (11*m**4 + s23*s24 - &
                  m**2*(2*s12 + 2*s13 + 2*s14 + 3*s23 + s24)) + &
               gm**2*(-100*m**6 + &
                  2*m**4*(32*s12 + 39*s13 + 6*s14 + 24*s23 + 5*s24) + &
                  (s12 + s13 + s23)*&
                   (2*s12**2 + 2*s13**2 + 2*s13*(s14 + 2*s23 + s24) + &
                     s12*(4*s13 + 2*s14 + s23 + 2*s24) + &
                     s23*(2*s14 - s23 + 3*s24)) - &
                  m**2*(25*s12**2 + 28*s13**2 + &
                     s12*(53*s13 + 10*s14 + 24*s23 + 9*s24) + &
                     s13*(10*s14 + 41*s23 + 9*s24) + &
                     s23*(10*s14 - s23 + 11*s24)))))/&
           ((gm**2 - m**2 + s23)**2*(gm**2 - 2*m**2 + s12 + s13 + s23)**2) &
+ (20*gm**2*((2*m**2 - s12 - s13 - s14)*&
                (28*m**6 + s12**3 + 3*s13*s14*s23 + 2*s14**2*s23 - &
                  4*s13*s23**2 + s14*s23**2 - 4*s23**3 - &
                  2*m**4*(5*s12 + 8*s13 + 10*s14 + 5*s23 - s24) + &
                  s13**2*s24 + 2*s13*s14*s24 - 3*s13*s23*s24 + &
                  2*s14*s23*s24 - 4*s23**2*s24 + &
                  s12**2*(2*s13 + 3*s14 - 2*s23 + s24) + &
                  s12*(s13**2 + 3*s13*s14 + 2*s14**2 - 2*s13*s23 + &
                     4*s14*s23 - 7*s23**2 + 2*s13*s24 + 2*s14*s24 - &
                     3*s23*s24) + &
                  m**2*(-4*s12**2 + s13**2 + 7*s13*s14 + 2*s13*s23 - &
                     s14*s23 + 11*s23**2 - 3*s13*s24 - 6*s14*s24 + &
                     9*s23*s24 - 3*s12*(s13 + s14 - 3*s23 + s24))) + &
               2*gm**2*(34*m**6 + 3*s12**3 - s13*s14**2 - s14**3 + &
                  2*s13**2*s23 + 4*s13*s14*s23 + s14**2*s23 + &
                  2*s13*s23**2 + 2*s14*s23**2 + 3*s13**2*s24 + &
                  3*s13*s14*s24 - s14**2*s24 + 2*s13*s23*s24 + &
                  2*s14*s23*s24 + &
                  s12**2*(6*s13 + 6*s14 + 5*s23 + 3*s24) + &
                  m**4*(7*s12 - 20*s13 - 26*s14 + 11*s23 + 17*s24) + &
                  s12*(3*s13**2 + 2*s14**2 + 2*s23*(s23 + s24) + &
                     s14*(8*s23 + 3*s24) + s13*(6*s14 + 7*s23 + 6*s24)) &
- m**2*(18*s12**2 - s13**2 - 6*s14**2 + 8*s14*s23 + 4*s23**2 + &
                     7*s14*s24 + 4*s23*s24 + &
                     s13*(-7*s14 + 10*s23 + 15*s24) + &
                     s12*(17*s13 + 13*s14 + 17*s23 + 15*s24)))))/&
           ((-gm**2 - 2*m**2 + s12 + s13 + s14)*(gm**2 - m**2 + s23)**2) + &
          (16*(4*gm**2*m**2 - (-2*m**2 + s12 + s14 + s24)**2)*&
             (gm**4*(13*m**4 - s13*s14 + &
                  m**2*(-2*s12 + s13 + 19*s14 - 2*s23 - 2*s24)) + &
               2*(-2*m**2 + s12 + s14 + s24)**2*&
                (3*m**4 + s13*s14 + &
                  m**2*(2*s12 - s13 - 3*s14 + 2*s23 + 2*s24)) + &
               gm**2*(-52*m**6 - &
                  s14*(3*s12 - s13 + 3*s14)*(s12 + s14 + s24) - &
                  2*m**4*(12*s12 - s13 + 16*s14 + 2*s23 + 5*s24) + &
                  m**2*(11*s12**2 + 33*s14**2 + 2*s14*s23 + 27*s14*s24 + &
                     2*s23*s24 + 8*s24**2 - s13*(3*s14 + s24) + &
                     s12*(-s13 + 44*s14 + 2*s23 + 19*s24)))))/&
           ((m**2 - s14)**2*(gm**2 - 2*m**2 + s12 + s14 + s24)**2) - &
          (16*(10*gm**6*(m**4 + 3*m**2*(s12 + s23 + s24) + &
                  s14*(s12 - 2*s13 + s14 + s23 + s24)) - &
               4*(2*m**2 - s12 - s13 - s23)*(s14 - s23)**2*&
                (2*m**4 + s23*(s12 + s23 + s24) - &
                  m**2*(s12 + 2*s14 + s23 + s24)) + &
               gm**4*(102*m**6 - 2*s13*s14**2 + 2*s14**3 + &
                  5*s12**2*(s14 - 3*s23) - 2*s13*s14*s23 - s14**2*s23 - &
                  10*s13*s23**2 + 11*s14*s23**2 - 10*s23**3 + &
                  5*s13*s14*s24 + 2*s14**2*s24 - 15*s13*s23*s24 + &
                  16*s14*s23*s24 - 10*s23**2*s24 - &
                  2*m**4*(3*s12 - 9*s14 + 11*s23 + 3*s24) + &
                  m**2*(22*s12*s14 + 29*s13*s14 - 53*s14**2 + &
                     38*s12*s23 - 5*s13*s23 - 4*s14*s23 + 43*s23**2 - &
                     3*s14*s24 + 43*s23*s24) + &
                  s12*(7*s14**2 + 5*s13*(s14 - 3*s23) - &
                     5*s23*(5*s23 + 3*s24) + s14*(16*s23 + 5*s24))) + &
               gm**2*(4*s13*s14**3 - 12*s13*s14**2*s23 + s14**3*s23 + &
                  12*s13*s14*s23**2 + s14**2*s23**2 - 6*s13*s23**3 + &
                  2*s14*s23**3 - 6*s23**4 + m**6*(-80*s14 + 88*s23) + &
                  s12**2*(s14**2 + s14*s23 - 4*s23**2) + &
                  s13*s14**2*s24 + s13*s14*s23*s24 + 6*s14**2*s23*s24 - &
                  4*s13*s23**2*s24 - 2*s14*s23**2*s24 - 6*s23**3*s24 + &
                  m**4*(42*s12*s14 + 47*s13*s14 + 27*s14**2 - &
                     50*s12*s23 - 51*s13*s23 + 20*s14*s23 - 63*s23**2 - &
                     5*s14*s24 + s23*s24) + &
                  s12*(s14**3 + s13*(s14**2 + s14*s23 - 4*s23**2) + &
                     s14**2*(2*s23 + s24) + s14*s23*(3*s23 + s24) - &
                     2*s23**2*(5*s23 + 2*s24)) - &
                  m**2*(9*s14**3 + s12**2*(s14 - 3*s23) + &
                     17*s14**2*s23 - 30*s14*s23**2 - 6*s23**3 + &
                     13*s14**2*s24 - 19*s14*s23*s24 + &
                     s12*(25*s14**2 + s13*(s14 - 3*s23) - 26*s14*s23 - &
                        11*s23**2 + s14*s24 - 3*s23*s24) + &
                     s13*(13*s14**2 - 9*s14*s23 - 10*s23**2 + s14*s24 - &
                        3*s23*s24)))))/&
           ((m**2 - s14)*(gm**2 - m**2 + s23)**2) - &
          (2*(2*gm**6*(m**2 - s23)*&
                (2*m**4 + s12*s14 - m**2*(3*s12 + 2*s24)) + &
               (-2*m**2 + s12 + s23 + s24)**3*&
                (6*m**6 + m**4*(-9*s12 + s13 + 7*s14 - 2*s23 - 8*s24) + &
                  s14*(-s12**2 + (s13 + s14)*s23 - &
                     s12*(s14 - s23 + s24)) + &
                  m**2*(3*s12**2 - s14**2 - 7*s14*s23 + 2*s23**2 - &
                     s13*(s14 + s23) + 2*s24**2 + &
                     s12*(2*s14 - s23 + 5*s24))) - &
               gm**4*(2*m**2 - s12 - s23 - s24)*&
                (16*m**6 + m**4*&
                   (-42*s12 + 7*s13 + 37*s14 - 27*s23 - 33*s24) - &
                  s14*(s12**2 - 4*s13*s23 - s14*s23 - 3*s13*s24 + &
                     s12*(-3*s13 + s14 + 7*s23 + s24)) + &
                  m**2*(9*s12**2 - s14**2 - 22*s14*s23 + 8*s23**2 - &
                     15*s14*s24 + 28*s23*s24 + 8*s24**2 - &
                     s13*(7*s14 + 4*s23 + 3*s24) + &
                     s12*(-3*s13 - 5*s14 + 35*s23 + 17*s24))) + &
               gm**2*(-2*m**2 + s12 + s23 + s24)**2*&
                (34*m**6 - m**4*&
                   (15*s12 + 11*s13 + 47*s14 - 15*s23 + 9*s24) - &
                  s14*(4*s12**2 + s14*(3*s14 - s23 + 3*s24) + &
                     s12*(6*s13 + 7*s14 - 2*s23 + 4*s24) + &
                     s13*(3*s14 + 2*s23 + 6*s24)) + &
                  2*m**2*(s12*(3*s13 + 17*s14 - 11*s23 - 2*s24) + &
                     s13*(7*s14 + s23 + 3*s24) + &
                     2*(5*s14**2 - s14*s23 - s23**2 + 6*s14*s24 - &
                        5*s23*s24 - s24**2)))))/&
           ((m**2 - s14)**2*(-gm**2 - 2*m**2 + s12 + s23 + s24)**2) - &
          (2*(-2*gm**6*(m**2 - s14)**2*&
                (2*m**2 - s12 - s13 - s14 - s23 - s24) + &
               gm**2*(-2*m**2 + s12 + s13 + s14)**2*&
                (22*m**6 - 2*s13**2*s14 - 3*s13*s14**2 - s14**3 + &
                  s12**2*(s14 - 3*s23) + 2*s13*s14*s23 - 3*s13*s23**2 + &
                  2*s14*s23**2 - 3*s23**3 - &
                  m**4*(7*s12 + 16*s13 + 28*s14 - 4*s24) + &
                  s13*s14*s24 - s14**2*s24 - 3*s13*s23*s24 + &
                  2*s14*s23*s24 - 3*s23**2*s24 + &
                  m**2*(-2*s12**2 + 2*s13**2 + 7*s14**2 - 2*s14*s23 + &
                     7*s23**2 + s13*(19*s14 - 3*s23 - 2*s24) + &
                     s12*(5*s14 + 5*s23 - 2*s24) - 5*s14*s24 + &
                     7*s23*s24) + &
                  s12*(-(s13*(s14 + 3*s23)) - 3*s23*(2*s23 + s24) + &
                     s14*(3*s23 + s24))) + &
               gm**4*(2*m**2 - s12 - s13 - s14)*&
                (56*m**6 + m**4*&
                   (-2*s12 - 35*s13 - 101*s14 + 15*s23 + 17*s24) - &
                  s14*(s12**2 + 4*s13**2 + 8*s14**2 + 9*s14*s23 + &
                     2*s23**2 + 8*s14*s24 + 2*s23*s24 + &
                     s13*(12*s14 + 2*s23 + s24) + &
                     s12*(5*s13 + 9*s14 + 3*s23 + s24)) + &
                  m**2*(-13*s12**2 + 4*s13**2 + 53*s14**2 + 8*s14*s23 + &
                     2*s23**2 + s13*(47*s14 - 12*s23 - 13*s24) + &
                     5*s14*s24 + 2*s23*s24 - &
                     s12*(9*s13 - 25*s14 + 11*s23 + 13*s24))) - &
               (-2*m**2 + s12 + s13 + s14)**3*&
                (10*m**6 - m**4*(3*s12 + 6*s13 + 16*s14 + s23 - s24) + &
                  m**2*(-s12**2 + s13**2 + 7*s13*s14 + 6*s14**2 + &
                     4*s14*s23 + 2*s23**2 + s12*(6*s14 + s23 - s24) - &
                     s13*s24 + s14*s24 + 2*s23*s24) - &
                  s14*(s12**2 + s13**2 + s13*(s14 + 2*s23 + s24) + &
                     s12*(2*s13 + s14 + 3*s23 + s24) + &
                     s23*(s14 + 2*(s23 + s24))))))/&
           ((-gm**2 - 2*m**2 + s12 + s13 + s14)**2*&
             (gm**2 - m**2 + s23)**2) - &
          (16*(-4*(2*m**4 + s14*(s12 + s13 + s14) - &
                  m**2*(s12 + s13 + 5*s14 - 2*s23))*(s14 - s23)**2*&
                (-2*m**2 + s12 + s14 + s24) + &
               gm**2*(10*s13*s14**3 + 2*s14**4 + &
                  8*m**6*(5*s14 - 6*s23) + 6*s13*s14**2*s23 + &
                  16*s14**3*s23 - 14*s13*s14*s23**2 - &
                  13*s14**2*s23**2 - 3*s14*s23**3 + &
                  s12**2*(14*s14**2 - 9*s14*s23 - 3*s23**2) + &
                  14*s13*s14**2*s24 + 2*s14**3*s24 - &
                  9*s13*s14*s23*s24 + 12*s14**2*s23*s24 - &
                  3*s13*s23**2*s24 - 12*s14*s23**2*s24 + &
                  m**4*(-21*s14**2 + 2*s12*(9*s14 - 5*s23) + &
                     100*s14*s23 - 63*s23**2 + s13*(3*s14 + s23) + &
                     15*s14*s24 - 11*s23*s24) + &
                  s12*(16*s14**3 + &
                     s13*(14*s14**2 - 9*s14*s23 - 3*s23**2) - &
                     3*s23**2*(s23 + s24) + 7*s14**2*(s23 + 2*s24) - &
                     s14*s23*(16*s23 + 9*s24)) - &
                  m**2*(40*s14**3 + s12**2*(19*s14 - 17*s23) + &
                     16*s14**2*s23 - 59*s14*s23**2 + 13*s23**3 + &
                     60*s14**2*s24 - 55*s14*s23*s24 + s23**2*s24 + &
                     s13*(26*s14**2 - 21*s14*s23 + s23**2 + &
                        19*s14*s24 - 17*s23*s24) + &
                     s12*(19*s13*s14 + 87*s14**2 - 17*s13*s23 - &
                        78*s14*s23 + 3*s23**2 + 19*s14*s24 - 17*s23*s24)&
)) + 2*gm**4*(9*m**6 + m**4*(33*s12 + 30*s13 + 38*s14 + 30*s23 + &
                     3*s24) + &
                  s14*(-2*s12**2 + s13*(6*s14 - 8*s23 - 2*s24) + &
                     (10*s14 - 9*s23)*(s14 + s23 + s24) - &
                     s12*(2*s13 - 8*s14 + 11*s23 + 2*s24)) + &
                  m**2*(10*s12**2 + 33*s14**2 - s14*s23 + 9*s23**2 + &
                     11*s14*s24 + 9*s23*s24 + &
                     s12*(10*s13 + 15*s14 + 19*s23 + 10*s24) + &
                     2*s13*(s14 + 5*(s23 + s24))))))/&
           ((m**2 - s14)**2*(gm**2 - m**2 + s23)) + &
          (4*(4*(2*m**2 - s12 - s13 - s14)*&
                (4*m**6 - 4*m**4*(s12 + s13 + 2*s14) + &
                  m**2*(s12**2 + s13**2 + 6*s13*s14 + 3*s14**2 + &
                     2*s12*(s13 + 3*s14) + 2*s23**2) - &
                  s14*(s12**2 + s13**2 + s14**2 + 2*s13*s23 - &
                     2*s14*s23 + 2*s23**2 + 2*s12*(s13 + s23)))*&
                (2*m**2 - s12 - s14 - s24) + &
               2*gm**4*(104*m**6 + &
                  m**4*(-15*s12 - 43*s13 - 23*s14 + 28*s23 + 38*s24) + &
                  s14*(5*s12**2 + 4*s13**2 + &
                     (3*s14 - 2*s23)*(s14 + s23 + s24) + &
                     s13*(3*s14 + s23 + 5*s24) + &
                     s12*(9*s13 + 8*s14 + 3*s23 + 5*s24)) - &
                  m**2*(21*s12**2 + 10*s13**2 + 14*s14**2 + &
                     25*s14*s23 - 2*s23**2 + 25*s14*s24 - 2*s23*s24 + &
                     s13*(24*s14 + 5*s23 + 21*s24) + &
                     s12*(31*s13 + 35*s14 + 19*s23 + 21*s24))) + &
               gm**2*(128*m**8 - 8*s13**3*s14 - 6*s13**2*s14**2 - &
                  6*s13*s14**3 - s12**3*(s14 - 3*s23) - &
                  10*s13**2*s14*s23 - 11*s13*s14**2*s23 - 7*s14**3*s23 - &
                  s13*s14*s23**2 - 9*s14**2*s23**2 + 6*s14*s23**3 - &
                  4*m**6*(32*s12 + 29*s13 + 13*s14 - 5*s23 - 5*s24) - &
                  s13**2*s14*s24 - 3*s13*s14**2*s24 + 3*s13**2*s23*s24 - &
                  9*s13*s14*s23*s24 - 12*s14**2*s23*s24 + &
                  6*s13*s23**2*s24 + 4*s14*s23**2*s24 - &
                  s12**2*(4*s14**2 + 2*s13*(5*s14 - 3*s23) - &
                     3*s23*(3*s23 + s24) + s14*(11*s23 + s24)) + &
                  2*m**4*(16*s12**2 + 5*s13**2 - 52*s14**2 + &
                     27*s14*s23 - 27*s23**2 + &
                     s12*(21*s13 + 5*s14 - 17*s23 - 5*s24) - &
                     26*s14*s24 + 5*s23*s24 - &
                     s13*(11*s14 + 12*s23 + 5*s24)) + &
                  m**2*(8*s13**3 + 49*s14**3 - 12*s14**2*s23 + &
                     33*s14*s23**2 - 6*s23**3 + &
                     2*s12**2*(4*s13 + 5*s14 + 3*s23) + &
                     s13**2*(43*s14 + 9*s23) + 21*s14**2*s24 + &
                     21*s14*s23*s24 - 10*s23**2*s24 + &
                     s12*(16*s13**2 + 53*s13*s14 + 57*s14**2 + &
                        15*s13*s23 + 20*s14*s23 + 3*s23**2 + &
                        25*s14*s24 - 13*s23*s24) + &
                     s13*(76*s14**2 - 19*s14*s23 + 31*s23**2 + &
                        25*s14*s24 - 13*s23*s24)) - &
                  s12*(s13**2*(17*s14 - 3*s23) + &
                     s13*(10*s14**2 + 21*s14*s23 - 9*s23**2 + &
                        2*s14*s24 - 6*s23*s24) + &
                     3*(s14**3 + 3*s14*s23*s24 - 2*s23**2*(s23 + s24) + &
                        s14**2*(7*s23 + s24))))))/&
           ((m**2 - s14)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
             (gm**2 - m**2 + s23)) - &
          (16*(2*(2*m**4 + s14*(s12 + s13 + s14) - &
                  m**2*(s12 + s13 + 5*s14 - 2*s23))*(s14 - s23)**2*&
                (2*m**4 + s23*(s12 + s23 + s24) - &
                  m**2*(s12 + 2*s14 + s23 + s24)) + &
               2*gm**6*(3*m**6 + &
                  s14**2*(s12 + 4*s13 + s14 + s23 + s24) + &
                  m**4*(s12 + 35*s14 + s23 + s24) + &
                  m**2*s14*(34*s12 - 4*s13 - 39*s14 + 34*s23 + 34*s24)) &
+ gm**4*(-6*m**8 - 2*m**6*(s12 - 15*s14 + 2*s23 + s24) + &
                  m**4*(67*s13*s14 + 52*s14**2 - 3*s13*s23 - &
                     46*s14*s23 - 20*s23**2 - 2*s12*(2*s14 + s23) - &
                     63*s14*s24 + s23*s24) + &
                  m**2*(-84*s14**3 + s12**2*(23*s14 - s23) + &
                     85*s14**2*s23 + 45*s14*s23**2 - 18*s23**3 + &
                     95*s14**2*s24 + 23*s14*s23*s24 - 18*s23**2*s24 + &
                     s12*(23*s13*s14 + 39*s14**2 - s13*s23 + &
                        50*s14*s23 - 19*s23**2 + 23*s14*s24 - s23*s24) &
+ s13*(-78*s14**2 + 31*s14*s23 + s23**2 + 23*s14*s24 - s23*s24)) + &
                  s14*(8*s14**3 + 3*s14**2*s23 - 25*s14*s23**2 + &
                     12*s23**3 + s12**2*(-3*s14 + 13*s23) + &
                     8*s14**2*s24 - 24*s14*s23*s24 + 12*s23**2*s24 + &
                     s13*(11*s14**2 - 8*s14*s23 + 11*s23**2 - &
                        3*s14*s24 + 13*s23*s24) + &
                     s12*(-3*s13*s14 + 5*s14**2 + 13*s13*s23 - &
                        28*s14*s23 + 25*s23**2 - 3*s14*s24 + 13*s23*s24)&
)) - gm**2*(s13*s14**4 + s14**5 - 8*s13*s14**3*s23 - 4*s14**4*s23 + &
                  18*s13*s14**2*s23**2 + 2*s14**3*s23**2 - &
                  8*s13*s14*s23**3 + 16*s14**2*s23**3 + 3*s13*s23**4 - &
                  12*s14*s23**4 + 3*s23**5 + 4*m**8*(5*s14 + s23) - &
                  3*s12**2*(s14**3 - 4*s14**2*s23 + 2*s14*s23**2 - &
                     s23**3) - 3*s13*s14**3*s24 + s14**4*s24 + &
                  12*s13*s14**2*s23*s24 - 4*s14**3*s23*s24 - &
                  6*s13*s14*s23**2*s24 + 18*s14**2*s23**2*s24 + &
                  3*s13*s23**3*s24 - 12*s14*s23**3*s24 + 3*s23**4*s24 - &
                  m**6*(24*s12*s14 + 65*s14**2 + 18*s14*s23 - &
                     11*s23**2 + 3*s13*(3*s14 + s23) + 15*s14*s24 - &
                     3*s23*s24) + &
                  s12*(-2*s14**4 - &
                     3*s13*(s14**3 - 4*s14**2*s23 + 2*s14*s23**2 - &
                        s23**3) + 3*s23**3*(2*s23 + s24) - &
                     6*s14*s23**2*(3*s23 + s24) - &
                     s14**3*(2*s23 + 3*s24) + &
                     4*s14**2*s23*(7*s23 + 3*s24)) + &
                  m**4*(73*s14**3 + s12**2*(7*s14 - s23) - &
                     30*s14**2*s23 + 58*s14*s23**2 - 23*s23**3 + &
                     19*s14**2*s24 + 26*s14*s23*s24 - 15*s23**2*s24 + &
                     s12*(7*s13*s14 + 42*s14**2 - s13*s23 + &
                        24*s14*s23 - 6*s23**2 + 7*s14*s24 - s23*s24) + &
                     s13*(25*s14**2 - 6*s14*s23 + 11*s23**2 + &
                        7*s14*s24 - s23*s24)) + &
                  m**2*(-29*s14**4 + 78*s14**3*s23 - 140*s14**2*s23**2 + &
                     58*s14*s23**3 - 3*s23**4 + &
                     s12**2*(s14**2 - 18*s14*s23 + 5*s23**2) + &
                     25*s14**3*s24 - 94*s14**2*s23*s24 + &
                     48*s14*s23**2*s24 - 3*s23**3*s24 + &
                     s12*(14*s14**3 + &
                        s13*(s14**2 - 18*s14*s23 + 5*s23**2) + &
                        2*s14*s23*(11*s23 - 9*s24) + &
                        s14**2*(-86*s23 + s24) + s23**2*(2*s23 + 5*s24)) &
+ s13*(-17*s14**3 - 18*s14*s23*(2*s23 + s24) + s14**2*(22*s23 + s24) + &
                        s23**2*(7*s23 + 5*s24))))))/&
           ((m**2 - s14)**2*(gm**2 - m**2 + s23)**2) + &
          (16*(4*(2*m**2 - s12 - s13 - s23)*&
                (-2*m**2 + s12 + s14 + s24)**2*&
                (2*m**4 + s23*(s12 + s23 + s24) - &
                  m**2*(s12 + 2*s14 + s23 + s24)) + &
               10*gm**6*(16*m**4 + &
                  3*(s12 + s14 + s23 + s24)*&
                   (s12 + s13 + s14 + s23 + s24) + &
                  m**2*(15*s12 + 9*s13 + 13*s14 + 15*s23 + 15*s24)) + &
               gm**4*(44*m**6 + 3*s12**3 - 22*s13*s14**2 - 30*s14**3 - &
                  16*s13*s14*s23 - 51*s14**2*s23 - 12*s13*s23**2 - &
                  28*s14*s23**2 - 12*s23**3 + &
                  s12**2*(3*s13 - 24*s14 - s23 - 6*s24) - &
                  19*s13*s14*s24 - 72*s14**2*s24 - 4*s13*s23*s24 - &
                  67*s14*s23*s24 - 16*s23**2*s24 + 3*s13*s24**2 - &
                  54*s14*s24**2 - 16*s23*s24**2 - 12*s24**3 - &
                  2*m**4*(117*s12 + 81*s13 + 48*s14 + 89*s23 + &
                     72*s24) - &
                  s12*(57*s14**2 + 52*s14*s23 + 16*s23**2 + &
                     s13*(19*s14 + 4*s23 - 6*s24) + 78*s14*s24 + &
                     17*s23*s24 + 21*s24**2) - &
                  m**2*(48*s12**2 + 109*s14**2 + 121*s14*s23 + &
                     74*s23**2 + 180*s14*s24 + 97*s23*s24 + 63*s24**2 + &
                     s13*(5*s14 + 50*s23 + s24) + &
                     s12*(s13 + 175*s14 + 117*s23 + 111*s24))) - &
               gm**2*(80*m**8 - &
                  8*m**6*(9*s12 + 13*s13 - 5*s14 + 2*s23) + &
                  2*m**4*(18*s12**2 + 49*s14**2 + 46*s14*s23 - &
                     13*s23**2 + 41*s14*s24 + 13*s23*s24 + 8*s24**2 + &
                     26*s12*(s13 + 2*s14 + s24) + &
                     s13*(35*s14 - 5*s23 + 26*s24)) - &
                  m**2*(22*s12**3 + 61*s14**3 + 84*s14**2*s23 + &
                     49*s14*s23**2 + 28*s23**3 + 128*s14**2*s24 + &
                     131*s14*s23*s24 + 51*s23**2*s24 + 85*s14*s24**2 + &
                     45*s23*s24**2 + 18*s24**3 + &
                     2*s12**2*(6*s13 + 58*s14 + 27*s23 + 31*s24) + &
                     s13*(37*s14**2 + 35*s14*s23 + 28*s23**2 + &
                        51*s14*s24 + 37*s23*s24 + 12*s24**2) + &
                     s12*(159*s14**2 + 150*s14*s23 + 61*s23**2 + &
                        201*s14*s24 + 99*s23*s24 + 58*s24**2 + &
                        s13*(51*s14 + 37*s23 + 24*s24))) + &
                  (s12 + s14 + s24)*&
                   (6*s12**3 + &
                     s12**2*(6*s13 + 21*s14 + 29*s23 + 12*s24) + &
                     s13*(10*s14**2 + 22*s14*s23 + 16*s23**2 + &
                        19*s14*s24 + 23*s23*s24 + 6*s24**2) + &
                     s12*(15*s14**2 + 52*s14*s23 + 39*s23**2 + &
                        21*s14*s24 + 45*s23*s24 + 6*s24**2 + &
                        s13*(19*s14 + 23*s23 + 12*s24)) + &
                     s23*(15*s14**2 + 16*(s23 + s24)**2 + &
                        s14*(31*s23 + 34*s24))))))/&
           ((m**2 - s14)*(gm**2 - m**2 + s23)*&
             (gm**2 - 2*m**2 + s12 + s14 + s24)) + &
          (4*(2*gm**6*(9*m**4 - s12**2 + s14*s23 + &
                  m**2*(-5*s12 + s13 - 4*s14 - 2*s23 - 13*s24) - &
                  s12*(s13 + s14 + s23 - 2*s24) - s13*s24 + 3*s14*s24 + &
                  3*s23*s24 + 3*s24**2) + &
               4*(2*m**2 - s12 - s13 - s23)*(2*m**2 - s12 - s23 - s24)*&
                (4*m**6 - 4*m**4*(s12 + 2*s23 + s24) - &
                  s23*(s12**2 + 2*s14**2 - 2*s14*s23 + s23**2 + &
                     2*s14*s24 + s24**2 + 2*s12*(s14 + s24)) + &
                  m**2*(s12**2 + 2*s14**2 + 3*s23**2 + 6*s23*s24 + &
                     s24**2 + 2*s12*(3*s23 + s24))) + &
               gm**4*(300*m**6 - 3*s12**3 + 2*s13*s14*s23 - &
                  2*s14**2*s23 + 22*s13*s23**2 + 17*s14*s23**2 + &
                  22*s23**3 + 6*s13*s14*s24 + 6*s14**2*s24 + &
                  27*s13*s23*s24 + 17*s14*s23*s24 + 24*s23**2*s24 - &
                  3*s13*s24**2 - 6*s14*s24**2 + 4*s23*s24**2 - &
                  12*s24**3 - s12**2*(3*s13 + s14 - 24*s23 + 18*s24) - &
                  2*m**4*(6*s12 - 47*s13 - 46*s14 + 60*s23 + 79*s24) + &
                  s12*(6*s13*s14 + 2*s14**2 + 27*s13*s23 + &
                     20*s14*s23 + 49*s23**2 - 6*s13*s24 - 7*s14*s24 + &
                     28*s23*s24 - 27*s24**2) - &
                  m**2*(60*s12**2 + 8*s13*s14 + 4*s14**2 + 93*s13*s23 + &
                     113*s14*s23 + 43*s23**2 + 47*s13*s24 + 7*s14*s24 + &
                     20*s23*s24 - 3*s24**2 + &
                     s12*(47*s13 + 55*s14 + 113*s23 + 57*s24))) - &
               gm**2*(32*m**8 + 6*s12**4 - 4*s13*s14**2*s23 - &
                  6*s14**3*s23 + 4*s13*s14*s23**2 + 11*s14**2*s23**2 + &
                  6*s13*s23**3 - s14*s23**3 + 6*s23**4 - &
                  6*s13*s14**2*s24 + 7*s13*s14*s23*s24 + &
                  3*s14**2*s23*s24 + 7*s13*s23**2*s24 + &
                  13*s14*s23**2*s24 + 10*s23**3*s24 + 3*s13*s14*s24**2 + &
                  5*s13*s23*s24**2 + 20*s14*s23*s24**2 + &
                  12*s23**2*s24**2 + 6*s13*s24**3 + 16*s23*s24**3 - &
                  4*m**6*(20*s12 + 19*s13 - 9*s14 + 49*s23 + 9*s24) + &
                  s12**3*(6*s13 + 5*s14 + 11*s23 + 18*s24) + &
                  s12**2*(-7*s14**2 + 19*s14*s23 + 12*s23**2 + &
                     10*s14*s24 + 38*s23*s24 + 18*s24**2 + &
                     s13*(3*s14 + 5*s23 + 18*s24)) + &
                  2*m**4*(40*s12**2 + 17*s14**2 - 47*s14*s23 + &
                     118*s23**2 - 2*s14*s24 + 81*s23*s24 + 23*s24**2 + &
                     s13*(-3*s14 + 60*s23 + 33*s24) + &
                     s12*(33*s13 + 9*s14 + 95*s23 + 63*s24)) + &
                  s12*(-6*s14**3 + 13*s23**3 + s14**2*(4*s23 - 7*s24) + &
                     24*s23**2*s24 + 43*s23*s24**2 + 6*s24**3 + &
                     s14*(13*s23**2 + 39*s23*s24 + 5*s24**2) + &
                     s13*(-6*s14**2 + 7*s14*s23 + 7*s23**2 + &
                        6*s14*s24 + 10*s23*s24 + 18*s24**2)) - &
                  m**2*(36*s12**3 - 6*s14**3 + 27*s14**2*s23 - &
                     34*s14*s23**2 + 85*s23**3 + 21*s14**2*s24 - &
                     5*s14*s23*s24 + 106*s23**2*s24 + 9*s14*s24**2 + &
                     79*s23*s24**2 + 18*s24**3 + &
                     s12**2*(26*s13 + 28*s14 + 68*s23 + 90*s24) + &
                     s13*(-10*s14**2 + 7*s14*s23 + 53*s23**2 + &
                        s14*s24 + 55*s23*s24 + 26*s24**2) + &
                     s12*(-3*s14**2 + 20*s14*s23 + 115*s23**2 + &
                        37*s14*s24 + 147*s23*s24 + 72*s24**2 + &
                        s13*(s14 + 55*s23 + 52*s24))))))/&
           ((m**2 - s14)*(gm**2 - m**2 + s23)*&
             (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
          (16*(4*(2*m**4 + s14*(s12 + s13 + s14) - &
                  m**2*(s12 + s13 + 5*s14 - 2*s23))*&
                (-2*m**2 + s12 + s13 + s23)**2*&
                (2*m**2 - s12 - s14 - s24) + &
               2*gm**6*(3*s14*(s12 + s13 + s14 + s23 + s24) + &
                  m**2*(s12 + 3*s13 + 7*s14 + s23 + s24)) + &
               gm**4*(-132*m**6 + s12**3 - 6*s13**2*s14 - &
                  14*s13*s14**2 - 12*s14**3 - 12*s13**2*s23 - &
                  35*s13*s14*s23 - 26*s14**2*s23 - 24*s13*s23**2 - &
                  29*s14*s23**2 - 12*s23**3 + &
                  m**4*(-18*s12 + 52*s13 + 154*s14 + 76*s23 - 46*s24) + &
                  s13**2*s24 - 2*s13*s14*s24 - 12*s14**2*s24 - &
                  11*s13*s23*s24 - 14*s14*s23*s24 - 12*s23**2*s24 + &
                  s12**2*(2*s13 - s14 - 10*s23 + s24) + &
                  s12*(s13**2 - 14*s14**2 - 2*s14*(15*s23 + s24) + &
                     s13*(-7*s14 - 22*s23 + 2*s24) - &
                     s23*(23*s23 + 11*s24)) + &
                  m**2*(20*s12**2 + 11*s13**2 + 66*s14**2 + &
                     109*s14*s23 + 29*s23**2 + 90*s14*s24 + &
                     53*s23*s24 + s13*(93*s14 + 32*s23 + 17*s24) + &
                     s12*(31*s13 + 93*s14 + 47*s23 + 17*s24))) + &
               gm**2*(304*m**8 - &
                  8*m**6*(27*s12 + 32*s13 + 6*s14 - 7*s23 - 9*s24) - &
                  2*m**4*(10*s12**2 - 24*s13**2 + 79*s14**2 + &
                     94*s14*s23 + 45*s23**2 + 87*s14*s24 + 47*s23*s24 + &
                     s13*(73*s14 + 5*s23 + 50*s24) + &
                     s12*(-14*s13 + 104*s14 + 76*s23 + 50*s24)) - &
                  (s12 + s13 + s23)*&
                   (2*s12**3 + 16*s14**3 + 23*s14**2*s23 + &
                     11*s14*s23**2 + 16*s14**2*s24 + 14*s14*s23*s24 + &
                     6*s23**2*s24 + 2*s13**2*(6*s14 + s24) + &
                     s12**2*(4*s13 + 17*s14 + 13*s23 + 2*s24) + &
                     s13*(24*s14**2 + 26*s14*s23 + 15*s14*s24 + &
                        11*s23*s24) + &
                     s12*(2*s13**2 + 31*s14**2 + 11*s23*(s23 + s24) + &
                        s13*(29*s14 + 13*s23 + 4*s24) + &
                        3*s14*(12*s23 + 5*s24))) + &
                  m**2*(30*s12**3 + 2*s13**3 + 28*s14**3 + &
                     141*s14**2*s23 + 108*s14*s23**2 + s23**3 + &
                     28*s14**2*s24 + 127*s14*s23*s24 + 33*s23**2*s24 + &
                     2*s12**2*(31*s13 + 75*s14 + 46*s23 + 18*s24) + &
                     s13**2*(97*s14 - 7*s23 + 36*s24) + &
                     s13*(143*s14**2 + 207*s14*s23 - 8*s23**2 + &
                        129*s14*s24 + 71*s23*s24) + &
                     s12*(34*s13**2 + 153*s14**2 + 270*s14*s23 + &
                        67*s23**2 + 129*s14*s24 + 71*s23*s24 + &
                        s13*(247*s14 + 85*s23 + 72*s24))))))/&
           ((m**2 - s14)*(gm**2 - m**2 + s23)*&
             (gm**2 - 2*m**2 + s12 + s13 + s23)) + &
          (4*(-2*gm**6*(61*m**6 + &
                  m**4*(-29*s12 - 4*s13 + 24*s14 + 31*s23 - 32*s24) - &
                  m**2*(29*s12**2 + 17*s14**2 + 30*s14*s23 + &
                     4*s13*(s14 - s24) + 18*s14*s24 + 30*s23*s24 + &
                     30*s24**2 + &
                     s12*(-4*s13 + 24*s14 + 29*s23 + 59*s24)) + &
                  s14*(7*s12**2 + s14*(5*s23 + 12*s24) + &
                     s12*(4*s13 + 7*s14 + 7*s23 + 19*s24) + &
                     4*s24*(s13 + 3*(s23 + s24)))) - &
               2*(s14 - s23)*(-2*m**2 + s12 + s23 + s24)*&
                (2*m**6*(2*s12 + 3*s13 + 7*s14 - 9*s23 - s24) - &
                  m**4*(4*s12**2 - 13*s14**2 + 11*s14*s23 - 6*s23**2 + &
                     16*s14*s24 - 21*s23*s24 - s24**2 + &
                     s12*(5*s13 + 23*s14 - 19*s23 + 3*s24) + &
                     s13*(5*s14 + 4*s23 + 5*s24)) + &
                  m**2*(s12**3 - 3*s14**3 - 14*s14**2*s23 + &
                     16*s14*s23**2 - 4*s23**3 + 2*s14**2*s24 - &
                     6*s14*s23*s24 + 3*s14*s24**2 - 4*s23*s24**2 + &
                     s12**2*(s13 + 10*s14 - 5*s23 + 2*s24) + &
                     s13*(-s14**2 + 2*s14*s23 + 2*s23**2 + &
                        6*s14*s24 + s24**2) + &
                     s12*(4*s14**2 - 7*s14*s23 + 2*s23**2 + &
                        13*s14*s24 - 9*s23*s24 + s24**2 + &
                        2*s13*(3*s14 + s24))) - &
                  s14*(s12**3 - s14*s23*(3*s14 - 2*s23 + s24) + &
                     s12**2*(s13 + 2*s14 - s23 + 2*s24) + &
                     s13*(-2*s14*s23 + 2*s23**2 + s14*s24 + s24**2) + &
                     s12*(s14**2 - 4*s14*s23 + 2*s23**2 + 2*s14*s24 - &
                        s23*s24 + s24**2 + s13*(s14 + 2*s24)))) + &
               gm**4*(6*m**8 - 12*s12**4 - 24*s13*s14**2*s23 - &
                  25*s14**3*s23 + 8*s13*s14*s23**2 - 9*s14**2*s23**2 + &
                  9*s14*s23**3 - 35*s13*s14**2*s24 - 12*s14**3*s24 - &
                  13*s13*s14*s23*s24 - 23*s14**2*s23*s24 - &
                  3*s13*s23**2*s24 - 3*s14*s23**2*s24 - &
                  37*s13*s14*s24**2 - 12*s14**2*s24**2 - &
                  9*s13*s23*s24**2 - 6*s14*s23*s24**2 - 12*s13*s24**3 - &
                  s12**3*(12*s13 + 13*s14 + 21*s23 + 36*s24) + &
                  m**6*(190*s12 + 105*s13 + 263*s14 + 103*s23 + &
                     85*s24) - &
                  m**4*(71*s12**2 - 46*s14**2 + 239*s14*s23 + &
                     28*s23**2 + 94*s14*s24 + 114*s23*s24 + &
                     28*s24**2 + s13*(52*s14 + 28*s23 + 31*s24) + &
                     s12*(31*s13 + 107*s14 + 149*s23 + 99*s24)) - &
                  s12*(29*s14**3 + 7*s14**2*(5*s23 + 6*s24) + &
                     s14*(-7*s23**2 + 19*s23*s24 + 13*s24**2) + &
                     s13*(35*s14**2 + 13*s14*s23 + 3*s23**2 + &
                        74*s14*s24 + 18*s23*s24 + 36*s24**2) + &
                     3*(s23**3 + 4*s23**2*s24 + 7*s23*s24**2 + &
                        4*s24**3)) - &
                  s12**2*(30*s14**2 + 13*s14*(s23 + 2*s24) + &
                     6*(2*s23**2 + 7*s23*s24 + 6*s24**2) + &
                     s13*(37*s14 + 9*(s23 + 4*s24))) + &
                  m**2*(-34*s12**3 + 37*s14**3 + 6*s14**2*s23 - &
                     8*s14*s23**2 + 3*s23**3 + &
                     2*s12**2*(7*s13 + 43*s14 - 4*s23 - 52*s24) - &
                     8*s14**2*s24 + 47*s14*s23*s24 + 30*s23**2*s24 + &
                     31*s14*s24**2 - 21*s23*s24**2 - 36*s24**3 + &
                     s13*(59*s14**2 + 7*s14*s23 - 19*s23**2 + &
                        87*s14*s24 - 17*s23*s24 + 14*s24**2) + &
                     s12*(41*s14**2 + 28*s14*s23 + 21*s23**2 + &
                        117*s14*s24 - 29*s23*s24 - 106*s24**2 + &
                        s13*(87*s14 - 17*s23 + 28*s24)))) + &
               gm**2*(96*m**10 + 6*s13*s14**3*s23 + 2*s14**4*s23 - &
                  12*s13*s14**2*s23**2 - 10*s14**3*s23**2 + &
                  2*s13*s14*s23**3 + 18*s14**2*s23**3 - 6*s14*s23**4 - &
                  2*s12**4*(s14 + 3*s23) + 10*s13*s14**3*s24 + &
                  6*s14**4*s24 - 10*s13*s14**2*s23*s24 - &
                  7*s14**3*s23*s24 - 18*s13*s14*s23**2*s24 + &
                  10*s14**2*s23**2*s24 - 3*s14*s23**3*s24 + &
                  5*s13*s14**2*s24**2 + 6*s14**3*s24**2 - &
                  24*s13*s14*s23*s24**2 - 10*s14**2*s23*s24**2 - &
                  3*s13*s23**2*s24**2 + 6*s14*s23**2*s24**2 - &
                  2*s13*s14*s24**3 - 6*s13*s23*s24**3 - &
                  4*m**8*(18*s12 + s13 - 11*s14 + 39*s23 + 17*s24) - &
                  s12**3*(9*s14**2 + 2*s13*(s14 + 3*s23) + 6*s14*s24 + &
                     9*s23*(s23 + 2*s24)) + &
                  2*m**6*(8*s12**2 - 50*s14**2 + 99*s14*s23 - &
                     5*s23**2 - 11*s14*s24 - 10*s23*s24 + s24**2 + &
                     s13*(16*s14 + 25*s23 + 7*s24) + &
                     s12*(7*s13 - 9*s14 + 21*s23 + 9*s24)) + &
                  s12**2*(3*s14**3 - 3*s14**2*(s23 + 6*s24) - &
                     s14*(5*s23**2 + 6*s24**2) - &
                     3*s23*(s23**2 + 6*s23*s24 + 6*s24**2) + &
                     s13*(5*s14**2 - 6*s14*(4*s23 + s24) - &
                        3*s23*(s23 + 6*s24))) - &
                  m**4*(10*s12**3 - 29*s14**3 + 15*s14**2*s23 + &
                     39*s14*s23**2 + 11*s23**3 - 81*s14**2*s24 + &
                     176*s14*s23*s24 - 121*s23**2*s24 + 56*s14*s24**2 - &
                     134*s23*s24**2 - 4*s24**3 + &
                     2*s12**2*(7*s13 + 55*s14 - 43*s23 + 8*s24) + &
                     s13*(-15*s14**2 + 70*s14*s23 + 45*s23**2 + &
                        52*s14*s24 + 66*s23*s24 + 14*s24**2) + &
                     2*s12*(-38*s14**2 + 72*s14*s23 - 13*s23**2 + &
                        83*s14*s24 - 110*s23*s24 + s24**2 + &
                        s13*(26*s14 + 33*s23 + 14*s24))) + &
                  s12*(10*s14**4 + s14**3*(-15*s23 + 9*s24) + &
                     s14**2*(16*s23**2 - 13*s23*s24 - 9*s24**2) - &
                     3*s23*s24*(s23**2 + 3*s23*s24 + 2*s24**2) + &
                     s14*(-5*s23**3 + s23**2*s24 - 2*s24**3) + &
                     2*s13*(5*s14**3 - 5*s14**2*(s23 - s24) - &
                        3*s23*s24*(s23 + 3*s24) - &
                        3*s14*(3*s23**2 + 8*s23*s24 + s24**2))) + &
                  m**2*(4*s12**4 - 8*s14**4 + 25*s14**3*s23 - &
                     32*s14**2*s23**2 - 9*s14*s23**3 + 20*s23**4 - &
                     43*s14**3*s24 + 49*s14**2*s23*s24 - &
                     3*s14*s23**2*s24 - 9*s23**3*s24 - s14**2*s24**2 + &
                     40*s14*s23*s24**2 - 61*s23**2*s24**2 + &
                     26*s14*s24**3 - 42*s23*s24**3 + &
                     2*s12**3*(2*s13 + 29*s14 - 11*s23 + 6*s24) + &
                     s12**2*(19*s14**2 + 38*s14*s23 - 9*s23**2 + &
                        142*s14*s24 - 86*s23*s24 + 12*s24**2 + &
                        4*s13*(6*s14 + 8*s23 + 3*s24)) + &
                     2*s13*(-8*s14**3 + 6*s23**3 + &
                        s14**2*(12*s23 - 11*s24) + 13*s23**2*s24 + &
                        16*s23*s24**2 + 2*s24**3 + &
                        3*s14*(3*s23**2 + 15*s23*s24 + 4*s24**2)) + &
                     2*s12*(-24*s14**3 + 11*s23**3 - 35*s23**2*s24 - &
                        53*s23*s24**2 + 2*s24**3 + &
                        9*s14**2*(3*s23 + s24) + &
                        s13*(-11*s14**2 + 45*s14*s23 + 13*s23**2 + &
                         24*s14*s24 + 32*s23*s24 + 6*s24**2) + &
                        s14*(-8*s23**2 + 39*s23*s24 + 55*s24**2))))))/&
           ((m**2 - s14)**2*(gm**2 - m**2 + s23)*&
             (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
          (16*(2*(-2*m**2 + s12 + s13 + s23)**2*&
                (-2*m**2 + s12 + s14 + s24)**2*&
                (10*m**4 - s12**2 - s14*s23 - s13*s24 - &
                  s12*(s13 + s14 + s23 + s24) + &
                  m**2*(4*s12 - s13 - 3*s14 + s23 + 3*s24)) - &
               gm**4*(736*m**8 + 47*s12**4 + 24*s13**3*s14 + &
                  72*s13**2*s14**2 + 48*s13*s14**3 + &
                  96*s13**2*s14*s23 + 173*s13*s14**2*s23 + &
                  57*s14**3*s23 + 129*s13*s14*s23**2 + &
                  113*s14**2*s23**2 + 57*s14*s23**3 - &
                  16*m**6*(26*s12 + 19*s13 + 13*s14 - 13*s23 - 5*s24) + &
                  18*s13**3*s24 + 119*s13**2*s14*s24 + &
                  117*s13*s14**2*s24 + 75*s13**2*s23*s24 + &
                  280*s13*s14*s23*s24 + 141*s14**2*s23*s24 + &
                  105*s13*s23**2*s24 + 185*s14*s23**2*s24 + &
                  48*s23**3*s24 + 59*s13**2*s24**2 + &
                  99*s13*s14*s24**2 + 131*s13*s23*s24**2 + &
                  120*s14*s23*s24**2 + 84*s23**2*s24**2 + &
                  30*s13*s24**3 + 36*s23*s24**3 + &
                  s12**3*(112*s13 + 151*s14 + 151*s23 + 124*s24) + &
                  s12**2*(83*s13**2 + 161*s14**2 + 161*s23**2 + &
                     312*s23*s24 + 107*s24**2 + &
                     4*s13*(72*s14 + 61*s23 + 62*s24) + &
                     4*s14*(92*s23 + 67*s24)) - &
                  m**4*(780*s12**2 + 299*s13**2 + 241*s14**2 + &
                     594*s14*s23 + 265*s23**2 + 688*s14*s24 + &
                     540*s23*s24 + 331*s24**2 + &
                     4*s12*(256*s13 + 261*s14 + 269*s23 + 284*s24) + &
                     s13*(740*s14 + 680*s23 + 726*s24)) + &
                  m**2*(18*s13**3 - 35*s14**3 + s14**2*s23 - &
                     15*s14*s23**2 - 51*s23**3 + &
                     2*s12**2*(21*s13 - 37*s14 - 25*s23 - 67*s24) - &
                     180*s14**2*s24 - 152*s14*s23*s24 - &
                     38*s23**2*s24 - 219*s14*s24**2 - 83*s23*s24**2 - &
                     74*s24**3 + s13**2*(85*s14 - 51*s23 + 52*s24) + &
                     s12*(64*s13**2 - 105*s14**2 - 90*s14*s23 - &
                        101*s23**2 + s13*(29*s14 - 65*s23 - 64*s24) - &
                        341*s14*s24 - 175*s23*s24 - 208*s24**2) + &
                     2*s13*(3*s14**2 - 60*s23**2 - 76*s14*s24 - &
                        28*s23*s24 - 44*s24**2)) + &
                  s12*(18*s13**3 + 57*s14**3 + 57*s23**3 + &
                     236*s23**2*s24 + 197*s23*s24**2 + 30*s24**3 + &
                     2*s14**2*(137*s23 + 72*s24) + &
                     s13**2*(161*s14 + 93*s23 + 142*s24) + &
                     s14*(274*s23**2 + 462*s23*s24 + 117*s24**2) + &
                     s13*(224*s14**2 + 426*s14*s23 + 132*s23**2 + &
                        381*s14*s24 + 369*s23*s24 + 166*s24**2))) + &
               gm**6*(92*m**6 - &
                  2*m**4*(97*s12 + 127*s13 + 99*s14 + 101*s23 + &
                     57*s24) - &
                  m**2*(202*s12**2 + 123*s13**2 + 193*s14**2 + &
                     402*s14*s23 + 213*s23**2 + 332*s14*s24 + &
                     340*s23*s24 + 127*s24**2 + &
                     s13*(320*s14 + 348*s23 + 294*s24) + &
                     s12*(339*s13 + 397*s14 + 415*s23 + 329*s24)) - &
                  3*(13*s12**3 + 16*s14**3 + 45*s14**2*s23 + &
                     43*s14*s23**2 + 14*s23**3 + 40*s14**2*s24 + &
                     75*s14*s23*s24 + 36*s23**2*s24 + 32*s14*s24**2 + &
                     30*s23*s24**2 + 8*s24**3 + &
                     s13**2*(14*s14 + 14*s23 + 13*s24) + &
                     s12**2*(26*s13 + 42*s14 + 40*s23 + 34*s24) + &
                     s13*(30*s14**2 + 57*s14*s23 + 28*s23**2 + &
                        51*s14*s24 + 49*s23*s24 + 21*s24**2) + &
                     s12*(13*s13**2 + 45*s14**2 + 85*s14*s23 + &
                        41*s23**2 + 74*s14*s24 + 70*s23*s24 + &
                        29*s24**2 + s13*(56*s14 + 54*s23 + 47*s24)))) + &
               2*gm**2*(304*m**10 + &
                  16*m**8*(21*s12 + 7*s13 + 10*s14 + 8*s23 + 17*s24) - &
                  4*m**6*(126*s12**2 + 35*s13**2 + 48*s14**2 + &
                     86*s14*s23 + 28*s23**2 + 61*s14*s24 + 65*s23*s24 + &
                     27*s24**2 + &
                     2*s12*(59*s13 + 67*s14 + 59*s23 + 63*s24) + &
                     s13*(69*s14 + 49*s23 + 68*s24)) + &
                  2*m**4*(34*s12**3 + 5*s13**3 + 13*s14**3 + &
                     55*s14**2*s23 + 35*s14*s23**2 - 3*s23**3 - &
                     5*s14**2*s24 + 46*s14*s23*s24 + 11*s23**2*s24 - &
                     37*s14*s24**2 + s23*s24**2 - 19*s24**3 + &
                     s12**2*(50*s13 + 58*s14 + 38*s23 + 6*s24) + &
                     s13**2*(37*s14 - 5*s23 + 23*s24) + &
                     2*s12*(13*s13**2 + 49*s13*s14 + 23*s14**2 + &
                        57*s14*s23 + s23**2 + 25*s13*s24 - &
                        12*s14*s24 + 17*s23*s24 - 21*s24**2) + &
                     s13*(47*s14**2 + 62*s14*s23 - 13*s23**2 + &
                        40*s14*s24 + 24*s23*s24 + 3*s24**2)) - &
                  (s12 + s13 + s23)*(s12 + s14 + s24)*&
                   (8*s12**3 + &
                     3*s12**2*(5*s13 + 6*s14 + 6*s23 + 5*s24) + &
                     s13**2*(6*s14 + 7*s24) + &
                     s13*(6*s14**2 + 13*s14*s23 + 10*s14*s24 + &
                        10*s23*s24 + 7*s24**2) + &
                     s23*(10*s14**2 + 6*s24*(s23 + s24) + &
                        s14*(10*s23 + 13*s24)) + &
                     s12*(7*s13**2 + 10*s14**2 + 28*s14*s23 + &
                        10*s23**2 + 17*s14*s24 + 23*s23*s24 + &
                        7*s24**2 + s13*(23*s14 + 17*s23 + 22*s24))) + &
                  m**2*(47*s12**4 + s13**3*(5*s14 + 7*s24) + &
                     4*s12**3*(25*s13 + 27*s14 + 29*s23 + 33*s24) + &
                     s13**2*(18*s14**2 + 36*s14*s23 + 51*s14*s24 + &
                        34*s23*s24 + 37*s24**2) + &
                     s12**2*(60*s13**2 + 65*s14**2 + 200*s14*s23 + &
                        89*s23**2 + 199*s14*s24 + 243*s23*s24 + &
                        120*s24**2 + s13*(183*s14 + 163*s23 + 222*s24)) &
+ s13*(-2*s14**3 + 37*s14**2*(s23 + s24) + &
                        s24*(41*s23**2 + 71*s23*s24 + 35*s24**2) + &
                        s14*(51*s23**2 + 100*s23*s24 + 74*s24**2)) + &
                     s23*(4*s14**3 + s14**2*(23*s23 + 47*s24) + &
                        s24*(14*s23**2 + 38*s23*s24 + 33*s24**2) + &
                        s14*(20*s23**2 + 57*s23*s24 + 76*s24**2)) + &
                     s12*(7*s13**3 + 4*s14**3 + 20*s23**3 + &
                        121*s23**2*s24 + 160*s23*s24**2 + 35*s24**3 + &
                        11*s14**2*(8*s23 + 5*s24) + &
                        s13**2*(80*s14 + 46*s23 + 97*s24) + &
                        2*s14*(56*s23**2 + 126*s23*s24 + 43*s24**2) + &
                        s13*(77*s14**2 + 196*s14*s23 + 59*s23**2 + &
                         238*s14*s24 + 222*s23*s24 + 157*s24**2))))))/&
           ((m**2 - s14)*(gm**2 - m**2 + s23)*&
             (gm**2 - 2*m**2 + s12 + s13 + s23)*&
             (gm**2 - 2*m**2 + s12 + s14 + s24)) + &
          (4*(4*(2*m**2 - s12 - s23 - s24)*&
                (-2*m**2 + s12 + s14 + s24)**2*&
                (6*m**6 + m**4*(-9*s12 + s13 + 7*s14 - 2*s23 - 8*s24) + &
                  s14*(-s12**2 + (s13 + s14)*s23 - &
                     s12*(s14 - s23 + s24)) + &
                  m**2*(3*s12**2 - s14**2 - 7*s14*s23 + 2*s23**2 - &
                     s13*(s14 + s23) + 2*s24**2 + &
                     s12*(2*s14 - s23 + 5*s24))) - &
               2*gm**6*(5*m**6 - 3*s13*s14*s23 + &
                  m**4*(-3*s13 - 17*s14 + 5*s23 + 2*s24) + &
                  m**2*(2*s12*(s14 - 3*s23) + 3*s13*(s14 + s23) + &
                     s23*(17*s14 - 6*(s23 + s24)))) + &
               gm**4*(952*m**8 - &
                  2*m**6*(358*s12 + 49*s13 - 25*s14 + 113*s23 + &
                     343*s24) + &
                  m**4*(-36*s12**2 - 61*s14**2 - 225*s14*s23 - &
                     56*s23**2 + &
                     s12*(115*s13 + 65*s14 + 29*s23 - 89*s24) + &
                     24*s14*s24 - 7*s23*s24 - 53*s24**2 + &
                     5*s13*(25*s14 + 2*s23 + 23*s24)) + &
                  m**2*(43*s12**3 + 7*s14**3 + 58*s14**2*s23 + &
                     44*s14*s23**2 - 24*s23**3 + 10*s14**2*s24 + &
                     62*s14*s23*s24 + 8*s23**2*s24 + 45*s14*s24**2 + &
                     48*s23*s24**2 + 44*s24**3 + &
                     s12**2*(-23*s13 + 26*s14 + 33*s23 + 130*s24) - &
                     s13*(27*s14**2 + 14*s14*s23 - 12*s23**2 + &
                        138*s14*s24 + 16*s23*s24 + 23*s24**2) + &
                     s12*(-2*s14**2 + 11*s14*s23 + 8*s23**2 + &
                        71*s14*s24 + 81*s23*s24 + 131*s24**2 - &
                        2*s13*(69*s14 + 8*s23 + 23*s24))) + &
                  s14*(s12**3 - 7*s14*s23*(s14 + s24) + &
                     s12**2*(23*s13 + 2*s14 + 15*s23 + 2*s24) + &
                     s13*(4*s14*s23 - 12*s23**2 + 23*s14*s24 + &
                        16*s23*s24 + 23*s24**2) + &
                     s12*(s14**2 + 8*s14*s23 + 2*s14*s24 + 15*s23*s24 + &
                        s24**2 + s13*(23*s14 + 16*s23 + 46*s24)))) + &
               gm**2*(-512*m**10 + &
                  4*m**8*(342*s12 + 11*s13 + 145*s14 + 13*s23 + &
                     287*s24) - &
                  2*m**6*(550*s12**2 + 85*s14**2 - 44*s14*s23 + &
                     9*s23**2 + 483*s14*s24 + 135*s23*s24 + &
                     404*s24**2 + s13*(39*s14 - 21*s23 + 46*s24) + &
                     2*s12*(23*s13 + 336*s14 + 92*s23 + 477*s24)) + &
                  s14*(s12 + s14 + s24)*&
                   (17*s12**3 + &
                     s12**2*(11*s13 + 21*s14 + 18*s23 + 34*s24) + &
                     s14*(-4*s14*s23 - 7*s23**2 + 6*s14*s24 + &
                        s23*s24 + 6*s24**2) + &
                     s13*(-2*s14*s23 - 16*s23**2 + 8*s14*s24 - &
                        3*s23*s24 + 11*s24**2) + &
                     s12*(4*s14**2 + 14*s14*s23 - 7*s23**2 + &
                        27*s14*s24 + 18*s23*s24 + 17*s24**2 + &
                        s13*(8*s14 - 3*s23 + 22*s24))) + &
                  m**4*(330*s12**3 + 32*s14**3 - 167*s14**2*s23 - &
                     83*s14*s23**2 + 56*s23**3 + 309*s14**2*s24 - &
                     21*s14*s23*s24 + 69*s23**2*s24 + 434*s14*s24**2 + &
                     166*s23*s24**2 + 205*s24**3 + &
                     s12**2*(57*s13 + 875*s14 + 247*s23 + 865*s24) + &
                     s13*(40*s14**2 - 71*s14*s23 - 28*s23**2 + &
                        153*s14*s24 - 31*s23*s24 + 57*s24**2) + &
                     s12*(487*s14**2 + 148*s14*s23 + 59*s23**2 + &
                        1309*s14*s24 + 413*s23*s24 + 740*s24**2 + &
                        s13*(153*s14 - 31*s23 + 114*s24))) - &
                  m**2*(29*s12**4 + 2*s14**4 - 35*s14**3*s23 - &
                     80*s14**2*s23**2 + 32*s14*s23**3 + 69*s14**3*s24 - &
                     50*s14**2*s23*s24 - 46*s14*s23**2*s24 + &
                     32*s23**3*s24 + 102*s14**2*s24**2 - &
                     5*s14*s23*s24**2 + 24*s23**2*s24**2 + &
                     51*s14*s24**3 + 20*s23*s24**3 + 12*s24**4 + &
                     s12**3*(11*s13 + 208*s14 + 38*s23 + 99*s24) + &
                     s12**2*(264*s14**2 + 107*s14*s23 + 17*s23**2 + &
                        467*s14*s24 + 96*s23*s24 + 123*s24**2 + &
                        s13*(76*s14 - 3*s23 + 33*s24)) + &
                     s13*(6*s14**3 + s14**2*(-31*s23 + 69*s24) - &
                        4*s14*(11*s23**2 + 9*s23*s24 - 19*s24**2) + &
                        s24*(-16*s23**2 - 3*s23*s24 + 11*s24**2)) + &
                     s12*(87*s14**3 + 32*s23**3 + 41*s23**2*s24 + &
                        78*s23*s24**2 + 65*s24**3 + &
                        s14**2*(34*s23 + 366*s24) + &
                        s13*(69*s14**2 - 36*s14*s23 - 16*s23**2 + &
                         152*s14*s24 - 6*s23*s24 + 33*s24**2) + &
                        s14*(-63*s23**2 + 102*s23*s24 + 310*s24**2))))))/&
           ((m**2 - s14)**2*(gm**2 - 2*m**2 + s12 + s14 + s24)*&
             (-gm**2 - 2*m**2 + s12 + s23 + s24)) - &
          (2*gm**6*(m**4*(15*s12 + 2*(s13 - s14 - s23 + s24)) + &
                m**2*(4*s12**2 - &
                   2*(s13*(s14 + s24) + s14*(-s14 - 2*s23 + s24)) + &
                   s12*(-5*s13 - 5*s14 + 4*(s23 + s24))) - &
                s14*(4*s12**2 + 2*s14*s23 - 2*s13*s24 + &
                   s12*(s13 + 4*(s14 + s23 + s24)))) + &
             gm**4*(456*m**8 + 21*s12**4 - 4*s13**2*s14*s23 - &
                2*s13*s14**2*s23 - 10*s14**3*s23 + 11*s13*s14*s23**2 + &
                13*s14**2*s23**2 + 8*s14*s23**3 - 8*s13**2*s14*s24 - &
                8*s14**3*s24 + 3*s13**2*s23*s24 + 24*s13*s14*s23*s24 + &
                33*s14**2*s23*s24 + 6*s13*s23**2*s24 + &
                24*s14*s23**2*s24 + 9*s13**2*s24**2 + &
                7*s13*s14*s24**2 + 16*s14**2*s24**2 + &
                24*s13*s23*s24**2 + 38*s14*s23*s24**2 + 24*s13*s24**3 + &
                24*s14*s24**3 + &
                6*s12**3*(5*s13 + 6*s14 + 8*s23 + 11*s24) - &
                2*m**6*(172*s12 + 79*s13 + 175*s14 + 83*s23 + 79*s24) + &
                2*m**4*(56*s12**2 - 24*s13**2 + 27*s14**2 + &
                   54*s14*s23 - s23**2 + 138*s14*s24 + 2*s23*s24 + &
                   7*s24**2 + s13*(7*s14 + 39*s23 + 15*s24) + &
                   s12*(-16*s13 + 180*s14 + 62*s23 + 82*s24)) + &
                s12**2*(9*s13**2 + 7*s14**2 + 76*s14*s23 + 33*s23**2 + &
                   115*s14*s24 + 96*s23*s24 + 69*s24**2 + &
                   s13*(16*s14 + 39*s23 + 84*s24)) + &
                s12*(-8*s14**3 + 6*(s23 + s24)*(s23 + 2*s24)**2 + &
                   s14**2*(28*s23 + 39*s24) + &
                   s13*(-4*s14**2 + 41*s14*s23 + 9*s23**2 + &
                      35*s14*s24 + 63*s23*s24 + 78*s24**2) + &
                   s14*(50*s23**2 + 129*s23*s24 + 103*s24**2) + &
                   s13**2*(4*s14 + 3*(s23 + 6*s24))) - &
                m**2*(68*s12**3 - 18*s14**3 + 17*s14**2*s23 + &
                   21*s14*s23**2 + 8*s23**3 + 99*s14**2*s24 + &
                   70*s14*s23*s24 + 30*s23**2*s24 + 37*s14*s24**2 + &
                   62*s23*s24**2 + 48*s24**3 - &
                   s13**2*(12*s14 + 19*s23 + 17*s24) + &
                   s12**2*(-33*s13 + 83*s14 + 109*s23 + 209*s24) + &
                   s12*(-5*s13**2 + 85*s14**2 + 136*s14*s23 + &
                      55*s23**2 + 2*s13*(46*s14 - 11*s23 - 6*s24) + &
                      234*s14*s24 + 216*s23*s24 + 189*s24**2) + &
                   s13*(-2*s14**2 + (s23 - 3*s24)**2 + &
                      s14*(6*s23 + 50*s24)))) - &
             4*(2*m**2 - s12 - s13 - s14)*(2*m**2 - s12 - s23 - s24)*&
              (4*m**8 + 2*m**6*(2*s12 - s13 - 11*s14 - 9*s23 + s24) + &
                m**4*(-7*s12**2 + s13**2 + 8*s14**2 + 31*s14*s23 + &
                   6*s23**2 + s12*(-3*s13 + 17*s14 + 13*s23 - 7*s24) + &
                   s13*(15*s14 + 4*s23 - 3*s24) + 8*s14*s24 + &
                   11*s23*s24 - s24**2) + &
                m**2*(2*s12**3 - 2*s14**3 - 7*s14**2*s23 - &
                   6*s14*s23**2 - 2*s23**3 - s13**2*(s14 + s23) - &
                   2*s14**2*s24 - 14*s14*s23*s24 - s14*s24**2 - &
                   2*s23*s24**2 + &
                   s12**2*(2*s13 - 3*s14 - 2*s23 + 3*s24) - &
                   s12*(s14**2 + 23*s14*s23 + &
                      s13*(5*s14 + 2*s23 - 3*s24) + 6*s14*s24 + &
                      3*s23*s24 - s24**2) - &
                   s13*(s14**2 - s24**2 + 6*s14*(2*s23 + s24))) + &
                s14*(s13**2*s23 + s12**2*(2*s23 + s24) + &
                   s12*(s13 + s14 + s23 + s24)*(2*s23 + s24) + &
                   s13*(2*s23**2 + s24*(s14 + s24)) + &
                   s23*(2*s14**2 + s14*(-2*s23 + 3*s24) + &
                      2*(s23**2 + s24**2)))) + &
             gm**2*(304*m**10 + 6*s12**5 + 4*s13**3*s14*s23 + &
                6*s13**2*s14**2*s23 + 9*s13*s14**3*s23 + s14**4*s23 + &
                6*s13**2*s14*s23**2 + s13*s14**2*s23**2 + &
                2*s14**3*s23**2 + 12*s14**2*s23**3 - 5*s14*s23**4 + &
                2*s13**3*s14*s24 - 3*s13**2*s14**2*s24 + &
                7*s13*s14**3*s24 + 6*s14**4*s24 - 3*s13**2*s14*s23*s24 - &
                19*s13*s14**2*s23*s24 - 12*s14**3*s23*s24 - &
                5*s13*s14*s23**2*s24 + 19*s14**2*s23**2*s24 + &
                3*s13*s23**3*s24 + 7*s14*s23**3*s24 - &
                11*s13**2*s14*s24**2 - 18*s13*s14**2*s24**2 - &
                10*s14**3*s24**2 + 3*s13**2*s23*s24**2 - &
                17*s13*s14*s23*s24**2 - 2*s14**2*s23*s24**2 + &
                9*s13*s23**2*s24**2 + 22*s14*s23**2*s24**2 + &
                6*s13**2*s24**3 - 16*s13*s14*s24**3 - 16*s14**2*s24**3 + &
                12*s13*s23*s24**3 + 16*s14*s23*s24**3 + &
                3*s12**4*(4*s13 + 3*s14 + 7*s23 + 6*s24) - &
                16*m**8*(29*s12 + 17*s13 + 14*s14 - 4*s23 + 16*s24) + &
                2*s12**3*(3*s13**2 + 3*s14**2 + 29*s14*s23 + &
                   12*s23**2 + 2*s14*s24 + 27*s23*s24 + 9*s24**2 + &
                   s13*(11*s14 + 12*s23 + 18*s24)) + &
                2*m**6*(126*s12**2 + 7*s13**2 - 11*s14**2 - &
                   52*s14*s23 - 115*s23**2 + 146*s14*s24 - 68*s23*s24 + &
                   31*s24**2 + 2*s13*(26*s14 + 9*s23 + 52*s24) + &
                   2*s12*(31*s13 - 39*s14 - 99*s23 + 79*s24)) + &
                2*m**4*(-16*s12**3 + 3*s13**3 + 20*s14**3 + &
                   36*s14**2*s23 + 99*s14*s23**2 + 27*s23**3 + &
                   s12**2*(49*s13 + 165*s14 + 201*s23 - 41*s24) - &
                   46*s14**2*s24 + 54*s14*s23*s24 + 65*s23**2*s24 - &
                   69*s14*s24**2 + 43*s23*s24**2 - 7*s24**3 + &
                   4*s13**2*(4*s14 + 4*s23 + s24) + &
                   s13*(25*s14**2 - 4*s14*s23 + 46*s23**2 - &
                      110*s14*s24 - 2*s23*s24 - 8*s24**2) + &
                   s12*(35*s13**2 + 163*s14**2 + 218*s14*s23 + &
                      231*s23**2 - 92*s14*s24 + 212*s23*s24 - &
                      31*s24**2 + 2*s13*(83*s14 + 35*s23 + 6*s24))) + &
                s12**2*(12*s14**3 + 12*s23**3 + &
                   s14**2*(34*s23 - 22*s24) + 45*s23**2*s24 + &
                   45*s23*s24**2 + 6*s24**3 + &
                   3*s13**2*(5*s14 + s23 + 6*s24) + &
                   s14*(62*s23**2 + 83*s23*s24 - 21*s24**2) + &
                   3*s13*(7*s14**2 + s14*(19*s23 + 2*s24) + &
                      4*(s23**2 + 5*s23*s24 + 3*s24**2))) - &
                m**2*(20*s12**4 + 7*s14**4 + 17*s14**3*s23 + &
                   52*s14**2*s23**2 + 41*s14*s23**3 - 5*s23**4 + &
                   3*s14**3*s24 - 11*s14**2*s23*s24 + &
                   118*s14*s23**2*s24 + 10*s23**3*s24 - &
                   70*s14**2*s24**2 + 53*s14*s23*s24**2 + &
                   31*s23**2*s24**2 - 40*s14*s24**3 + 28*s23*s24**3 + &
                   2*s13**3*(3*s14 + 2*s23 + s24) + &
                   2*s12**3*(35*s13 + 58*s14 + 76*s23 + 21*s24) + &
                   s13**2*(3*s14**2 + 45*s14*s23 + 16*s23**2 - &
                      21*s14*s24 + 21*s23*s24 + 26*s24**2) + &
                   s12**2*(52*s13**2 + 141*s14**2 + 350*s14*s23 + &
                      193*s23**2 - 5*s14*s24 + 265*s23*s24 + &
                      22*s24**2 + s13*(215*s14 + 133*s23 + 118*s24)) + &
                   s13*(16*s14**3 + s14**2*(46*s23 - 32*s24) + &
                      s14*(s23**2 - 76*s23*s24 - 87*s24**2) + &
                      s23*(25*s23**2 + 26*s23*s24 + 17*s24**2)) + &
                   s12*(2*s13**3 + 85*s14**3 + &
                      3*s14**2*(53*s23 - 2*s24) + &
                      s13**2*(51*s14 + 47*s23 + 78*s24) + &
                      s14*(215*s23**2 + 204*s23*s24 - 161*s24**2) + &
                      2*s13*(51*s14**2 + 114*s14*s23 + 42*s23**2 + &
                        31*s14*s24 + 61*s23*s24 + 24*s24**2) + &
                      s23*(89*s23**2 + 188*s23*s24 + 147*s24**2))) + &
                s12*(2*s13**3*s14 + 9*s14**4 + s14**3*(6*s23 + s24) + &
                   2*s14**2*(16*s23**2 + 6*s23*s24 - 23*s24**2) + &
                   s14*(16*s23**3 + 61*s23**2*s24 + 47*s23*s24**2 - &
                      16*s24**3) + &
                   3*s23*(s23**3 + 4*s23**2*s24 + 7*s23*s24**2 + &
                      4*s24**3) + &
                   s13**2*(7*s14**2 + 6*s24*(s23 + 3*s24) + &
                      s14*(23*s23 + 4*s24)) + &
                   s13*(14*s14**3 + s14**2*(19*s23 - 5*s24) + &
                      2*s14*(15*s23**2 + 6*s23*s24 - 16*s24**2) + &
                      3*(s23**3 + 7*s23**2*s24 + 16*s23*s24**2 + &
                         4*s24**3)))))/&
           ((m**2 - s14)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
             (gm**2 - m**2 + s23)*(-gm**2 - 2*m**2 + s12 + s23 + s24)) + &
          (4*(2*(-2*m**2 + s12 + s13 + s23)**2*&
                (2*m**2 - s12 - s23 - s24)*&
                (12*m**6 - s12**3 + 2*s13*s14*s23 + 3*s14**2*s23 - &
                  s13*s14*s24 + s14*s23*s24 - s13*s24**2 - &
                  s12**2*(s13 + 2*s14 + s23 + 2*s24) - &
                  2*m**4*(11*s12 + 2*s13 - 6*s14 - s23 + 7*s24) - &
                  s12*(s13*s14 + s14**2 - 2*s14*s23 + 2*s13*s24 + &
                     2*s14*s24 + s23*s24 + s24**2) + &
                  m**2*(10*s12**2 - s13*s14 - 3*s14**2 - 15*s14*s23 + &
                     2*s23**2 + 5*s13*s24 + 2*s14*s24 - 5*s23*s24 + &
                     3*s24**2 + s12*(5*s13 + 5*s14 - 3*s23 + 13*s24))) + &
               gm**6*(64*m**6 - s12**3 - 5*s13*s14*s23 - 5*s14*s23**2 + &
                  m**4*(38*s12 + 33*s13 + 153*s14 - s23 - 49*s24) - &
                  s12**2*(2*s13 + s14 + 2*s23 - 20*s24) - s13**2*s24 - &
                  6*s13*s14*s24 + 6*s14**2*s24 + 17*s13*s23*s24 + &
                  27*s14*s23*s24 + 18*s23**2*s24 + 21*s13*s24**2 + &
                  30*s14*s24**2 + 42*s23*s24**2 + 24*s24**3 - &
                  s12*(s13**2 + 6*s14*s23 + s23**2 + &
                     s13*(s14 + 2*s23 - 19*s24) - 27*s14*s24 - &
                     38*s23*s24 - 45*s24**2) - &
                  m**2*(39*s12**2 - s13**2 - 11*s13*s14 + 6*s14**2 + &
                     22*s13*s23 + 54*s14*s23 + 9*s23**2 + 49*s13*s24 + &
                     151*s14*s24 + 52*s23*s24 + 37*s24**2 + &
                     s12*(28*s13 + 38*s14 + 52*s23 + 78*s24))) + &
               gm**4*(-492*m**8 + 12*s12**4 + 10*s13**2*s14*s23 + &
                  23*s13*s14**2*s23 + 12*s14**3*s23 + &
                  18*s13**2*s23**2 + 62*s13*s14*s23**2 + &
                  41*s14**2*s23**2 + 36*s13*s23**3 + 52*s14*s23**3 + &
                  18*s23**4 + 2*s13**3*s24 + 13*s13**2*s14*s24 + &
                  18*s13*s14**2*s24 + 34*s13**2*s23*s24 + &
                  75*s13*s14*s23*s24 + 27*s14**2*s23*s24 + &
                  80*s13*s23**2*s24 + 83*s14*s23**2*s24 + &
                  48*s23**3*s24 + 28*s13**2*s24**2 + &
                  39*s13*s14*s24**2 + 85*s13*s23*s24**2 + &
                  54*s14*s23*s24**2 + 72*s23**2*s24**2 + &
                  30*s13*s24**3 + 36*s23*s24**3 + &
                  s12**3*(26*s13 + 31*s14 + 56*s23 + 58*s24) + &
                  2*m**6*(313*s12 + 96*s13 + 85*s14 + 316*s23 + &
                     95*s24) + &
                  s12**2*(16*s13**2 + 31*s14**2 + 116*s14*s23 + &
                     94*s23**2 + 92*s14*s24 + 175*s23*s24 + &
                     76*s24**2 + 2*s13*(23*s14 + 46*s23 + 50*s24)) + &
                  m**4*(102*s12**2 + 45*s13**2 + 73*s14**2 + &
                     323*s14*s23 - 134*s23**2 + 25*s14*s24 - &
                     20*s23*s24 + 166*s24**2 + &
                     s13*(320*s14 + 25*s23 + 49*s24) + &
                     s12*(113*s13 + 263*s14 - 79*s23 + 129*s24)) + &
                  s12*(2*s13**3 + 12*s14**3 + 68*s23**3 + &
                     165*s23**2*s24 + 151*s23*s24**2 + 30*s24**3 + &
                     s14**2*(72*s23 + 39*s24) + &
                     s13**2*(15*s14 + 36*s23 + 44*s24) + &
                     s14*(137*s23**2 + 187*s23*s24 + 57*s24**2) + &
                     s13*(25*s14**2 + 110*s14*s23 + 102*s23**2 + &
                        99*s14*s24 + 191*s23*s24 + 104*s24**2)) - &
                  m**2*(97*s12**3 + 2*s13**3 + 12*s14**3 + &
                     156*s14**2*s23 + 305*s14*s23**2 + 68*s23**3 - &
                     15*s14**2*s24 + 331*s14*s23*s24 + 147*s23**2*s24 + &
                     71*s14*s24**2 + 227*s23*s24**2 + 74*s24**3 + &
                     s13**2*(23*s14 + 62*s23 + 63*s24) + &
                     s12**2*(170*s13 + 270*s14 + 271*s23 + 285*s24) + &
                     s13*(41*s14**2 + 291*s14*s23 + 122*s23**2 + &
                        205*s14*s24 + 205*s23*s24 + 170*s24**2) + &
                     s12*(71*s13**2 + 152*s14**2 + 575*s14*s23 + &
                        234*s23**2 + 386*s14*s24 + 472*s23*s24 + &
                        290*s24**2 + s13*(279*s14 + 293*s23 + 330*s24)))&
) + gm**2*(528*m**10 + 12*s12**5 + 12*s13**3*s14*s23 + &
                  20*s13**2*s14**2*s23 + 9*s13*s14**3*s23 + &
                  32*s13**2*s14*s23**2 + 31*s13*s14**2*s23**2 + &
                  9*s14**3*s23**2 - 6*s13**2*s23**3 + &
                  23*s13*s14*s23**3 + 11*s14**2*s23**3 - 12*s13*s23**4 + &
                  3*s14*s23**4 - 6*s23**5 + 10*s13**3*s14*s24 + &
                  9*s13**2*s14**2*s24 + 6*s13**3*s23*s24 + &
                  35*s13**2*s14*s23*s24 + 12*s13*s14**2*s23*s24 + &
                  15*s13**2*s23**2*s24 + 43*s13*s14*s23**2*s24 + &
                  3*s14**2*s23**2*s24 + 15*s13*s23**3*s24 + &
                  18*s14*s23**3*s24 + 6*s23**4*s24 + 10*s13**3*s24**2 + &
                  17*s13**2*s14*s24**2 + 40*s13**2*s23*s24**2 + &
                  33*s13*s14*s23*s24**2 + 54*s13*s23**2*s24**2 + &
                  16*s14*s23**2*s24**2 + 24*s23**3*s24**2 + &
                  14*s13**2*s24**3 + 26*s13*s23*s24**3 + &
                  12*s23**2*s24**3 - &
                  4*m**8*(276*s12 + 143*s13 + 83*s14 + 97*s23 + &
                     21*s24) + &
                  s12**4*(34*s13 + 33*s14 + 54*s23 + 38*s24) + &
                  2*m**6*(260*s12**2 + 87*s13**2 - 14*s14**2 + &
                     24*s14*s23 + 110*s23**2 + &
                     2*s12*(138*s13 - 29*s14 + 175*s23 - 74*s24) + &
                     s13*(7*s14 + 261*s23 - 30*s24) + 101*s14*s24 - &
                     133*s23*s24 - 141*s24**2) + &
                  s12**3*(32*s13**2 + 30*s14**2 + 111*s14*s23 + &
                     81*s23**2 + 64*s14*s24 + 136*s23*s24 + 40*s24**2 + &
                     2*s13*(37*s14 + 55*s23 + 48*s24)) + &
                  s12**2*(10*s13**3 + 9*s14**3 + 42*s23**3 + &
                     161*s23**2*s24 + 108*s23*s24**2 + 14*s24**3 + &
                     s14**2*(71*s23 + 26*s24) + &
                     s13**2*(51*s14 + 62*s23 + 78*s24) + &
                     s14*(126*s23**2 + 150*s23*s24 + 31*s24**2) + &
                     s13*(49*s14**2 + 100*s23**2 + 232*s23*s24 + &
                        90*s24**2 + 2*s14*(88*s23 + 61*s24))) + &
                  m**4*(92*s12**3 - 2*s13**3 + 18*s14**3 + &
                     130*s14**2*s23 + 157*s14*s23**2 - 201*s23**3 - &
                     56*s14**2*s24 + 49*s14*s23*s24 + 164*s23**2*s24 + &
                     54*s14*s24**2 + 353*s23*s24**2 + 76*s24**3 + &
                     s13**2*(140*s14 - 155*s23 + 59*s24) + &
                     s12**2*(139*s13 + 483*s14 + 69*s23 + 633*s24) + &
                     s13*(68*s14**2 + 313*s14*s23 - 294*s23**2 - &
                        3*s14*s24 + 243*s23*s24 + 359*s24**2) + &
                     s12*(25*s13**2 + 196*s14**2 + 658*s14*s23 - &
                        226*s23**2 + 223*s14*s24 + 827*s23*s24 + &
                        539*s24**2 + s13*(523*s14 - 197*s23 + 608*s24))) &
- m**2*(95*s12**4 + 2*s13**3*(11*s14 - s23 + 8*s24) + &
                     s12**3*(204*s13 + 237*s14 + 269*s23 + 308*s24) + &
                     s13**2*(29*s14**2 + 145*s14*s23 - 45*s23**2 + &
                        79*s14*s24 + 69*s23*s24 + 117*s24**2) + &
                     s12**2*(125*s13**2 + 151*s14**2 + 556*s14*s23 + &
                        173*s23**2 + 304*s14*s24 + 666*s23*s24 + &
                        283*s24**2 + s13*(392*s14 + 336*s23 + 534*s24)) &
+ s23*(27*s14**3 - 73*s23**3 + 20*s14**2*(4*s23 - s24) + &
                        25*s23**2*s24 + 138*s23*s24**2 + 66*s24**3 + &
                        s14*(55*s23**2 + 101*s23*s24 + 59*s24**2)) + &
                     s13*(9*s14**3 - 112*s23**3 + &
                        3*s14**2*(41*s23 - 4*s24) + 76*s23**2*s24 + &
                        247*s23*s24**2 + 70*s24**3 + &
                        s14*(188*s23**2 + 174*s23*s24 + 61*s24**2)) + &
                     s12*(16*s13**3 + 27*s14**3 - 74*s23**3 + &
                        385*s23**2*s24 + 425*s23*s24**2 + 70*s24**3 + &
                        3*s14**2*(77*s23 + 6*s24) + &
                        s13**2*(177*s14 + 63*s23 + 242*s24) + &
                        s14*(374*s23**2 + 413*s23*s24 + 85*s24**2) + &
                        s13*(162*s14**2 + 581*s14*s23 + 5*s23**2 + &
                         359*s14*s24 + 625*s23*s24 + 400*s24**2))) + &
                  s12*(2*s13**3*(5*s14 + 3*s23 + 10*s24) + &
                     s13**2*(19*s14**2 + 79*s14*s23 + 21*s23**2 + &
                        68*s14*s24 + 102*s23*s24 + 60*s24**2) + &
                     s23*(18*s14**3 - 3*s23**3 + 69*s23**2*s24 + &
                        92*s23*s24**2 + 26*s24**3 + &
                        s14**2*(52*s23 + 29*s24) + &
                        s14*(51*s23**2 + 104*s23*s24 + 47*s24**2)) + &
                     s13*(9*s14**3 + 5*s14**2*(16*s23 + 7*s24) + &
                        s14*(125*s23**2 + 169*s23*s24 + 48*s24**2) + &
                        4*(3*s23**3 + 37*s23**2*s24 + 37*s23*s24**2 + &
                         7*s24**3))))))/&
           ((m**2 - s14)*(gm**2 - m**2 + s23)*&
             (gm**2 - 2*m**2 + s12 + s13 + s23)*&
             (-gm**2 - 2*m**2 + s12 + s23 + s24)) + &
          (16*(2*(s14 - s23)*(-2*m**2 + s12 + s14 + s24)**2*&
                (4*m**6 + m**4*(s13 - 7*s14 + 3*s23 - s24) + &
                  s14*(s12**2 + s14*s23 + &
                     s12*(s13 + s14 + s23 + s24) + s13*(2*s23 + s24)) - &
                  m**2*(s12**2 - 3*s14**2 + 8*s14*s23 - 4*s23**2 + &
                     3*s14*s24 - 4*s23*s24 + &
                     s12*(s13 + 5*s14 - 3*s23 + s24) + &
                     s13*(s14 + 2*s23 + s24))) + &
               2*gm**6*(217*m**6 + 3*s13*s14*(s12 + s14 + s23 + s24) + &
                  3*m**4*(41*s12 - 15*s13 + 26*s14 + 41*s23 + 41*s24) + &
                  m**2*(18*s12**2 + 17*s14**2 + 33*s14*s23 + &
                     18*s23**2 + 33*s14*s24 + 36*s23*s24 + 18*s24**2 - &
                     3*s13*(2*s14 + 5*(s23 + s24)) + &
                     s12*(-15*s13 + 33*s14 + 36*(s23 + s24)))) - &
               gm**4*(472*m**8 + 12*s12**4 + 66*s13*s14**3 + &
                  92*s13*s14**2*s23 + 23*s14**3*s23 + &
                  18*s13*s14*s23**2 + 27*s14**2*s23**2 + 3*s14*s23**3 + &
                  125*s13*s14**2*s24 + 83*s13*s14*s23*s24 + &
                  35*s14**2*s23*s24 + 3*s13*s23**2*s24 + &
                  15*s14*s23**2*s24 + 71*s13*s14*s24**2 + &
                  15*s13*s23*s24**2 + 12*s14*s23*s24**2 + &
                  12*s13*s24**3 + &
                  s12**3*(12*s13 + 47*s14 + 27*s23 + 36*s24) + &
                  m**6*(290*s12 - 261*s13 - 479*s14 + 637*s23 + &
                     407*s24) + &
                  m**4*(245*s12**2 + 94*s14**2 - 115*s14*s23 + &
                     216*s23**2 + s13*(136*s14 - 116*s23 - 45*s24) + &
                     128*s14*s24 + 312*s23*s24 + 206*s24**2 + &
                     s12*(-45*s13 + 243*s14 + 265*s23 + 451*s24)) + &
                  s12**2*(58*s14**2 + s13*(71*s14 + 15*s23 + 36*s24) + &
                     s14*(89*s23 + 94*s24) + &
                     18*(s23**2 + 3*s23*s24 + 2*s24**2)) + &
                  s12*(23*s14**3 + 3*(s23 + s24)**2*(s23 + 4*s24) + &
                     s14**2*(85*s23 + 58*s24) + &
                     s13*(125*s14**2 + 83*s14*s23 + 3*s23**2 + &
                        142*s14*s24 + 30*s23*s24 + 36*s24**2) + &
                     s14*(45*s23**2 + 101*s23*s24 + 47*s24**2)) + &
                  m**2*(98*s12**3 + 63*s14**3 + 76*s14**2*s23 - &
                     18*s14*s23**2 + 21*s23**3 + 98*s14**2*s24 + &
                     55*s14*s23*s24 + 42*s23**2*s24 + 73*s14*s24**2 + &
                     57*s23*s24**2 + 36*s24**3 + &
                     2*s12**2*(25*s13 + 118*s14 + 61*s23 + 116*s24) + &
                     s13*(221*s14**2 + 111*s14*s23 - 3*s23**2 + &
                        219*s14*s24 + 35*s23*s24 + 50*s24**2) + &
                     s12*(185*s14**2 + 172*s14*s23 + 45*s23**2 + &
                        309*s14*s24 + 179*s23*s24 + 170*s24**2 + &
                        s13*(219*s14 + 35*s23 + 100*s24)))) + &
               gm**2*(128*m**10 - &
                  4*m**8*(10*s12 - 3*s13 + 81*s14 - 51*s23 + 13*s24) - &
                  2*m**6*(20*s12**2 - 54*s14**2 + 227*s14*s23 - &
                     121*s23**2 + 109*s14*s24 - 88*s23*s24 + 7*s24**2 + &
                     s13*(-44*s14 + 63*s23 + 13*s24) + &
                     s12*(13*s13 + 115*s14 - 67*s23 + 27*s24)) + &
                  m**4*(6*s12**3 + 21*s14**3 + 176*s14**2*s23 - &
                     173*s14*s23**2 + 50*s23**3 + 162*s14**2*s24 - &
                     19*s14*s23*s24 - 9*s23**2*s24 + 125*s14*s24**2 - &
                     57*s23*s24**2 + 4*s24**3 + &
                     2*s12**2*(s13 + 45*s14 - 14*s23 + 8*s24) + &
                     s13*(-137*s14**2 + 111*s14*s23 - 10*s23**2 - &
                        69*s14*s24 + 47*s23*s24 + 2*s24**2) + &
                     s12*(129*s14**2 + 14*s14*s23 - 13*s23**2 + &
                        215*s14*s24 - 85*s23*s24 + 14*s24**2 + &
                        s13*(-69*s14 + 47*s23 + 4*s24))) + &
                  m**2*(4*s12**4 - 8*s14**4 + 2*s14**3*s23 + &
                     53*s14**2*s23**2 - 23*s14*s23**3 - 10*s14**3*s24 + &
                     55*s14**2*s23*s24 - 22*s14*s23**2*s24 - &
                     29*s23**3*s24 + 28*s14**2*s24**2 + &
                     3*s14*s23*s24**2 - 65*s23**2*s24**2 + &
                     26*s14*s24**3 - 42*s23*s24**3 + &
                     s12**3*(4*s13 + 57*s14 - 33*s23 + 12*s24) + &
                     s12**2*(72*s14**2 + 33*s14*s23 - 45*s23**2 + &
                        140*s14*s24 - 108*s23*s24 + 12*s24**2 + &
                        s13*(23*s14 + 21*s23 + 12*s24)) + &
                     s13*(-2*s14**3 + s14**2*(45*s23 + 37*s24) + &
                        s24*(13*s23**2 + 21*s23*s24 + 4*s24**2) + &
                        s14*(47*s23**2 + 68*s23*s24 + 23*s24**2)) + &
                     s12*(11*s14**3 - 23*s23**3 - 110*s23**2*s24 - &
                        117*s23*s24**2 + 4*s24**3 + &
                        4*s14**2*(17*s23 + 25*s24) + &
                        s13*(37*s14**2 + 68*s14*s23 + 13*s23**2 + &
                        46*s14*s24 + 42*s23*s24 + 12*s24**2) + &
                        s14*(8*s23**2 + 36*s23*s24 + 109*s24**2))) - &
                  (s12 + s14 + s24)*&
                   (2*s12**3*(s14 + 3*s23) + &
                     s12**2*(2*s14**2 + 19*s14*s23 + 9*s23**2 + &
                        2*s13*(s14 + 3*s23) + 4*s14*s24 + 12*s23*s24) + &
                     s14*s23*&
                      (3*s23*(s23 + 2*s24) + s14*(11*s23 + 2*s24)) + &
                     s13*(-24*s14**3 + 2*s14**2*(17*s23 - 6*s24) + &
                        3*s23*s24*(s23 + 2*s24) + &
                        s14*(22*s23**2 + 43*s23*s24 + 2*s24**2)) + &
                     s12*(s14**2*(13*s23 + 2*s24) + &
                        3*s23*(s23**2 + 3*s23*s24 + 2*s24**2) + &
                        s14*(20*s23**2 + 19*s23*s24 + 2*s24**2) + &
                        s13*(-12*s14**2 + 3*s23*(s23 + 4*s24) + &
                         s14*(43*s23 + 4*s24)))))))/&
           ((m**2 - s14)**2*(gm**2 - m**2 + s23)*&
             (gm**2 - 2*m**2 + s12 + s14 + s24)) + &
          (16*(-2*(s14 - s23)*(-2*m**2 + s12 + s13 + s23)**2*&
                (12*m**6 - m**4*&
                   (8*s12 + 3*s13 + 23*s14 - 3*s23 + 5*s24) + &
                  m**2*(s12**2 + 4*s14**2 + 4*s14*s23 + s23**2 + &
                     2*s14*s24 + 5*s23*s24 + s13*(4*s14 - s23 + s24) + &
                     s12*(s13 + 5*s14 + 5*s23 + s24)) - &
                  s23*(s12**2 + s13*s24 + s12*(s13 + s14 + s23 + s24) + &
                     s14*(s23 + 2*s24))) + &
               gm**6*(126*m**6 - &
                  m**4*(50*s12 + 43*s13 + s14 + 35*s23 + 55*s24) + &
                  s14*(5*s12**2 - 10*s13**2 - 4*s13*s14 + 6*s14**2 - &
                     20*s13*s23 + 11*s14*s23 - 10*s23**2 + 5*s13*s24 + &
                     6*s14*s24 - 10*s23*s24 + &
                     s12*(-5*s13 + 11*s14 - 5*s23 + 5*s24)) + &
                  m**2*(15*s12**2 - 21*s13*s14 + 67*s14**2 - &
                     84*s14*s23 + 10*s23**2 + 15*s13*s24 - 59*s14*s24 + &
                     10*s23*s24 + &
                     s12*(15*s13 - 59*s14 + 25*s23 + 15*s24))) - &
               gm**4*(280*m**8 + 4*s13**3*s14 - 6*s13**2*s14**2 - &
                  10*s13*s14**3 + 10*s13**2*s14*s23 - &
                  26*s13*s14**2*s23 - 7*s14**3*s23 + &
                  18*s13*s14*s23**2 - 14*s14**2*s23**2 + &
                  12*s14*s23**3 + s12**3*(-8*s14 + 10*s23) - &
                  8*s13**2*s14*s24 - 7*s13*s14**2*s24 + &
                  10*s13**2*s23*s24 + 10*s13*s14*s23*s24 - &
                  16*s14**2*s23*s24 + 10*s13*s23**2*s24 + &
                  12*s14*s23**2*s24 - &
                  m**6*(306*s12 + 223*s13 + 77*s14 + 313*s23 + &
                     107*s24) + &
                  s12**2*(-15*s14**2 - 4*s13*(3*s14 - 5*s23) + &
                     2*s14*(s23 - 4*s24) + 10*s23*(2*s23 + s24)) + &
                  m**4*(47*s12**2 + 22*s13**2 + 56*s14**2 - &
                     229*s14*s23 + 154*s23**2 - 152*s14*s24 + &
                     104*s23*s24 + s13*(36*s14 + 128*s23 + 25*s24) + &
                     s12*(69*s13 - 105*s14 + 193*s23 + 25*s24)) + &
                  s12*(-7*s14**3 + 10*s13**2*s23 + &
                     10*s23**2*(s23 + s24) + &
                     2*s14*s23*(11*s23 + 5*s24) - &
                     s14**2*(29*s23 + 7*s24) + &
                     s13*(-21*s14**2 + 4*s14*(3*s23 - 4*s24) + &
                        20*s23*(s23 + s24))) + &
                  m**2*(2*s12**3 + 25*s14**3 - 35*s14**2*s23 + &
                     108*s14*s23**2 - 44*s23**3 + 25*s14**2*s24 + &
                     54*s14*s23*s24 - 44*s23**2*s24 + &
                     2*s12**2*(2*s13 + 12*s14 - 21*s23 + s24) + &
                     s13**2*(-48*s14 - 6*s23 + 2*s24) + &
                     s13*(-29*s14**2 + 66*s14*s23 - 44*s23**2 + &
                        72*s14*s24 - 54*s23*s24) + &
                     2*s12*(s13**2 - 23*s14**2 - &
                        2*s13*(6*s14 + 12*s23 - s24) + &
                        36*s14*(2*s23 + s24) - s23*(44*s23 + 27*s24)))) &
+ gm**2*(192*m**10 - 4*m**8*(46*s12 + 39*s13 + 23*s14 + 35*s23 + &
                     7*s24) + &
                  2*m**6*(20*s12**2 + 15*s13**2 - 77*s14**2 - &
                     61*s14*s23 + 142*s23**2 - 69*s14*s24 + &
                     96*s23*s24 + s13*(-12*s14 + 73*s23 + 5*s24) + &
                     s12*(35*s13 - 67*s14 + 163*s23 + 5*s24)) + &
                  m**4*(2*s12**3 + 42*s14**3 + 129*s14**2*s23 + &
                     96*s14*s23**2 - 189*s23**3 + 38*s14**2*s24 + &
                     97*s14*s23*s24 - 127*s23**2*s24 + &
                     2*s12**2*(2*s13 + 48*s14 - 91*s23 + s24) + &
                     s13**2*(13*s14 - 33*s23 + 2*s24) + &
                     s13*(149*s14**2 + 91*s14*s23 - 226*s23**2 + &
                        105*s14*s24 - 155*s23*s24) + &
                     s12*(2*s13**2 + 117*s14**2 + 242*s14*s23 - &
                        369*s23**2 + 105*s14*s24 - 155*s23*s24 + &
                        s13*(109*s14 - 215*s23 + 4*s24))) - &
                  (s12 + s13 + s23)*&
                   (4*s12**3*s23 - &
                     s14*s23*&
                      (s14**2 + 5*s14*s23 - 4*s23**2 + 14*s14*s24 - &
                        6*s23*s24) + &
                     s13**2*(-4*s14**2 + 4*s14*s23 + 4*s23*s24) + &
                     s12**2*(-s14**2 + 3*s14*s23 + &
                        4*s23*(2*s13 + s23 + s24)) - &
                     s13*s14*&
                      (4*s14**2 + s14*(4*s23 + s24) - &
                        3*s23*(4*s23 + s24)) + &
                     s12*(4*s13**2*s23 + &
                        s13*(-5*s14**2 + 7*s14*s23 + &
                        4*s23*(s23 + 2*s24)) - &
                        s14*(s14**2 + s14*(6*s23 + s24) - &
                         s23*(7*s23 + 3*s24)))) - &
                  m**2*(s12**3*(3*s14 - 35*s23) + &
                     s13**3*(-8*s14 + 4*s23) + &
                     s13**2*(31*s14**2 - 9*s14*s23 - 28*s23**2 + &
                        15*s14*s24 - 39*s23*s24) + &
                     s23*(27*s14**3 + s14*s23*(16*s23 + 7*s24) - &
                        2*s23**2*(18*s23 + 11*s24) + &
                        3*s14**2*(7*s23 + 15*s24)) + &
                     s13*(33*s14**3 + s14**2*(42*s23 + 23*s24) + &
                        s14*s23*(11*s23 + 24*s24) - &
                        s23**2*(72*s23 + 53*s24)) + &
                     s12**2*(-2*s13*(s14 + 33*s23) + &
                        3*(3*s14**2 + 19*s14*s23 - 34*s23**2 + &
                         5*s14*s24 - 13*s23*s24)) + &
                     s12*(27*s14**3 - s13**2*(13*s14 + 27*s23) + &
                        2*s14*s23*(35*s23 + 12*s24) + &
                        s14**2*(30*s23 + 23*s24) - &
                        s23**2*(103*s23 + 53*s24) + &
                        2*s13*&
                         (20*s14**2 - 13*s23*(5*s23 + 3*s24) + &
                         3*s14*(8*s23 + 5*s24)))))))/&
           ((-m**2 + s14)*(gm**2 - m**2 + s23)**2*&
             (gm**2 - 2*m**2 + s12 + s13 + s23)) + &
          (4*(-2*gm**6*(m**2 - s14)*&
                (17*m**4 + s14*(2*s12 + 5*s13 + 2*(s14 + s23 + s24)) + &
                  m**2*(14*s12 - 3*s13 + 7*(-3*s14 + 2*s23 + 2*s24))) - &
               2*(2*m**2 - s12 - s13 - s14)*(s14 - s23)*&
                (2*m**6*(2*s12 + s13 - 3*s14 + 9*s23 + s24) - &
                  m**4*(4*s12**2 + s13**2 - 12*s14**2 + 33*s14*s23 + &
                     3*s23**2 + 6*s14*s24 + s23*s24 + &
                     s12*(5*s13 + 11*s14 + 9*s23 + 3*s24) + &
                     s13*(3*s14 + 10*s23 + 3*s24)) + &
                  m**2*(s12**3 - 6*s14**3 + 11*s14**2*s23 + &
                     6*s14*s23**2 + 4*s23**3 + 3*s14*s23*s24 + &
                     4*s23**2*s24 + s12**2*(2*s13 + 9*s14 + s24) + &
                     s13**2*(s14 + 2*s23 + s24) + &
                     s13*(s14**2 + 15*s14*s23 + 7*s14*s24 - s23*s24) + &
                     s12*(s13**2 + 3*s14**2 + 17*s14*s23 + 3*s23**2 + &
                        7*s14*s24 - s23*s24 + 2*s13*(5*s14 + s23 + s24)&
)) - s14*(s12**3 + s13**2*(2*s23 + s24) + &
                     s12**2*(2*s13 + s14 + 4*s23 + s24) + &
                     s13*s23*(s14 + 4*s23 + 3*s24) + &
                     s23*(4*s23*(s23 + s24) - s14*(s23 + 2*s24)) + &
                     s12*(s13**2 + s13*(s14 + 6*s23 + 2*s24) + &
                        s23*(7*s23 + 3*s24)))) + &
               gm**4*(66*m**8 + &
                  m**6*(-70*s12 - 91*s13 + 157*s14 + 5*s23 - 3*s24) + &
                  m**4*(9*s12**2 + 15*s13**2 - 336*s14**2 + &
                     34*s14*s23 - 7*s23**2 + 68*s14*s24 - 5*s23*s24 + &
                     2*s12*(12*s13 + 19*s14 + 9*s23 + 3*s24) + &
                     s13*(-s14 + 26*s23 + 6*s24)) + &
                  s14*(s12**3 + 4*s14**3 + 5*s14**2*s23 - &
                     45*s14*s23**2 - 8*s23**3 + 4*s14**2*s24 - &
                     44*s14*s23*s24 - 8*s23**2*s24 + &
                     s12**2*(2*s13 + 8*s14 - 24*s23 + s24) + &
                     s13**2*(4*s23 + s24) + &
                     s13*(4*s14**2 + 5*s14*s23 - 26*s23**2 + &
                        7*s14*s24 - 25*s23*s24) + &
                     s12*(s13**2 + 11*s14**2 - 37*s14*s23 - &
                        33*s23**2 + 7*s14*s24 - 25*s23*s24 + &
                        2*s13*(4*s14 - 10*s23 + s24))) + &
                  m**2*(s12**3 + 109*s14**3 - 2*s14**2*s23 + &
                     76*s14*s23**2 + 8*s23**3 - 27*s14**2*s24 + &
                     73*s14*s23*s24 + 8*s23**2*s24 + &
                     s13**2*(-15*s14 - 2*s23 + s24) + &
                     s12**2*(2*s13 - 61*s14 + 2*s23 + s24) + &
                     s13*(88*s14**2 + s23*(2*s23 + s24) - &
                        3*s14*(25*s23 + 19*s24)) + &
                     s12*(s13**2 + 63*s14**2 + s23*(9*s23 + s24) + &
                        s13*(-76*s14 + 2*s24) - s14*(s23 + 57*s24)))) + &
               gm**2*(-32*m**10 + 2*s12**4*s14 - 6*s13**2*s14**3 - &
                  8*s13*s14**4 - 2*s14**5 + 8*s13**3*s14*s23 + &
                  30*s13**2*s14**2*s23 + 13*s13*s14**3*s23 - &
                  2*s14**4*s23 + 6*s13**2*s14*s23**2 + &
                  29*s13*s14**2*s23**2 + 9*s14**3*s23**2 + &
                  6*s13**2*s23**3 + 6*s13*s14*s23**3 - s14**2*s23**3 + &
                  6*s13*s23**4 + 14*s14*s23**4 + 2*s13**3*s14*s24 + &
                  7*s13**2*s14**2*s24 - 4*s13*s14**3*s24 - &
                  2*s14**4*s24 + 5*s13**2*s14*s23*s24 + &
                  21*s13*s14**2*s23*s24 + 2*s14**3*s23*s24 + &
                  6*s13**2*s23**2*s24 + 5*s13*s14*s23**2*s24 - &
                  2*s14**2*s23**2*s24 + 6*s13*s23**3*s24 + &
                  14*s14*s23**3*s24 + &
                  4*m**8*(18*s12 + 17*s13 + 29*s14 + 31*s23 + s24) + &
                  s12**3*(6*s13*s14 + 9*s14**2 + 7*s14*s23 + 6*s23**2 + &
                     2*s14*s24) - &
                  2*m**6*(20*s12**2 + 19*s13**2 + 56*s14**2 + &
                     117*s14*s23 + 35*s23**2 + 3*s23*s24 + &
                     s12*(39*s13 + 101*s14 + 55*s23 + s24) + &
                     s13*(91*s14 + 70*s23 + s24)) + &
                  s12**2*(6*s13**2*s14 + 3*s14**3 + &
                     5*s14*s23*(2*s23 + s24) + 6*s23**2*(2*s23 + s24) + &
                     s14**2*(31*s23 + 7*s24) + &
                     2*s13*(9*s14**2 + 11*s14*s23 + 6*s23**2 + &
                        3*s14*s24)) + &
                  m**4*(2*s12**3 + 6*s13**3 + 24*s14**3 + &
                     113*s14**2*s23 + 148*s14*s23**2 + 39*s23**3 + &
                     s13**2*(67*s14 + 51*s23 - 4*s24) + &
                     2*s12**2*(5*s13 + 43*s14 + 17*s23 - 2*s24) - &
                     18*s14**2*s24 + 31*s14*s23*s24 + 37*s23**2*s24 + &
                     s13*(127*s14**2 + 249*s14*s23 + 40*s23**2 + &
                        5*s14*s24 + 13*s23*s24) + &
                     s12*(14*s13**2 + 153*s14**2 + 214*s14*s23 + &
                        67*s23**2 + s13*(153*s14 + 85*s23 - 8*s24) + &
                        5*s14*s24 + 13*s23*s24)) + &
                  s12*(2*s13**3*s14 - 6*s14**4 + &
                     2*s14**3*(7*s23 - 2*s24) + &
                     21*s14**2*s23*(s23 + s24) + 6*s23**3*(s23 + s24) + &
                     s14*s23**2*(19*s23 + 5*s24) + &
                     s13**2*(9*s14**2 + 23*s14*s23 + 6*s23**2 + &
                        6*s14*s24) + &
                     s13*(-3*s14**3 + 6*s23**2*(3*s23 + 2*s24) + &
                        2*s14*s23*(8*s23 + 5*s24) + &
                        s14**2*(61*s23 + 14*s24))) + &
                  m**2*(2*s12**4 + 6*s14**4 - 3*s14**3*s23 - &
                     75*s14**2*s23**2 - 30*s14*s23**3 - 20*s23**4 + &
                     14*s14**3*s24 - 15*s14**2*s23*s24 - &
                     27*s14*s23**2*s24 - 20*s23**3*s24 + &
                     s12**3*(6*s13 - 11*s14 - 5*s23 + 2*s24) + &
                     s13**3*(-6*s14 - 4*s23 + 2*s24) - &
                     s13**2*(23*s14**2 + 3*s14*(27*s23 + s24) + &
                        s23*(8*s23 + 7*s24)) + &
                     s12**2*(6*s13**2 - 51*s14**2 - &
                        2*s13*(14*s14 + 7*s23 - 3*s24) - &
                        3*s14*(25*s23 + s24) - s23*(26*s23 + 7*s24)) - &
                     s13*(5*s14**3 + s14**2*(124*s23 + s24) + &
                        s23**2*(20*s23 + 19*s24) + &
                        s14*s23*(79*s23 + 44*s24)) + &
                     s12*(2*s13**3 - 19*s14**3 - &
                        s14**2*(108*s23 + s24) + &
                        s13**2*(-23*s14 - 13*s23 + 6*s24) - &
                        s23**2*(39*s23 + 19*s24) - &
                        2*s14*s23*(45*s23 + 22*s24) - &
                        2*s13*&
                         (37*s14**2 + 3*s14*(26*s23 + s24) + &
                         s23*(17*s23 + 7*s24)))))))/&
           ((m**2 - s14)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
             (gm**2 - m**2 + s23)**2) + &
          (4*(gm**6*(-20*m**6 + &
                  m**4*(6*s12 - 29*s13 + 91*s14 - 7*s23 - 19*s24) + &
                  s14*(5*s12**2 - 10*s13**2 + 14*s13*s14 + 6*s14**2 - &
                     8*s13*s23 + 11*s14*s23 + 2*s23**2 + 5*s13*s24 + &
                     6*s14*s24 + 2*s23*s24 + &
                     s12*(-5*s13 + 11*s14 + 7*s23 + 5*s24)) + &
                  m**2*(35*s12**2 + 40*s13**2 - 33*s13*s14 - &
                     59*s14**2 + 36*s13*s23 - 32*s14*s23 - 2*s23**2 + &
                     35*s13*s24 - 27*s14*s24 - 2*s23*s24 + &
                     s12*(75*s13 - 87*s14 + 33*s23 + 35*s24))) + &
               2*(2*m**2 - s12 - s13 - s14)*&
                (-2*m**2 + s12 + s13 + s23)**2*&
                (20*m**6 + s12**3 - s13*s14*s23 - 3*s14*s23**2 - &
                  2*m**4*(s12 + 5*s13 + 9*s14 + 2*s23 - 2*s24) + &
                  s13**2*s24 + s13*s23*s24 - 2*s14*s23*s24 + &
                  s12**2*(2*s13 + s14 + 2*s23 + s24) + &
                  m**2*(-6*s12**2 + s13**2 + 6*s14**2 + 3*s14*s23 + &
                     3*s23**2 + s13*(s14 + 2*s23 - 5*s24) + s23*s24 - &
                     s12*(5*s13 + s14 + s23 + 5*s24)) + &
                  s12*(s13**2 + s23*(-2*s14 + s23 + s24) + &
                     s13*(s14 + 2*(s23 + s24)))) + &
               gm**4*(304*m**8 + 5*s12**4 - 4*s13**3*s14 + &
                  6*s13**2*s14**2 + 10*s13*s14**3 - 6*s13**3*s23 - &
                  7*s13**2*s14*s23 + 44*s13*s14**2*s23 + 7*s14**3*s23 - &
                  12*s13**2*s23**2 + 4*s13*s14*s23**2 + &
                  29*s14**2*s23**2 - 6*s13*s23**3 + 7*s14*s23**3 - &
                  4*m**6*(13*s12 + 39*s13 + 83*s14 + 15*s23 - 15*s24) + &
                  5*s13**3*s24 - 2*s13**2*s14*s24 + 7*s13*s14**2*s24 - &
                  4*s13**2*s23*s24 - s13*s14*s23*s24 + &
                  16*s14**2*s23*s24 - 9*s13*s23**2*s24 + &
                  4*s14*s23**2*s24 + &
                  s12**3*(15*s13 + 3*s14 + s23 + 5*s24) + &
                  s12**2*(15*s13**2 + 5*s14**2 + 10*s14*s23 - &
                     13*s23**2 - 2*s14*s24 - 4*s23*s24 + &
                     s13*(2*s14 - 4*s23 + 15*s24)) - &
                  m**4*(32*s12**2 - 28*s13**2 - 151*s14**2 - &
                     228*s14*s23 + s23**2 - 25*s14*s24 + 19*s23*s24 + &
                     2*s12*(2*s13 - 9*s14 + 16*s23 + 23*s24) + &
                     s13*(-77*s14 + 35*s23 + 46*s24)) + &
                  s12*(5*s13**3 + 7*s14**3 + s14*s23*(14*s23 - s24) - &
                     9*s23**2*(s23 + s24) + s14**2*(34*s23 + 7*s24) + &
                     s13**2*(-5*s14 - 11*s23 + 15*s24) + &
                     s13*(11*s14**2 + 3*s14*s23 - 25*s23**2 - &
                        4*s14*s24 - 8*s23*s24)) - &
                  m**2*(16*s12**3 + 11*s13**3 + 29*s14**3 + &
                     115*s14**2*s23 + 77*s14*s23**2 + s23**3 + &
                     21*s14**2*s24 + 45*s14*s23*s24 - 5*s23**2*s24 + &
                     s13**2*(3*s14 - 45*s23 + 11*s24) + &
                     s12**2*(43*s13 + 20*s14 - 42*s23 + 11*s24) + &
                     s13*(41*s14**2 + 101*s14*s23 - 57*s23**2 + &
                        17*s14*s24 - 53*s23*s24) + &
                     s12*(38*s13**2 + 9*s14**2 + 124*s14*s23 - &
                        57*s23**2 + 17*s14*s24 - 53*s23*s24 + &
                        s13*(23*s14 - 87*s23 + 22*s24)))) - &
               gm**2*(384*m**10 - &
                  4*m**8*(94*s12 + 151*s13 + 97*s14 + 149*s23 - &
                     13*s24) + &
                  2*m**6*(2*s12**2 + 166*s13**2 + 113*s14**2 + &
                     322*s14*s23 + 99*s23**2 + &
                     s13*(193*s14 + 347*s23 - 64*s24) + &
                     2*s12*(84*s13 + 41*s14 + 99*s23 - 32*s24) + &
                     3*s14*s24 - 43*s23*s24) + &
                  m**4*(98*s12**3 - 69*s13**3 - 62*s14**3 - &
                     267*s14**2*s23 - 283*s14*s23**2 - 6*s23**3 - &
                     3*s13**2*(26*s14 + 94*s23 - 33*s24) - &
                     18*s14**2*s24 - 25*s14*s23*s24 + 30*s23**2*s24 + &
                     s12**2*(127*s13 + 169*s14 + 65*s23 + 99*s24) + &
                     s13*(-199*s14**2 - 471*s14*s23 - 131*s23**2 + &
                        35*s14*s24 + 159*s23*s24) + &
                     s12*(-40*s13**2 - 131*s14**2 - 260*s14*s23 - &
                        27*s23**2 + 35*s14*s24 + 159*s23*s24 + &
                        s13*(91*s14 - 217*s23 + 198*s24))) - &
                  m**2*(33*s12**4 - 3*s13**4 + &
                     s13**3*(7*s14 - 39*s23 + 30*s24) + &
                     s12**3*(96*s13 + 95*s14 + 87*s23 + 30*s24) + &
                     s13**2*(-37*s14**2 - 116*s14*s23 - 11*s23**2 + &
                        33*s14*s24 + 79*s23*s24) + &
                     s13*(-47*s14**3 + 2*s14*s23*(-82*s23 + 3*s24) - &
                        s14**2*(122*s23 + 9*s24) + &
                        3*s23**2*(11*s23 + 19*s24)) + &
                     s23*(-41*s14**3 + 4*s23**2*(s23 + s24) - &
                        s14*s23*(57*s23 + 25*s24) - &
                        s14**2*(95*s23 + 31*s24)) + &
                     s12**2*(90*s13**2 + 17*s14**2 + 30*s14*s23 + &
                        93*s23**2 + 33*s14*s24 + 79*s23*s24 + &
                        s13*(197*s14 + 135*s23 + 90*s24)) + &
                     s12*(24*s13**3 - 41*s14**3 + &
                        2*s14*s23*(-61*s23 + 3*s24) - &
                        3*s14**2*(26*s23 + 3*s24) + &
                        s23**2*(43*s23 + 57*s24) + &
                        s13**2*(109*s14 + 9*s23 + 90*s24) + &
                        s13*(-20*s14**2 - 86*s14*s23 + 82*s23**2 + &
                         66*s14*s24 + 158*s23*s24))) + &
                  (s12 + s13 + s23)*&
                   (3*s12**4 + 3*s13**3*s24 + &
                     3*s12**3*(3*s13 + 3*s14 + 4*s23 + s24) + &
                     s13**2*(-4*s14**2 - 13*s14*s23 + 6*s23**2 + &
                        6*s14*s24 + 9*s23*s24) - &
                     s13*(4*s14**3 + s14*s23*(7*s23 - 3*s24) - &
                        6*s23**2*(s23 + s24) + s14**2*(18*s23 + s24)) - &
                     s14*s23*&
                      (s14**2 + 2*s23*(s23 + s24) + &
                        7*s14*(3*s23 + 2*s24)) + &
                     s12**2*(9*s13**2 + 5*s14**2 + 5*s14*s23 + &
                        15*s23**2 + 6*s14*s24 + 9*s23*s24 + &
                        3*s13*(6*s14 + 8*s23 + 3*s24)) + &
                     s12*(3*s13**3 - s14**3 + 3*s14*s23*(-2*s23 + s24) + &
                        6*s23**2*(s23 + s24) - s14**2*(16*s23 + s24) + &
                        3*s13**2*(3*s14 + 4*s23 + 3*s24) + &
                        s13*(s14**2 + 3*s23*(7*s23 + 6*s24) + &
                         s14*(-8*s23 + 12*s24)))))))/&
           ((-gm**2 - 2*m**2 + s12 + s13 + s14)*(gm**2 - m**2 + s23)**2*&
             (gm**2 - 2*m**2 + s12 + s13 + s23)) + &
          (4*(4*(2*m**2 - s12 - s13 - s14)*&
                (-2*m**2 + s12 + s14 + s24)**2*&
                (10*m**6 - m**4*(3*s12 + 6*s13 + 16*s14 + s23 - s24) + &
                  m**2*(-s12**2 + s13**2 + 7*s13*s14 + 6*s14**2 + &
                     4*s14*s23 + 2*s23**2 + s12*(6*s14 + s23 - s24) - &
                     s13*s24 + s14*s24 + 2*s23*s24) - &
                  s14*(s12**2 + s13**2 + s13*(s14 + 2*s23 + s24) + &
                     s12*(2*s13 + s14 + 3*s23 + s24) + &
                     s23*(s14 + 2*(s23 + s24)))) + &
               2*gm**6*(7*m**6 + &
                  m**4*(6*s12 + 12*s13 - 11*s14 + 6*s23 + 6*s24) + &
                  3*s13*s14*(2*s12 + 3*s13 + 2*(s14 + s23 + s24)) - &
                  m**2*(15*s13**2 + 6*s12*(s13 + s14) + &
                     6*s13*(s14 + s23 + s24) + &
                     2*s14*(s14 + 3*(s23 + s24)))) - &
               gm**4*(220*m**8 + 27*s12**4 - 12*s13**3*s14 - &
                  8*s13**2*s14**2 + 18*s13*s14**3 + 38*s14**4 - &
                  18*s13**2*s14*s23 + 25*s13*s14**2*s23 + &
                  85*s14**3*s23 + 3*s13*s14*s23**2 + 61*s14**2*s23**2 + &
                  12*s14*s23**3 - 5*s13**2*s14*s24 + 59*s13*s14**2*s24 + &
                  100*s14**3*s24 + 3*s13**2*s23*s24 + &
                  46*s13*s14*s23*s24 + 143*s14**2*s23*s24 + &
                  12*s13*s23**2*s24 + 46*s14*s23**2*s24 + &
                  15*s13**2*s24**2 + 65*s13*s14*s24**2 + &
                  86*s14**2*s24**2 + 36*s13*s23*s24**2 + &
                  58*s14*s23*s24**2 + 24*s13*s24**3 + 24*s14*s24**3 + &
                  s12**3*(42*s13 + 119*s14 + 66*s23 + 78*s24) - &
                  2*m**6*(121*s12 - 3*s13 + 212*s14 + 41*s23 + 82*s24) + &
                  s12**2*(15*s13**2 + 195*s14**2 + 219*s14*s23 + &
                     51*s23**2 + 256*s14*s24 + 126*s23*s24 + &
                     75*s24**2 + 3*s13*(38*s14 + 19*s23 + 36*s24)) - &
                  m**4*(222*s12**2 + 107*s13**2 + 79*s14**2 + &
                     349*s14*s23 + 98*s23**2 + 423*s14*s24 + &
                     320*s23*s24 + 236*s24**2 + &
                     s13*(142*s14 - 23*s23 + 13*s24) + &
                     s12*(11*s13 + 401*s14 + 327*s23 + 495*s24)) + &
                  s12*(141*s14**3 + 12*(s23 + s24)**2*(s23 + 2*s24) + &
                     s13**2*(7*s14 + 3*s23 + 30*s24) + &
                     s14**2*(238*s23 + 278*s24) + &
                     s13*(90*s14**2 + 94*s14*s23 + 15*s23**2 + &
                        179*s14*s24 + 93*s23*s24 + 90*s24**2) + &
                     s14*(112*s23**2 + 271*s23*s24 + 161*s24**2)) + &
                  m**2*(51*s12**3 + 12*s13**3 + 35*s14**3 + &
                     49*s14**2*s23 - 23*s14*s23**2 - 12*s23**3 + &
                     48*s14**2*s24 - 56*s14*s23*s24 - 58*s23**2*s24 - &
                     47*s14*s24**2 - 94*s23*s24**2 - 48*s24**3 + &
                     s12**2*(185*s13 + 161*s14 + 44*s23 + 36*s24) + &
                     s13**2*(205*s14 + 9*s23 + 62*s24) + &
                     s13*(238*s14**2 + 258*s14*s23 + 57*s23**2 + &
                        336*s14*s24 + 184*s23*s24 + 117*s24**2) + &
                     s12*(50*s13**2 + 153*s14**2 + 93*s14*s23 - &
                        19*s23**2 + 106*s14*s24 - 68*s23*s24 - &
                        63*s24**2 + s13*(453*s14 + 187*s23 + 302*s24)))) &
- gm**2*(80*m**10 - 4*m**8*(8*s12 + 87*s13 - s14 + 17*s23 + s24) + &
                  2*m**6*(32*s12**2 + 97*s13**2 - 148*s14**2 + &
                     48*s14*s23 + 72*s23**2 - 123*s14*s24 + &
                     119*s23*s24 - 15*s24**2 + &
                     2*s12*(90*s13 - 33*s14 + 63*s23 + 10*s24) + &
                     s13*(383*s14 + 57*s23 + 134*s24)) - &
                  m**4*(56*s12**3 + 28*s13**3 - 147*s14**3 + &
                     125*s14**2*s23 + 116*s14*s23**2 - 18*s23**3 - &
                     190*s14**2*s24 + 263*s14*s23*s24 + 18*s23**2*s24 - &
                     33*s14*s24**2 + 58*s23*s24**2 + 14*s24**3 + &
                     s12**2*(113*s13 + 17*s14 + 115*s23 + 87*s24) + &
                     s13**2*(401*s14 + 18*s23 + 139*s24) + &
                     s13*(470*s14**2 + 239*s14*s23 + 104*s23**2 + &
                        373*s14*s24 + 195*s23*s24 + 3*s24**2) + &
                     s12*(151*s13**2 - 184*s14**2 + 222*s14*s23 + &
                        50*s23**2 - 43*s14*s24 + 161*s23*s24 + &
                        49*s24**2 + s13*(633*s14 + 201*s23 + 128*s24))) + &
                  m**2*(-s12**4 + 39*s14**4 + 101*s14**3*s23 + &
                     12*s14**2*s23**2 - 27*s14*s23**3 + 90*s14**3*s24 + &
                     126*s14**2*s23*s24 - 45*s14*s23**2*s24 - &
                     9*s23**3*s24 + 95*s14**2*s24**2 + &
                     7*s14*s23*s24**2 - 31*s23**2*s24**2 + &
                     40*s14*s24**3 - 28*s23*s24**3 - &
                     s12**3*(14*s13 - 21*s14 + 39*s23 + 2*s24) + &
                     4*s13**3*(11*s14 + 4*s24) + &
                     s13**2*(208*s14**2 + 53*s14*s23 + 199*s14*s24 + &
                        3*s23*s24 - 5*s24**2) + &
                     s12**2*(3*s13**2 + 91*s14**2 - 4*s14*s23 - &
                        59*s23**2 + 2*s13*(71*s14 + 13*s23 - 10*s24) + &
                        96*s14*s24 - 90*s23*s24 - s24**2) + &
                     s13*(161*s14**3 + s23*s24*(38*s23 + 51*s24) + &
                        s14**2*(189*s23 + 208*s24) + &
                        s14*(70*s23**2 + 222*s23*s24 + 45*s24**2)) + &
                     s12*(16*s13**3 + 108*s14**3 + &
                        s13**2*(219*s14 + 3*s23 - 2*s24) + &
                        s14**2*(136*s23 + 203*s24) - &
                        s23*(27*s23**2 + 84*s23*s24 + 79*s24**2) + &
                        s14*(-47*s23**2 + 35*s23*s24 + 119*s24**2) + &
                        s13*(315*s14**2 + 32*s23**2 + 77*s23*s24 - &
                         6*s24**2 + 207*s14*(s23 + s24)))) + &
                  (s12 + s14 + s24)*&
                   (6*s12**4 - 16*s13**3*s14 + &
                     s12**3*(12*s13 + 4*s14 + 21*s23 + 12*s24) + &
                     s13**2*(-28*s14**2 + 3*s24*(s23 + 2*s24) - &
                        2*s14*(13*s23 + 9*s24)) + &
                     s14*(-22*s14**3 - s14**2*(27*s23 + 38*s24) + &
                        s14*(5*s23**2 - 6*s23*s24 - 16*s24**2) + &
                        s23*(9*s23**2 + 22*s23*s24 + 16*s24**2)) - &
                     s13*(34*s14**3 - 3*s23*s24*(3*s23 + 4*s24) + &
                        s14**2*(50*s23 + 53*s24) + &
                        s14*(11*s23**2 + 25*s23*s24 + 16*s24**2)) + &
                     s12**2*(6*s13**2 - 35*s14**2 + 24*s14*s23 + &
                        24*s23**2 - 12*s14*s24 + 33*s23*s24 + 6*s24**2 - &
                        6*s13*(s14 - 4*(s23 + s24))) + &
                     s12*(-55*s14**3 - s14**2*(24*s23 + 65*s24) + &
                        s14*(29*s23**2 + 23*s23*s24 - 16*s24**2) + &
                        3*s23*(3*s23**2 + 7*s23*s24 + 4*s24**2) + &
                        s13**2*(-26*s14 + 3*(s23 + 4*s24)) + &
                        s13*(-55*s14**2 - 2*s14*(11*s23 + 15*s24) + &
                         12*(s23**2 + 3*s23*s24 + s24**2)))))))/&
           ((m**2 - s14)*(-gm**2 - 2*m**2 + s12 + s13 + s14)*&
             (gm**2 - m**2 + s23)*(gm**2 - 2*m**2 + s12 + s14 + s24)))/&
        (12.*gm**4))*(-1 + SUNN**2)**2)/(4.*SUNN)

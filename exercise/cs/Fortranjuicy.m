part_qq = (4*(2*gm**8*(2*m**4 - s12**2 + s14*s23 + &
         m**2*(8*s12 - s13 - s14 - s23 - s24) + s13*s24 - &
         s12*(s13 + s14 + s23 + s24)) + &
      gm**6*(64*m**6 - 36*s12**3 - 2*s13**2*s23 - 13*s13*s14*s23 - &
         5*s14**2*s23 - 2*s13*s23**2 - 5*s14*s23**2 - 5*s13**2*s24 - &
         13*s13*s14*s24 - 2*s14**2*s24 - 13*s13*s23*s24 - 13*s14*s23*s24 - &
         5*s13*s24**2 - 2*s14*s24**2 - 47*s12**2*(s13 + s14 + s23 + s24) - &
         s12*(11*s13**2 + 40*s13*s14 + 11*s14**2 + 24*s13*s23 + &
            26*s14*s23 + 11*s23**2 + 26*s13*s24 + 24*s14*s24 + &
            40*s23*s24 + 11*s24**2) - &
         4*m**4*(44*s12 + 13*(s13 + s14 + s23 + s24)) + &
         m**2*(168*s12**2 + 7*s13**2 + 26*s13*s14 + 7*s14**2 + 30*s13*s23 + &
            42*s14*s23 + 7*s23**2 + 42*s13*s24 + 30*s14*s24 + 26*s23*s24 + &
            7*s24**2 + 100*s12*(s13 + s14 + s23 + s24))) + &
      2*(-4*m**2 + 2*s12 + s13 + s14 + s23 + s24)**2*&
       (32*m**8 + 32*m**6*(s12 - s13 - s14 - s23 - s24) + &
         (2*s12 + s13 + s14 + s23 + s24)**2*(s14*s23 + s13*s24) + &
         2*m**4*(-28*s12**2 + 5*s13**2 + 5*s14**2 + 18*s14*s23 + &
            5*s23**2 + 10*s14*s24 + 10*s23*s24 + 5*s24**2 - &
            4*s12*(s13 + s14 + s23 + s24) + 2*s13*(5*s14 + 5*s23 + 9*s24)) &
+ m**2*(16*s12**3 - s13**3 - s14**3 - 11*s14**2*s23 - 11*s14*s23**2 - &
            s23**3 - 3*s14**2*s24 - 14*s14*s23*s24 - 3*s23**2*s24 - &
            3*s14*s24**2 - 3*s23*s24**2 - s24**3 + &
            12*s12**2*(s13 + s14 + s23 + s24) - &
            s13**2*(3*s14 + 3*s23 + 11*s24) - &
            s13*(3*s14**2 + 3*s23**2 + 14*s23*s24 + 11*s24**2 + &
               14*s14*(s23 + s24)) - &
            2*s12*(s13**2 + s14**2 + s14*(6*s23 - 2*s24) + (s23 + s24)**2 + &
               2*s13*(s14 - s23 + 3*s24)))) + &
      2*gm**4*(192*m**8 + 38*s12**4 + 2*s13**3*s23 + 13*s13**2*s14*s23 + &
         14*s13*s14**2*s23 + 3*s14**3*s23 + 4*s13**2*s23**2 + &
         16*s13*s14*s23**2 + 6*s14**2*s23**2 + 2*s13*s23**3 + &
         3*s14*s23**3 + 3*s13**3*s24 + 14*s13**2*s14*s24 + &
         13*s13*s14**2*s24 + 2*s14**3*s24 + 16*s13**2*s23*s24 + &
         44*s13*s14*s23*s24 + 16*s14**2*s23*s24 + 13*s13*s23**2*s24 + &
         14*s14*s23**2*s24 + 6*s13**2*s24**2 + 16*s13*s14*s24**2 + &
         4*s14**2*s24**2 + 14*s13*s23*s24**2 + 13*s14*s23*s24**2 + &
         3*s13*s24**3 + 2*s14*s24**3 + 82*s12**3*(s13 + s14 + s23 + s24) - &
         16*m**6*(44*s12 + 13*(s13 + s14 + s23 + s24)) + &
         4*m**4*(202*s12**2 + 15*s13**2 + 15*s14**2 + 50*s14*s23 + &
            15*s23**2 + 46*s14*s24 + 42*s23*s24 + 15*s24**2 + &
            140*s12*(s13 + s14 + s23 + s24) + &
            s13*(42*s14 + 46*s23 + 50*s24)) + &
         2*s12**2*(26*s13**2 + 26*s14**2 + 26*(s23 + s24)**2 + &
            s14*(61*s23 + 57*s24) + s13*(52*s14 + 57*s23 + 61*s24)) + &
         s12*(8*s13**3 + 8*s14**3 + 8*s23**3 + 30*s23**2*s24 + &
            30*s23*s24**2 + 8*s24**3 + 4*s14**2*(10*s23 + 9*s24) + &
            s13**2*(30*s14 + 36*s23 + 40*s24) + &
            s14*(40*s23**2 + 94*s23*s24 + 36*s24**2) + &
            s13*(30*s14**2 + 36*s23**2 + 94*s23*s24 + 40*s24**2 + &
               94*s14*(s23 + s24))) - &
         m**2*(304*s12**3 + 5*s13**3 + 5*s14**3 + 47*s14**2*s23 + &
            47*s14*s23**2 + 5*s23**3 + 39*s14**2*s24 + 122*s14*s23*s24 + &
            27*s23**2*s24 + 39*s14*s24**2 + 27*s23*s24**2 + 5*s24**3 + &
            424*s12**2*(s13 + s14 + s23 + s24) + &
            s13**2*(27*s14 + 39*s23 + 47*s24) + &
            s13*(27*s14**2 + 39*s23**2 + 122*s23*s24 + 47*s24**2 + &
               122*s14*(s23 + s24)) + &
            4*s12*(29*s13**2 + 29*s14**2 + 86*s14*s23 + 29*s23**2 + &
               82*s14*s24 + 70*s23*s24 + 29*s24**2 + &
               s13*(70*s14 + 82*s23 + 86*s24)))) + &
      gm**2*(1024*m**10 - 64*m**8*(52*s12 + 21*(s13 + s14 + s23 + s24)) + &
         16*m**6*(172*s12**2 + 37*s13**2 + 37*s14**2 + 102*s14*s23 + &
            37*s23**2 + 90*s14*s24 + 86*s23*s24 + 37*s24**2 + &
            216*s12*(s13 + s14 + s23 + s24) + &
            2*s13*(43*s14 + 45*s23 + 51*s24)) - &
         (2*s12 + s13 + s14 + s23 + s24)**2*&
          (4*s12**3 + 13*s12**2*(s13 + s14 + s23 + s24) + &
            s13**2*(2*s23 + 5*s24) + &
            s14*(5*s14*s23 + 5*s23**2 + 2*s14*s24 + 13*s23*s24 + &
               2*s24**2) + s13*&
             (2*s23**2 + 13*s23*s24 + 5*s24**2 + 13*s14*(s23 + s24)) + &
            s12*(9*s13**2 + 9*s14**2 + 30*s14*s23 + 9*s23**2 + 20*s14*s24 + &
               12*s23*s24 + 9*s24**2 + 2*s13*(6*s14 + 10*s23 + 15*s24))) - &
         4*m**4*(208*s12**3 + 27*s13**3 + 27*s14**3 + 157*s14**2*s23 + &
            157*s14*s23**2 + 27*s23**3 + 121*s14**2*s24 + 326*s14*s23*s24 + &
            105*s23**2*s24 + 121*s14*s24**2 + 105*s23*s24**2 + 27*s24**3 + &
            576*s12**2*(s13 + s14 + s23 + s24) + &
            s13**2*(105*s14 + 121*s23 + 157*s24) + &
            s13*(105*s14**2 + 121*s23**2 + 326*s23*s24 + 157*s24**2 + &
               326*s14*(s23 + s24)) + &
            8*s12*(38*s13**2 + 38*s14**2 + 96*s14*s23 + 38*s23**2 + &
               85*s14*s24 + 79*s23*s24 + 38*s24**2 + &
               s13*(79*s14 + 85*s23 + 96*s24))) + &
         m**2*(112*s12**4 + 7*s13**4 + 7*s14**4 + 96*s14**3*s23 + &
            178*s14**2*s23**2 + 96*s14*s23**3 + 7*s23**4 + 60*s14**3*s24 + &
            344*s14**2*s23*s24 + 324*s14*s23**2*s24 + 40*s23**3*s24 + &
            106*s14**2*s24**2 + 288*s14*s23*s24**2 + 66*s23**2*s24**2 + &
            60*s14*s24**3 + 40*s23*s24**3 + 7*s24**4 + &
            592*s12**3*(s13 + s14 + s23 + s24) + &
            s13**3*(40*s14 + 60*s23 + 96*s24) + &
            2*s13**2*(33*s14**2 + 53*s23**2 + 172*s23*s24 + 89*s24**2 + &
               18*s14*(8*s23 + 9*s24)) + &
            4*s12**2*(151*s13**2 + 151*s14**2 + 366*s14*s23 + 151*s23**2 + &
               314*s14*s24 + 290*s23*s24 + 151*s24**2 + &
               s13*(290*s14 + 314*s23 + 366*s24)) + &
            4*s13*(10*s14**3 + 9*s14**2*(9*s23 + 8*s24) + &
               s14*(86*s23**2 + 202*s23*s24 + 86*s24**2) + &
               3*(5*s23**3 + 24*s23**2*s24 + 27*s23*s24**2 + 8*s24**3)) + &
            16*s12*(11*s13**3 + 11*s14**3 + 11*(s23 + s24)**3 + &
               s14**2*(51*s23 + 40*s24) + &
               s13**2*(33*s14 + 40*s23 + 51*s24) + &
               s14*(51*s23**2 + 97*s23*s24 + 40*s24**2) + &
               s13*(33*s14**2 + 40*s23**2 + 97*s23*s24 + 51*s24**2 + &
                  97*s14*(s23 + s24)))))))/&
  (3.*gm**4*s12**2*(-gm**2 - 4*m**2 + s12 + s13 + s14 + s23 + s24)**2)
